

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Tue Oct 20 00:40:03 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F1788
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext,global,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	dabs	1,0x7E,2
    32  0000                     	;# 
    33  0001                     	;# 
    34  0002                     	;# 
    35  0003                     	;# 
    36  0004                     	;# 
    37  0005                     	;# 
    38  0006                     	;# 
    39  0007                     	;# 
    40  0008                     	;# 
    41  0009                     	;# 
    42  000A                     	;# 
    43  000B                     	;# 
    44  000C                     	;# 
    45  000D                     	;# 
    46  000E                     	;# 
    47  0010                     	;# 
    48  0011                     	;# 
    49  0012                     	;# 
    50  0013                     	;# 
    51  0014                     	;# 
    52  0015                     	;# 
    53  0016                     	;# 
    54  0016                     	;# 
    55  0017                     	;# 
    56  0018                     	;# 
    57  0019                     	;# 
    58  001A                     	;# 
    59  001B                     	;# 
    60  001C                     	;# 
    61  008C                     	;# 
    62  008D                     	;# 
    63  008E                     	;# 
    64  0090                     	;# 
    65  0091                     	;# 
    66  0092                     	;# 
    67  0093                     	;# 
    68  0094                     	;# 
    69  0095                     	;# 
    70  0096                     	;# 
    71  0097                     	;# 
    72  0098                     	;# 
    73  0099                     	;# 
    74  009A                     	;# 
    75  009B                     	;# 
    76  009B                     	;# 
    77  009C                     	;# 
    78  009D                     	;# 
    79  009E                     	;# 
    80  009F                     	;# 
    81  010C                     	;# 
    82  010D                     	;# 
    83  010E                     	;# 
    84  0111                     	;# 
    85  0112                     	;# 
    86  0113                     	;# 
    87  0114                     	;# 
    88  0115                     	;# 
    89  0116                     	;# 
    90  0117                     	;# 
    91  0118                     	;# 
    92  0119                     	;# 
    93  011A                     	;# 
    94  011B                     	;# 
    95  011C                     	;# 
    96  011D                     	;# 
    97  011D                     	;# 
    98  011D                     	;# 
    99  011E                     	;# 
   100  011F                     	;# 
   101  018C                     	;# 
   102  018D                     	;# 
   103  018E                     	;# 
   104  0191                     	;# 
   105  0191                     	;# 
   106  0192                     	;# 
   107  0193                     	;# 
   108  0193                     	;# 
   109  0193                     	;# 
   110  0194                     	;# 
   111  0195                     	;# 
   112  0196                     	;# 
   113  0197                     	;# 
   114  0199                     	;# 
   115  0199                     	;# 
   116  0199                     	;# 
   117  019A                     	;# 
   118  019A                     	;# 
   119  019A                     	;# 
   120  019B                     	;# 
   121  019B                     	;# 
   122  019B                     	;# 
   123  019B                     	;# 
   124  019B                     	;# 
   125  019C                     	;# 
   126  019C                     	;# 
   127  019C                     	;# 
   128  019D                     	;# 
   129  019D                     	;# 
   130  019D                     	;# 
   131  019E                     	;# 
   132  019E                     	;# 
   133  019E                     	;# 
   134  019F                     	;# 
   135  019F                     	;# 
   136  019F                     	;# 
   137  019F                     	;# 
   138  019F                     	;# 
   139  020C                     	;# 
   140  020D                     	;# 
   141  020E                     	;# 
   142  0210                     	;# 
   143  0211                     	;# 
   144  0211                     	;# 
   145  0212                     	;# 
   146  0212                     	;# 
   147  0213                     	;# 
   148  0213                     	;# 
   149  0214                     	;# 
   150  0214                     	;# 
   151  0215                     	;# 
   152  0215                     	;# 
   153  0215                     	;# 
   154  0215                     	;# 
   155  0216                     	;# 
   156  0216                     	;# 
   157  0217                     	;# 
   158  0217                     	;# 
   159  028C                     	;# 
   160  028D                     	;# 
   161  028E                     	;# 
   162  0291                     	;# 
   163  0291                     	;# 
   164  0292                     	;# 
   165  0293                     	;# 
   166  0298                     	;# 
   167  0298                     	;# 
   168  0299                     	;# 
   169  029A                     	;# 
   170  030C                     	;# 
   171  030D                     	;# 
   172  030E                     	;# 
   173  0311                     	;# 
   174  0311                     	;# 
   175  0312                     	;# 
   176  0313                     	;# 
   177  038C                     	;# 
   178  038D                     	;# 
   179  038E                     	;# 
   180  0390                     	;# 
   181  0391                     	;# 
   182  0392                     	;# 
   183  0393                     	;# 
   184  0394                     	;# 
   185  0395                     	;# 
   186  0396                     	;# 
   187  0397                     	;# 
   188  0398                     	;# 
   189  0399                     	;# 
   190  039D                     	;# 
   191  039E                     	;# 
   192  039F                     	;# 
   193  0511                     	;# 
   194  0513                     	;# 
   195  051A                     	;# 
   196  0591                     	;# 
   197  0592                     	;# 
   198  0592                     	;# 
   199  0593                     	;# 
   200  0594                     	;# 
   201  0594                     	;# 
   202  0595                     	;# 
   203  0596                     	;# 
   204  0596                     	;# 
   205  0E91                     	;# 
   206  0E92                     	;# 
   207  0E93                     	;# 
   208  0E94                     	;# 
   209  0E95                     	;# 
   210  0E96                     	;# 
   211  0E97                     	;# 
   212  0E98                     	;# 
   213  0E99                     	;# 
   214  0E9A                     	;# 
   215  0E9B                     	;# 
   216  0E9C                     	;# 
   217  0E9D                     	;# 
   218  0E9E                     	;# 
   219  0E9F                     	;# 
   220  0EA0                     	;# 
   221  0EA1                     	;# 
   222  0EA1                     	;# 
   223  0EA2                     	;# 
   224  0EA3                     	;# 
   225  0EA3                     	;# 
   226  0EA4                     	;# 
   227  0EA5                     	;# 
   228  0EA5                     	;# 
   229  0EA6                     	;# 
   230  0EA7                     	;# 
   231  0EA7                     	;# 
   232  0EA8                     	;# 
   233  0EA9                     	;# 
   234  0EAA                     	;# 
   235  0EAB                     	;# 
   236  0EAC                     	;# 
   237  0EAD                     	;# 
   238  0EAE                     	;# 
   239  0EAF                     	;# 
   240  0EB1                     	;# 
   241  0EB2                     	;# 
   242  0EB3                     	;# 
   243  0EB4                     	;# 
   244  0EB5                     	;# 
   245  0EB6                     	;# 
   246  0EB7                     	;# 
   247  0EB8                     	;# 
   248  0EB9                     	;# 
   249  0EBA                     	;# 
   250  0EBB                     	;# 
   251  0EBC                     	;# 
   252  0EBD                     	;# 
   253  0EBE                     	;# 
   254  0EBF                     	;# 
   255  0EC0                     	;# 
   256  0EC1                     	;# 
   257  0EC1                     	;# 
   258  0EC2                     	;# 
   259  0EC3                     	;# 
   260  0EC3                     	;# 
   261  0EC4                     	;# 
   262  0EC5                     	;# 
   263  0EC5                     	;# 
   264  0EC6                     	;# 
   265  0EC7                     	;# 
   266  0EC7                     	;# 
   267  0EC8                     	;# 
   268  0EC9                     	;# 
   269  0ECA                     	;# 
   270  0ECB                     	;# 
   271  0ECC                     	;# 
   272  0ECD                     	;# 
   273  0ECE                     	;# 
   274  0ECF                     	;# 
   275  0ED1                     	;# 
   276  0ED2                     	;# 
   277  0ED3                     	;# 
   278  0ED4                     	;# 
   279  0ED5                     	;# 
   280  0ED6                     	;# 
   281  0ED7                     	;# 
   282  0ED8                     	;# 
   283  0ED9                     	;# 
   284  0EDA                     	;# 
   285  0EDB                     	;# 
   286  0EDC                     	;# 
   287  0EDD                     	;# 
   288  0EDE                     	;# 
   289  0EDF                     	;# 
   290  0EE0                     	;# 
   291  0EE1                     	;# 
   292  0EE1                     	;# 
   293  0EE2                     	;# 
   294  0EE3                     	;# 
   295  0EE3                     	;# 
   296  0EE4                     	;# 
   297  0EE5                     	;# 
   298  0EE5                     	;# 
   299  0EE6                     	;# 
   300  0EE7                     	;# 
   301  0EE7                     	;# 
   302  0EE8                     	;# 
   303  0EE9                     	;# 
   304  0EEA                     	;# 
   305  0EEB                     	;# 
   306  0EEC                     	;# 
   307  0EED                     	;# 
   308  0EEE                     	;# 
   309  0EEF                     	;# 
   310  0F11                     	;# 
   311  0F12                     	;# 
   312  0F13                     	;# 
   313  0F14                     	;# 
   314  0F15                     	;# 
   315  0F16                     	;# 
   316  0F17                     	;# 
   317  0F18                     	;# 
   318  0F19                     	;# 
   319  0F1A                     	;# 
   320  0F1B                     	;# 
   321  0F1C                     	;# 
   322  0F1D                     	;# 
   323  0F1E                     	;# 
   324  0F1F                     	;# 
   325  0F20                     	;# 
   326  0F21                     	;# 
   327  0F21                     	;# 
   328  0F22                     	;# 
   329  0F23                     	;# 
   330  0F23                     	;# 
   331  0F24                     	;# 
   332  0F25                     	;# 
   333  0F25                     	;# 
   334  0F26                     	;# 
   335  0F27                     	;# 
   336  0F27                     	;# 
   337  0F28                     	;# 
   338  0F29                     	;# 
   339  0F2A                     	;# 
   340  0F2B                     	;# 
   341  0F2C                     	;# 
   342  0F2D                     	;# 
   343  0F2E                     	;# 
   344  0F2F                     	;# 
   345  0FE4                     	;# 
   346  0FE5                     	;# 
   347  0FE6                     	;# 
   348  0FE7                     	;# 
   349  0FE8                     	;# 
   350  0FE9                     	;# 
   351  0FEA                     	;# 
   352  0FEB                     	;# 
   353  0FED                     	;# 
   354  0FEE                     	;# 
   355  0FEF                     	;# 
   356  0000                     	;# 
   357  0001                     	;# 
   358  0002                     	;# 
   359  0003                     	;# 
   360  0004                     	;# 
   361  0005                     	;# 
   362  0006                     	;# 
   363  0007                     	;# 
   364  0008                     	;# 
   365  0009                     	;# 
   366  000A                     	;# 
   367  000B                     	;# 
   368  000C                     	;# 
   369  000D                     	;# 
   370  000E                     	;# 
   371  0010                     	;# 
   372  0011                     	;# 
   373  0012                     	;# 
   374  0013                     	;# 
   375  0014                     	;# 
   376  0015                     	;# 
   377  0016                     	;# 
   378  0016                     	;# 
   379  0017                     	;# 
   380  0018                     	;# 
   381  0019                     	;# 
   382  001A                     	;# 
   383  001B                     	;# 
   384  001C                     	;# 
   385  008C                     	;# 
   386  008D                     	;# 
   387  008E                     	;# 
   388  0090                     	;# 
   389  0091                     	;# 
   390  0092                     	;# 
   391  0093                     	;# 
   392  0094                     	;# 
   393  0095                     	;# 
   394  0096                     	;# 
   395  0097                     	;# 
   396  0098                     	;# 
   397  0099                     	;# 
   398  009A                     	;# 
   399  009B                     	;# 
   400  009B                     	;# 
   401  009C                     	;# 
   402  009D                     	;# 
   403  009E                     	;# 
   404  009F                     	;# 
   405  010C                     	;# 
   406  010D                     	;# 
   407  010E                     	;# 
   408  0111                     	;# 
   409  0112                     	;# 
   410  0113                     	;# 
   411  0114                     	;# 
   412  0115                     	;# 
   413  0116                     	;# 
   414  0117                     	;# 
   415  0118                     	;# 
   416  0119                     	;# 
   417  011A                     	;# 
   418  011B                     	;# 
   419  011C                     	;# 
   420  011D                     	;# 
   421  011D                     	;# 
   422  011D                     	;# 
   423  011E                     	;# 
   424  011F                     	;# 
   425  018C                     	;# 
   426  018D                     	;# 
   427  018E                     	;# 
   428  0191                     	;# 
   429  0191                     	;# 
   430  0192                     	;# 
   431  0193                     	;# 
   432  0193                     	;# 
   433  0193                     	;# 
   434  0194                     	;# 
   435  0195                     	;# 
   436  0196                     	;# 
   437  0197                     	;# 
   438  0199                     	;# 
   439  0199                     	;# 
   440  0199                     	;# 
   441  019A                     	;# 
   442  019A                     	;# 
   443  019A                     	;# 
   444  019B                     	;# 
   445  019B                     	;# 
   446  019B                     	;# 
   447  019B                     	;# 
   448  019B                     	;# 
   449  019C                     	;# 
   450  019C                     	;# 
   451  019C                     	;# 
   452  019D                     	;# 
   453  019D                     	;# 
   454  019D                     	;# 
   455  019E                     	;# 
   456  019E                     	;# 
   457  019E                     	;# 
   458  019F                     	;# 
   459  019F                     	;# 
   460  019F                     	;# 
   461  019F                     	;# 
   462  019F                     	;# 
   463  020C                     	;# 
   464  020D                     	;# 
   465  020E                     	;# 
   466  0210                     	;# 
   467  0211                     	;# 
   468  0211                     	;# 
   469  0212                     	;# 
   470  0212                     	;# 
   471  0213                     	;# 
   472  0213                     	;# 
   473  0214                     	;# 
   474  0214                     	;# 
   475  0215                     	;# 
   476  0215                     	;# 
   477  0215                     	;# 
   478  0215                     	;# 
   479  0216                     	;# 
   480  0216                     	;# 
   481  0217                     	;# 
   482  0217                     	;# 
   483  028C                     	;# 
   484  028D                     	;# 
   485  028E                     	;# 
   486  0291                     	;# 
   487  0291                     	;# 
   488  0292                     	;# 
   489  0293                     	;# 
   490  0298                     	;# 
   491  0298                     	;# 
   492  0299                     	;# 
   493  029A                     	;# 
   494  030C                     	;# 
   495  030D                     	;# 
   496  030E                     	;# 
   497  0311                     	;# 
   498  0311                     	;# 
   499  0312                     	;# 
   500  0313                     	;# 
   501  038C                     	;# 
   502  038D                     	;# 
   503  038E                     	;# 
   504  0390                     	;# 
   505  0391                     	;# 
   506  0392                     	;# 
   507  0393                     	;# 
   508  0394                     	;# 
   509  0395                     	;# 
   510  0396                     	;# 
   511  0397                     	;# 
   512  0398                     	;# 
   513  0399                     	;# 
   514  039D                     	;# 
   515  039E                     	;# 
   516  039F                     	;# 
   517  0511                     	;# 
   518  0513                     	;# 
   519  051A                     	;# 
   520  0591                     	;# 
   521  0592                     	;# 
   522  0592                     	;# 
   523  0593                     	;# 
   524  0594                     	;# 
   525  0594                     	;# 
   526  0595                     	;# 
   527  0596                     	;# 
   528  0596                     	;# 
   529  0E91                     	;# 
   530  0E92                     	;# 
   531  0E93                     	;# 
   532  0E94                     	;# 
   533  0E95                     	;# 
   534  0E96                     	;# 
   535  0E97                     	;# 
   536  0E98                     	;# 
   537  0E99                     	;# 
   538  0E9A                     	;# 
   539  0E9B                     	;# 
   540  0E9C                     	;# 
   541  0E9D                     	;# 
   542  0E9E                     	;# 
   543  0E9F                     	;# 
   544  0EA0                     	;# 
   545  0EA1                     	;# 
   546  0EA1                     	;# 
   547  0EA2                     	;# 
   548  0EA3                     	;# 
   549  0EA3                     	;# 
   550  0EA4                     	;# 
   551  0EA5                     	;# 
   552  0EA5                     	;# 
   553  0EA6                     	;# 
   554  0EA7                     	;# 
   555  0EA7                     	;# 
   556  0EA8                     	;# 
   557  0EA9                     	;# 
   558  0EAA                     	;# 
   559  0EAB                     	;# 
   560  0EAC                     	;# 
   561  0EAD                     	;# 
   562  0EAE                     	;# 
   563  0EAF                     	;# 
   564  0EB1                     	;# 
   565  0EB2                     	;# 
   566  0EB3                     	;# 
   567  0EB4                     	;# 
   568  0EB5                     	;# 
   569  0EB6                     	;# 
   570  0EB7                     	;# 
   571  0EB8                     	;# 
   572  0EB9                     	;# 
   573  0EBA                     	;# 
   574  0EBB                     	;# 
   575  0EBC                     	;# 
   576  0EBD                     	;# 
   577  0EBE                     	;# 
   578  0EBF                     	;# 
   579  0EC0                     	;# 
   580  0EC1                     	;# 
   581  0EC1                     	;# 
   582  0EC2                     	;# 
   583  0EC3                     	;# 
   584  0EC3                     	;# 
   585  0EC4                     	;# 
   586  0EC5                     	;# 
   587  0EC5                     	;# 
   588  0EC6                     	;# 
   589  0EC7                     	;# 
   590  0EC7                     	;# 
   591  0EC8                     	;# 
   592  0EC9                     	;# 
   593  0ECA                     	;# 
   594  0ECB                     	;# 
   595  0ECC                     	;# 
   596  0ECD                     	;# 
   597  0ECE                     	;# 
   598  0ECF                     	;# 
   599  0ED1                     	;# 
   600  0ED2                     	;# 
   601  0ED3                     	;# 
   602  0ED4                     	;# 
   603  0ED5                     	;# 
   604  0ED6                     	;# 
   605  0ED7                     	;# 
   606  0ED8                     	;# 
   607  0ED9                     	;# 
   608  0EDA                     	;# 
   609  0EDB                     	;# 
   610  0EDC                     	;# 
   611  0EDD                     	;# 
   612  0EDE                     	;# 
   613  0EDF                     	;# 
   614  0EE0                     	;# 
   615  0EE1                     	;# 
   616  0EE1                     	;# 
   617  0EE2                     	;# 
   618  0EE3                     	;# 
   619  0EE3                     	;# 
   620  0EE4                     	;# 
   621  0EE5                     	;# 
   622  0EE5                     	;# 
   623  0EE6                     	;# 
   624  0EE7                     	;# 
   625  0EE7                     	;# 
   626  0EE8                     	;# 
   627  0EE9                     	;# 
   628  0EEA                     	;# 
   629  0EEB                     	;# 
   630  0EEC                     	;# 
   631  0EED                     	;# 
   632  0EEE                     	;# 
   633  0EEF                     	;# 
   634  0F11                     	;# 
   635  0F12                     	;# 
   636  0F13                     	;# 
   637  0F14                     	;# 
   638  0F15                     	;# 
   639  0F16                     	;# 
   640  0F17                     	;# 
   641  0F18                     	;# 
   642  0F19                     	;# 
   643  0F1A                     	;# 
   644  0F1B                     	;# 
   645  0F1C                     	;# 
   646  0F1D                     	;# 
   647  0F1E                     	;# 
   648  0F1F                     	;# 
   649  0F20                     	;# 
   650  0F21                     	;# 
   651  0F21                     	;# 
   652  0F22                     	;# 
   653  0F23                     	;# 
   654  0F23                     	;# 
   655  0F24                     	;# 
   656  0F25                     	;# 
   657  0F25                     	;# 
   658  0F26                     	;# 
   659  0F27                     	;# 
   660  0F27                     	;# 
   661  0F28                     	;# 
   662  0F29                     	;# 
   663  0F2A                     	;# 
   664  0F2B                     	;# 
   665  0F2C                     	;# 
   666  0F2D                     	;# 
   667  0F2E                     	;# 
   668  0F2F                     	;# 
   669  0FE4                     	;# 
   670  0FE5                     	;# 
   671  0FE6                     	;# 
   672  0FE7                     	;# 
   673  0FE8                     	;# 
   674  0FE9                     	;# 
   675  0FEA                     	;# 
   676  0FEB                     	;# 
   677  0FED                     	;# 
   678  0FEE                     	;# 
   679  0FEF                     	;# 
   680  0000                     	;# 
   681  0001                     	;# 
   682  0002                     	;# 
   683  0003                     	;# 
   684  0004                     	;# 
   685  0005                     	;# 
   686  0006                     	;# 
   687  0007                     	;# 
   688  0008                     	;# 
   689  0009                     	;# 
   690  000A                     	;# 
   691  000B                     	;# 
   692  000C                     	;# 
   693  000D                     	;# 
   694  000E                     	;# 
   695  0010                     	;# 
   696  0011                     	;# 
   697  0012                     	;# 
   698  0013                     	;# 
   699  0014                     	;# 
   700  0015                     	;# 
   701  0016                     	;# 
   702  0016                     	;# 
   703  0017                     	;# 
   704  0018                     	;# 
   705  0019                     	;# 
   706  001A                     	;# 
   707  001B                     	;# 
   708  001C                     	;# 
   709  008C                     	;# 
   710  008D                     	;# 
   711  008E                     	;# 
   712  0090                     	;# 
   713  0091                     	;# 
   714  0092                     	;# 
   715  0093                     	;# 
   716  0094                     	;# 
   717  0095                     	;# 
   718  0096                     	;# 
   719  0097                     	;# 
   720  0098                     	;# 
   721  0099                     	;# 
   722  009A                     	;# 
   723  009B                     	;# 
   724  009B                     	;# 
   725  009C                     	;# 
   726  009D                     	;# 
   727  009E                     	;# 
   728  009F                     	;# 
   729  010C                     	;# 
   730  010D                     	;# 
   731  010E                     	;# 
   732  0111                     	;# 
   733  0112                     	;# 
   734  0113                     	;# 
   735  0114                     	;# 
   736  0115                     	;# 
   737  0116                     	;# 
   738  0117                     	;# 
   739  0118                     	;# 
   740  0119                     	;# 
   741  011A                     	;# 
   742  011B                     	;# 
   743  011C                     	;# 
   744  011D                     	;# 
   745  011D                     	;# 
   746  011D                     	;# 
   747  011E                     	;# 
   748  011F                     	;# 
   749  018C                     	;# 
   750  018D                     	;# 
   751  018E                     	;# 
   752  0191                     	;# 
   753  0191                     	;# 
   754  0192                     	;# 
   755  0193                     	;# 
   756  0193                     	;# 
   757  0193                     	;# 
   758  0194                     	;# 
   759  0195                     	;# 
   760  0196                     	;# 
   761  0197                     	;# 
   762  0199                     	;# 
   763  0199                     	;# 
   764  0199                     	;# 
   765  019A                     	;# 
   766  019A                     	;# 
   767  019A                     	;# 
   768  019B                     	;# 
   769  019B                     	;# 
   770  019B                     	;# 
   771  019B                     	;# 
   772  019B                     	;# 
   773  019C                     	;# 
   774  019C                     	;# 
   775  019C                     	;# 
   776  019D                     	;# 
   777  019D                     	;# 
   778  019D                     	;# 
   779  019E                     	;# 
   780  019E                     	;# 
   781  019E                     	;# 
   782  019F                     	;# 
   783  019F                     	;# 
   784  019F                     	;# 
   785  019F                     	;# 
   786  019F                     	;# 
   787  020C                     	;# 
   788  020D                     	;# 
   789  020E                     	;# 
   790  0210                     	;# 
   791  0211                     	;# 
   792  0211                     	;# 
   793  0212                     	;# 
   794  0212                     	;# 
   795  0213                     	;# 
   796  0213                     	;# 
   797  0214                     	;# 
   798  0214                     	;# 
   799  0215                     	;# 
   800  0215                     	;# 
   801  0215                     	;# 
   802  0215                     	;# 
   803  0216                     	;# 
   804  0216                     	;# 
   805  0217                     	;# 
   806  0217                     	;# 
   807  028C                     	;# 
   808  028D                     	;# 
   809  028E                     	;# 
   810  0291                     	;# 
   811  0291                     	;# 
   812  0292                     	;# 
   813  0293                     	;# 
   814  0298                     	;# 
   815  0298                     	;# 
   816  0299                     	;# 
   817  029A                     	;# 
   818  030C                     	;# 
   819  030D                     	;# 
   820  030E                     	;# 
   821  0311                     	;# 
   822  0311                     	;# 
   823  0312                     	;# 
   824  0313                     	;# 
   825  038C                     	;# 
   826  038D                     	;# 
   827  038E                     	;# 
   828  0390                     	;# 
   829  0391                     	;# 
   830  0392                     	;# 
   831  0393                     	;# 
   832  0394                     	;# 
   833  0395                     	;# 
   834  0396                     	;# 
   835  0397                     	;# 
   836  0398                     	;# 
   837  0399                     	;# 
   838  039D                     	;# 
   839  039E                     	;# 
   840  039F                     	;# 
   841  0511                     	;# 
   842  0513                     	;# 
   843  051A                     	;# 
   844  0591                     	;# 
   845  0592                     	;# 
   846  0592                     	;# 
   847  0593                     	;# 
   848  0594                     	;# 
   849  0594                     	;# 
   850  0595                     	;# 
   851  0596                     	;# 
   852  0596                     	;# 
   853  0E91                     	;# 
   854  0E92                     	;# 
   855  0E93                     	;# 
   856  0E94                     	;# 
   857  0E95                     	;# 
   858  0E96                     	;# 
   859  0E97                     	;# 
   860  0E98                     	;# 
   861  0E99                     	;# 
   862  0E9A                     	;# 
   863  0E9B                     	;# 
   864  0E9C                     	;# 
   865  0E9D                     	;# 
   866  0E9E                     	;# 
   867  0E9F                     	;# 
   868  0EA0                     	;# 
   869  0EA1                     	;# 
   870  0EA1                     	;# 
   871  0EA2                     	;# 
   872  0EA3                     	;# 
   873  0EA3                     	;# 
   874  0EA4                     	;# 
   875  0EA5                     	;# 
   876  0EA5                     	;# 
   877  0EA6                     	;# 
   878  0EA7                     	;# 
   879  0EA7                     	;# 
   880  0EA8                     	;# 
   881  0EA9                     	;# 
   882  0EAA                     	;# 
   883  0EAB                     	;# 
   884  0EAC                     	;# 
   885  0EAD                     	;# 
   886  0EAE                     	;# 
   887  0EAF                     	;# 
   888  0EB1                     	;# 
   889  0EB2                     	;# 
   890  0EB3                     	;# 
   891  0EB4                     	;# 
   892  0EB5                     	;# 
   893  0EB6                     	;# 
   894  0EB7                     	;# 
   895  0EB8                     	;# 
   896  0EB9                     	;# 
   897  0EBA                     	;# 
   898  0EBB                     	;# 
   899  0EBC                     	;# 
   900  0EBD                     	;# 
   901  0EBE                     	;# 
   902  0EBF                     	;# 
   903  0EC0                     	;# 
   904  0EC1                     	;# 
   905  0EC1                     	;# 
   906  0EC2                     	;# 
   907  0EC3                     	;# 
   908  0EC3                     	;# 
   909  0EC4                     	;# 
   910  0EC5                     	;# 
   911  0EC5                     	;# 
   912  0EC6                     	;# 
   913  0EC7                     	;# 
   914  0EC7                     	;# 
   915  0EC8                     	;# 
   916  0EC9                     	;# 
   917  0ECA                     	;# 
   918  0ECB                     	;# 
   919  0ECC                     	;# 
   920  0ECD                     	;# 
   921  0ECE                     	;# 
   922  0ECF                     	;# 
   923  0ED1                     	;# 
   924  0ED2                     	;# 
   925  0ED3                     	;# 
   926  0ED4                     	;# 
   927  0ED5                     	;# 
   928  0ED6                     	;# 
   929  0ED7                     	;# 
   930  0ED8                     	;# 
   931  0ED9                     	;# 
   932  0EDA                     	;# 
   933  0EDB                     	;# 
   934  0EDC                     	;# 
   935  0EDD                     	;# 
   936  0EDE                     	;# 
   937  0EDF                     	;# 
   938  0EE0                     	;# 
   939  0EE1                     	;# 
   940  0EE1                     	;# 
   941  0EE2                     	;# 
   942  0EE3                     	;# 
   943  0EE3                     	;# 
   944  0EE4                     	;# 
   945  0EE5                     	;# 
   946  0EE5                     	;# 
   947  0EE6                     	;# 
   948  0EE7                     	;# 
   949  0EE7                     	;# 
   950  0EE8                     	;# 
   951  0EE9                     	;# 
   952  0EEA                     	;# 
   953  0EEB                     	;# 
   954  0EEC                     	;# 
   955  0EED                     	;# 
   956  0EEE                     	;# 
   957  0EEF                     	;# 
   958  0F11                     	;# 
   959  0F12                     	;# 
   960  0F13                     	;# 
   961  0F14                     	;# 
   962  0F15                     	;# 
   963  0F16                     	;# 
   964  0F17                     	;# 
   965  0F18                     	;# 
   966  0F19                     	;# 
   967  0F1A                     	;# 
   968  0F1B                     	;# 
   969  0F1C                     	;# 
   970  0F1D                     	;# 
   971  0F1E                     	;# 
   972  0F1F                     	;# 
   973  0F20                     	;# 
   974  0F21                     	;# 
   975  0F21                     	;# 
   976  0F22                     	;# 
   977  0F23                     	;# 
   978  0F23                     	;# 
   979  0F24                     	;# 
   980  0F25                     	;# 
   981  0F25                     	;# 
   982  0F26                     	;# 
   983  0F27                     	;# 
   984  0F27                     	;# 
   985  0F28                     	;# 
   986  0F29                     	;# 
   987  0F2A                     	;# 
   988  0F2B                     	;# 
   989  0F2C                     	;# 
   990  0F2D                     	;# 
   991  0F2E                     	;# 
   992  0F2F                     	;# 
   993  0FE4                     	;# 
   994  0FE5                     	;# 
   995  0FE6                     	;# 
   996  0FE7                     	;# 
   997  0FE8                     	;# 
   998  0FE9                     	;# 
   999  0FEA                     	;# 
  1000  0FEB                     	;# 
  1001  0FED                     	;# 
  1002  0FEE                     	;# 
  1003  0FEF                     	;# 
  1004                           
  1005                           	psect	idataBANK0
  1006  01D8                     __pidataBANK0:	
  1007                           
  1008                           ;initializer for _health
  1009  01D8  3432               	retlw	50
  1010                           
  1011                           	psect	stringtext
  1012  0800                     __pstringtext:	
  1013  0800                     _dpowers:	
  1014  0800  3401               	retlw	1
  1015  0801  3400               	retlw	0
  1016  0802  340A               	retlw	10
  1017  0803  3400               	retlw	0
  1018  0804  3464               	retlw	100
  1019  0805  3400               	retlw	0
  1020  0806  34E8               	retlw	232
  1021  0807  3403               	retlw	3
  1022  0808  3410               	retlw	16
  1023  0809  3427               	retlw	39
  1024  080A                     __end_of_dpowers:	
  1025  005F                     _GIE	set	95
  1026  006B                     _RB3	set	107
  1027  008D                     _RCIF	set	141
  1028  0099                     _OSCCON	set	153
  1029  008D                     _TRISB	set	141
  1030  008E                     _TRISC	set	142
  1031  048D                     _RCIE	set	1165
  1032  0199                     _RCREG	set	409
  1033  019B                     _SPBRG	set	411
  1034  019A                     _TXREG	set	410
  1035  0CFB                     _BRG16	set	3323
  1036  0CF2                     _BRGH	set	3314
  1037  0CEC                     _CREN	set	3308
  1038  0CEF                     _SPEN	set	3311
  1039  0CF4                     _SYNC	set	3316
  1040  0CF1                     _TRMT	set	3313
  1041  0CF5                     _TXEN	set	3317
  1042  080A                     STR_26:	
  1043  080A  3450               	retlw	80	;'P'
  1044  080B  3472               	retlw	114	;'r'
  1045  080C  3465               	retlw	101	;'e'
  1046  080D  3473               	retlw	115	;'s'
  1047  080E  3473               	retlw	115	;'s'
  1048  080F  3420               	retlw	32	;' '
  1049  0810  3427               	retlw	39	;'''
  1050  0811  3464               	retlw	100	;'d'
  1051  0812  3427               	retlw	39	;'''
  1052  0813  342C               	retlw	44	;','
  1053  0814  3420               	retlw	32	;' '
  1054  0815  3427               	retlw	39	;'''
  1055  0816  3468               	retlw	104	;'h'
  1056  0817  3427               	retlw	39	;'''
  1057  0818  342C               	retlw	44	;','
  1058  0819  3420               	retlw	32	;' '
  1059  081A  346F               	retlw	111	;'o'
  1060  081B  3472               	retlw	114	;'r'
  1061  081C  3420               	retlw	32	;' '
  1062  081D  3427               	retlw	39	;'''
  1063  081E  3474               	retlw	116	;'t'
  1064  081F  3427               	retlw	39	;'''
  1065  0820  3420               	retlw	32	;' '
  1066  0821  3474               	retlw	116	;'t'
  1067  0822  346F               	retlw	111	;'o'
  1068  0823  3420               	retlw	32	;' '
  1069  0824  3473               	retlw	115	;'s'
  1070  0825  3465               	retlw	101	;'e'
  1071  0826  346E               	retlw	110	;'n'
  1072  0827  3464               	retlw	100	;'d'
  1073  0828  3420               	retlw	32	;' '
  1074  0829  3464               	retlw	100	;'d'
  1075  082A  3461               	retlw	97	;'a'
  1076  082B  346D               	retlw	109	;'m'
  1077  082C  3461               	retlw	97	;'a'
  1078  082D  3467               	retlw	103	;'g'
  1079  082E  3465               	retlw	101	;'e'
  1080  082F  342C               	retlw	44	;','
  1081  0830  3420               	retlw	32	;' '
  1082  0831  3468               	retlw	104	;'h'
  1083  0832  3465               	retlw	101	;'e'
  1084  0833  3461               	retlw	97	;'a'
  1085  0834  346C               	retlw	108	;'l'
  1086  0835  3474               	retlw	116	;'t'
  1087  0836  3468               	retlw	104	;'h'
  1088  0837  342C               	retlw	44	;','
  1089  0838  3420               	retlw	32	;' '
  1090  0839  346F               	retlw	111	;'o'
  1091  083A  3472               	retlw	114	;'r'
  1092  083B  3420               	retlw	32	;' '
  1093  083C  3473               	retlw	115	;'s'
  1094  083D  3474               	retlw	116	;'t'
  1095  083E  3475               	retlw	117	;'u'
  1096  083F  346E               	retlw	110	;'n'
  1097  0840  3420               	retlw	32	;' '
  1098  0841  3470               	retlw	112	;'p'
  1099  0842  3461               	retlw	97	;'a'
  1100  0843  3463               	retlw	99	;'c'
  1101  0844  346B               	retlw	107	;'k'
  1102  0845  3465               	retlw	101	;'e'
  1103  0846  3474               	retlw	116	;'t'
  1104  0847  3473               	retlw	115	;'s'
  1105  0848  342E               	retlw	46	;'.'
  1106  0849  340A               	retlw	10
  1107  084A  340D               	retlw	13
  1108  084B  3400               	retlw	0
  1109  084C                     STR_14:	
  1110  084C  340A               	retlw	10
  1111  084D  340D               	retlw	13
  1112  084E  3457               	retlw	87	;'W'
  1113  084F  3468               	retlw	104	;'h'
  1114  0850  3469               	retlw	105	;'i'
  1115  0851  3463               	retlw	99	;'c'
  1116  0852  3468               	retlw	104	;'h'
  1117  0853  3420               	retlw	32	;' '
  1118  0854  3462               	retlw	98	;'b'
  1119  0855  346C               	retlw	108	;'l'
  1120  0856  3461               	retlw	97	;'a'
  1121  0857  3464               	retlw	100	;'d'
  1122  0858  3465               	retlw	101	;'e'
  1123  0859  3420               	retlw	32	;' '
  1124  085A  3477               	retlw	119	;'w'
  1125  085B  346F               	retlw	111	;'o'
  1126  085C  3475               	retlw	117	;'u'
  1127  085D  346C               	retlw	108	;'l'
  1128  085E  3464               	retlw	100	;'d'
  1129  085F  3420               	retlw	32	;' '
  1130  0860  3479               	retlw	121	;'y'
  1131  0861  346F               	retlw	111	;'o'
  1132  0862  3475               	retlw	117	;'u'
  1133  0863  3420               	retlw	32	;' '
  1134  0864  346C               	retlw	108	;'l'
  1135  0865  3469               	retlw	105	;'i'
  1136  0866  346B               	retlw	107	;'k'
  1137  0867  3465               	retlw	101	;'e'
  1138  0868  3420               	retlw	32	;' '
  1139  0869  3474               	retlw	116	;'t'
  1140  086A  346F               	retlw	111	;'o'
  1141  086B  3420               	retlw	32	;' '
  1142  086C  3474               	retlw	116	;'t'
  1143  086D  3465               	retlw	101	;'e'
  1144  086E  3473               	retlw	115	;'s'
  1145  086F  3474               	retlw	116	;'t'
  1146  0870  343F               	retlw	63	;'?'
  1147  0871  3420               	retlw	32	;' '
  1148  0872  3445               	retlw	69	;'E'
  1149  0873  346E               	retlw	110	;'n'
  1150  0874  3474               	retlw	116	;'t'
  1151  0875  3465               	retlw	101	;'e'
  1152  0876  3472               	retlw	114	;'r'
  1153  0877  3420               	retlw	32	;' '
  1154  0878  3461               	retlw	97	;'a'
  1155  0879  3420               	retlw	32	;' '
  1156  087A  3466               	retlw	102	;'f'
  1157  087B  346F               	retlw	111	;'o'
  1158  087C  3472               	retlw	114	;'r'
  1159  087D  3420               	retlw	32	;' '
  1160  087E  3441               	retlw	65	;'A'
  1161  087F  346C               	retlw	108	;'l'
  1162  0880  3470               	retlw	112	;'p'
  1163  0881  3468               	retlw	104	;'h'
  1164  0882  3461               	retlw	97	;'a'
  1165  0883  342C               	retlw	44	;','
  1166  0884  3420               	retlw	32	;' '
  1167  0885  3462               	retlw	98	;'b'
  1168  0886  3420               	retlw	32	;' '
  1169  0887  3466               	retlw	102	;'f'
  1170  0888  346F               	retlw	111	;'o'
  1171  0889  3472               	retlw	114	;'r'
  1172  088A  340A               	retlw	10
  1173  088B  340D               	retlw	13
  1174  088C  3400               	retlw	0
  1175  088D                     STR_13:	
  1176  088D  340A               	retlw	10
  1177  088E  340D               	retlw	13
  1178  088F  343D               	retlw	61	;'='
  1179  0890  343D               	retlw	61	;'='
  1180  0891  343D               	retlw	61	;'='
  1181  0892  343D               	retlw	61	;'='
  1182  0893  343D               	retlw	61	;'='
  1183  0894  343D               	retlw	61	;'='
  1184  0895  343D               	retlw	61	;'='
  1185  0896  343D               	retlw	61	;'='
  1186  0897  343D               	retlw	61	;'='
  1187  0898  343D               	retlw	61	;'='
  1188  0899  343D               	retlw	61	;'='
  1189  089A  343D               	retlw	61	;'='
  1190  089B  343D               	retlw	61	;'='
  1191  089C  343D               	retlw	61	;'='
  1192  089D  343D               	retlw	61	;'='
  1193  089E  343D               	retlw	61	;'='
  1194  089F  343D               	retlw	61	;'='
  1195  08A0  343D               	retlw	61	;'='
  1196  08A1  343D               	retlw	61	;'='
  1197  08A2  343D               	retlw	61	;'='
  1198  08A3  343D               	retlw	61	;'='
  1199  08A4  343D               	retlw	61	;'='
  1200  08A5  343D               	retlw	61	;'='
  1201  08A6  343D               	retlw	61	;'='
  1202  08A7  343D               	retlw	61	;'='
  1203  08A8  343D               	retlw	61	;'='
  1204  08A9  343D               	retlw	61	;'='
  1205  08AA  343D               	retlw	61	;'='
  1206  08AB  343D               	retlw	61	;'='
  1207  08AC  343D               	retlw	61	;'='
  1208  08AD  343D               	retlw	61	;'='
  1209  08AE  343D               	retlw	61	;'='
  1210  08AF  343D               	retlw	61	;'='
  1211  08B0  343D               	retlw	61	;'='
  1212  08B1  343D               	retlw	61	;'='
  1213  08B2  343D               	retlw	61	;'='
  1214  08B3  343D               	retlw	61	;'='
  1215  08B4  343D               	retlw	61	;'='
  1216  08B5  343D               	retlw	61	;'='
  1217  08B6  343D               	retlw	61	;'='
  1218  08B7  343D               	retlw	61	;'='
  1219  08B8  343D               	retlw	61	;'='
  1220  08B9  343D               	retlw	61	;'='
  1221  08BA  343D               	retlw	61	;'='
  1222  08BB  343D               	retlw	61	;'='
  1223  08BC  343D               	retlw	61	;'='
  1224  08BD  343D               	retlw	61	;'='
  1225  08BE  343D               	retlw	61	;'='
  1226  08BF  343D               	retlw	61	;'='
  1227  08C0  343D               	retlw	61	;'='
  1228  08C1  343D               	retlw	61	;'='
  1229  08C2  343D               	retlw	61	;'='
  1230  08C3  343D               	retlw	61	;'='
  1231  08C4  343D               	retlw	61	;'='
  1232  08C5  343D               	retlw	61	;'='
  1233  08C6  343D               	retlw	61	;'='
  1234  08C7  343D               	retlw	61	;'='
  1235  08C8  340A               	retlw	10
  1236  08C9  340D               	retlw	13
  1237  08CA  3400               	retlw	0
  1238  08CB                     STR_25:	
  1239  08CB  3450               	retlw	80	;'P'
  1240  08CC  3472               	retlw	114	;'r'
  1241  08CD  3465               	retlw	101	;'e'
  1242  08CE  3473               	retlw	115	;'s'
  1243  08CF  3473               	retlw	115	;'s'
  1244  08D0  3420               	retlw	32	;' '
  1245  08D1  3427               	retlw	39	;'''
  1246  08D2  3473               	retlw	115	;'s'
  1247  08D3  3427               	retlw	39	;'''
  1248  08D4  3420               	retlw	32	;' '
  1249  08D5  3474               	retlw	116	;'t'
  1250  08D6  346F               	retlw	111	;'o'
  1251  08D7  3420               	retlw	32	;' '
  1252  08D8  3473               	retlw	115	;'s'
  1253  08D9  3477               	retlw	119	;'w'
  1254  08DA  3469               	retlw	105	;'i'
  1255  08DB  346E               	retlw	110	;'n'
  1256  08DC  3467               	retlw	103	;'g'
  1257  08DD  3420               	retlw	32	;' '
  1258  08DE  3474               	retlw	116	;'t'
  1259  08DF  3468               	retlw	104	;'h'
  1260  08E0  3465               	retlw	101	;'e'
  1261  08E1  3420               	retlw	32	;' '
  1262  08E2  3473               	retlw	115	;'s'
  1263  08E3  3477               	retlw	119	;'w'
  1264  08E4  346F               	retlw	111	;'o'
  1265  08E5  3472               	retlw	114	;'r'
  1266  08E6  3464               	retlw	100	;'d'
  1267  08E7  3420               	retlw	32	;' '
  1268  08E8  3461               	retlw	97	;'a'
  1269  08E9  346E               	retlw	110	;'n'
  1270  08EA  3464               	retlw	100	;'d'
  1271  08EB  3420               	retlw	32	;' '
  1272  08EC  3473               	retlw	115	;'s'
  1273  08ED  3465               	retlw	101	;'e'
  1274  08EE  3465               	retlw	101	;'e'
  1275  08EF  3420               	retlw	32	;' '
  1276  08F0  3477               	retlw	119	;'w'
  1277  08F1  3468               	retlw	104	;'h'
  1278  08F2  3461               	retlw	97	;'a'
  1279  08F3  3474               	retlw	116	;'t'
  1280  08F4  3420               	retlw	32	;' '
  1281  08F5  3468               	retlw	104	;'h'
  1282  08F6  3461               	retlw	97	;'a'
  1283  08F7  3470               	retlw	112	;'p'
  1284  08F8  3470               	retlw	112	;'p'
  1285  08F9  3465               	retlw	101	;'e'
  1286  08FA  346E               	retlw	110	;'n'
  1287  08FB  3473               	retlw	115	;'s'
  1288  08FC  3421               	retlw	33	;'!'
  1289  08FD  340A               	retlw	10
  1290  08FE  340D               	retlw	13
  1291  08FF  3400               	retlw	0
  1292  0900                     STR_52:	
  1293  0900  340A               	retlw	10
  1294  0901  340D               	retlw	13
  1295  0902  3447               	retlw	71	;'G'
  1296  0903  346F               	retlw	111	;'o'
  1297  0904  346F               	retlw	111	;'o'
  1298  0905  3464               	retlw	100	;'d'
  1299  0906  3420               	retlw	32	;' '
  1300  0907  346A               	retlw	106	;'j'
  1301  0908  346F               	retlw	111	;'o'
  1302  0909  3462               	retlw	98	;'b'
  1303  090A  342E               	retlw	46	;'.'
  1304  090B  3420               	retlw	32	;' '
  1305  090C  3459               	retlw	89	;'Y'
  1306  090D  346F               	retlw	111	;'o'
  1307  090E  3475               	retlw	117	;'u'
  1308  090F  3420               	retlw	32	;' '
  1309  0910  346B               	retlw	107	;'k'
  1310  0911  346E               	retlw	110	;'n'
  1311  0912  346F               	retlw	111	;'o'
  1312  0913  3477               	retlw	119	;'w'
  1313  0914  3420               	retlw	32	;' '
  1314  0915  3468               	retlw	104	;'h'
  1315  0916  346F               	retlw	111	;'o'
  1316  0917  3477               	retlw	119	;'w'
  1317  0918  3420               	retlw	32	;' '
  1318  0919  3474               	retlw	116	;'t'
  1319  091A  346F               	retlw	111	;'o'
  1320  091B  3420               	retlw	32	;' '
  1321  091C  3472               	retlw	114	;'r'
  1322  091D  3465               	retlw	101	;'e'
  1323  091E  3461               	retlw	97	;'a'
  1324  091F  3464               	retlw	100	;'d'
  1325  0920  3420               	retlw	32	;' '
  1326  0921  3469               	retlw	105	;'i'
  1327  0922  346E               	retlw	110	;'n'
  1328  0923  3473               	retlw	115	;'s'
  1329  0924  3474               	retlw	116	;'t'
  1330  0925  3472               	retlw	114	;'r'
  1331  0926  3475               	retlw	117	;'u'
  1332  0927  3463               	retlw	99	;'c'
  1333  0928  3474               	retlw	116	;'t'
  1334  0929  3469               	retlw	105	;'i'
  1335  092A  346F               	retlw	111	;'o'
  1336  092B  346E               	retlw	110	;'n'
  1337  092C  3473               	retlw	115	;'s'
  1338  092D  342E               	retlw	46	;'.'
  1339  092E  340A               	retlw	10
  1340  092F  340A               	retlw	10
  1341  0930  3400               	retlw	0
  1342  0931                     STR_10:	
  1343  0931  3444               	retlw	68	;'D'
  1344  0932  3469               	retlw	105	;'i'
  1345  0933  3473               	retlw	115	;'s'
  1346  0934  3470               	retlw	112	;'p'
  1347  0935  346C               	retlw	108	;'l'
  1348  0936  3461               	retlw	97	;'a'
  1349  0937  3479               	retlw	121	;'y'
  1350  0938  3465               	retlw	101	;'e'
  1351  0939  3464               	retlw	100	;'d'
  1352  093A  3420               	retlw	32	;' '
  1353  093B  3469               	retlw	105	;'i'
  1354  093C  346E               	retlw	110	;'n'
  1355  093D  3464               	retlw	100	;'d'
  1356  093E  3469               	retlw	105	;'i'
  1357  093F  3476               	retlw	118	;'v'
  1358  0940  3469               	retlw	105	;'i'
  1359  0941  3464               	retlw	100	;'d'
  1360  0942  3475               	retlw	117	;'u'
  1361  0943  3461               	retlw	97	;'a'
  1362  0944  346C               	retlw	108	;'l'
  1363  0945  3420               	retlw	32	;' '
  1364  0946  3473               	retlw	115	;'s'
  1365  0947  3477               	retlw	119	;'w'
  1366  0948  346F               	retlw	111	;'o'
  1367  0949  3472               	retlw	114	;'r'
  1368  094A  3464               	retlw	100	;'d'
  1369  094B  3420               	retlw	32	;' '
  1370  094C  3473               	retlw	115	;'s'
  1371  094D  3477               	retlw	119	;'w'
  1372  094E  3469               	retlw	105	;'i'
  1373  094F  346E               	retlw	110	;'n'
  1374  0950  3467               	retlw	103	;'g'
  1375  0951  3420               	retlw	32	;' '
  1376  0952  346C               	retlw	108	;'l'
  1377  0953  3469               	retlw	105	;'i'
  1378  0954  3467               	retlw	103	;'g'
  1379  0955  3468               	retlw	104	;'h'
  1380  0956  3474               	retlw	116	;'t'
  1381  0957  3420               	retlw	32	;' '
  1382  0958  3473               	retlw	115	;'s'
  1383  0959  3468               	retlw	104	;'h'
  1384  095A  346F               	retlw	111	;'o'
  1385  095B  3477               	retlw	119	;'w'
  1386  095C  342E               	retlw	46	;'.'
  1387  095D  340A               	retlw	10
  1388  095E  340D               	retlw	13
  1389  095F  3400               	retlw	0
  1390  0960                     STR_29:	
  1391  0960  3454               	retlw	84	;'T'
  1392  0961  3468               	retlw	104	;'h'
  1393  0962  3465               	retlw	101	;'e'
  1394  0963  3420               	retlw	32	;' '
  1395  0964  3462               	retlw	98	;'b'
  1396  0965  346C               	retlw	108	;'l'
  1397  0966  3461               	retlw	97	;'a'
  1398  0967  3464               	retlw	100	;'d'
  1399  0968  3465               	retlw	101	;'e'
  1400  0969  3420               	retlw	32	;' '
  1401  096A  3468               	retlw	104	;'h'
  1402  096B  3461               	retlw	97	;'a'
  1403  096C  3473               	retlw	115	;'s'
  1404  096D  3420               	retlw	32	;' '
  1405  096E  3462               	retlw	98	;'b'
  1406  096F  3465               	retlw	101	;'e'
  1407  0970  3465               	retlw	101	;'e'
  1408  0971  346E               	retlw	110	;'n'
  1409  0972  3420               	retlw	32	;' '
  1410  0973  3464               	retlw	100	;'d'
  1411  0974  3461               	retlw	97	;'a'
  1412  0975  346D               	retlw	109	;'m'
  1413  0976  3461               	retlw	97	;'a'
  1414  0977  3467               	retlw	103	;'g'
  1415  0978  3465               	retlw	101	;'e'
  1416  0979  3464               	retlw	100	;'d'
  1417  097A  342E               	retlw	46	;'.'
  1418  097B  3420               	retlw	32	;' '
  1419  097C  3448               	retlw	72	;'H'
  1420  097D  3465               	retlw	101	;'e'
  1421  097E  3461               	retlw	97	;'a'
  1422  097F  346C               	retlw	108	;'l'
  1423  0980  3474               	retlw	116	;'t'
  1424  0981  3468               	retlw	104	;'h'
  1425  0982  3420               	retlw	32	;' '
  1426  0983  343D               	retlw	61	;'='
  1427  0984  3420               	retlw	32	;' '
  1428  0985  3425               	retlw	37	;'%'
  1429  0986  3464               	retlw	100	;'d'
  1430  0987  342E               	retlw	46	;'.'
  1431  0988  340A               	retlw	10
  1432  0989  340D               	retlw	13
  1433  098A  3400               	retlw	0
  1434  098B                     STR_30:	
  1435  098B  3454               	retlw	84	;'T'
  1436  098C  3468               	retlw	104	;'h'
  1437  098D  3465               	retlw	101	;'e'
  1438  098E  3420               	retlw	32	;' '
  1439  098F  3462               	retlw	98	;'b'
  1440  0990  346C               	retlw	108	;'l'
  1441  0991  3461               	retlw	97	;'a'
  1442  0992  3464               	retlw	100	;'d'
  1443  0993  3465               	retlw	101	;'e'
  1444  0994  3420               	retlw	32	;' '
  1445  0995  3468               	retlw	104	;'h'
  1446  0996  3461               	retlw	97	;'a'
  1447  0997  3473               	retlw	115	;'s'
  1448  0998  3420               	retlw	32	;' '
  1449  0999  3462               	retlw	98	;'b'
  1450  099A  3465               	retlw	101	;'e'
  1451  099B  3465               	retlw	101	;'e'
  1452  099C  346E               	retlw	110	;'n'
  1453  099D  3420               	retlw	32	;' '
  1454  099E  3468               	retlw	104	;'h'
  1455  099F  3465               	retlw	101	;'e'
  1456  09A0  3461               	retlw	97	;'a'
  1457  09A1  346C               	retlw	108	;'l'
  1458  09A2  3465               	retlw	101	;'e'
  1459  09A3  3464               	retlw	100	;'d'
  1460  09A4  342E               	retlw	46	;'.'
  1461  09A5  3420               	retlw	32	;' '
  1462  09A6  3448               	retlw	72	;'H'
  1463  09A7  3465               	retlw	101	;'e'
  1464  09A8  3461               	retlw	97	;'a'
  1465  09A9  346C               	retlw	108	;'l'
  1466  09AA  3474               	retlw	116	;'t'
  1467  09AB  3468               	retlw	104	;'h'
  1468  09AC  3420               	retlw	32	;' '
  1469  09AD  343D               	retlw	61	;'='
  1470  09AE  3420               	retlw	32	;' '
  1471  09AF  3425               	retlw	37	;'%'
  1472  09B0  3464               	retlw	100	;'d'
  1473  09B1  342E               	retlw	46	;'.'
  1474  09B2  340A               	retlw	10
  1475  09B3  340D               	retlw	13
  1476  09B4  3400               	retlw	0
  1477  09B5                     STR_11:	
  1478  09B5  3444               	retlw	68	;'D'
  1479  09B6  3469               	retlw	105	;'i'
  1480  09B7  3473               	retlw	115	;'s'
  1481  09B8  3470               	retlw	112	;'p'
  1482  09B9  346C               	retlw	108	;'l'
  1483  09BA  3461               	retlw	97	;'a'
  1484  09BB  3479               	retlw	121	;'y'
  1485  09BC  3465               	retlw	101	;'e'
  1486  09BD  3464               	retlw	100	;'d'
  1487  09BE  3420               	retlw	32	;' '
  1488  09BF  344F               	retlw	79	;'O'
  1489  09C0  346D               	retlw	109	;'m'
  1490  09C1  3465               	retlw	101	;'e'
  1491  09C2  3467               	retlw	103	;'g'
  1492  09C3  3461               	retlw	97	;'a'
  1493  09C4  3420               	retlw	32	;' '
  1494  09C5  3462               	retlw	98	;'b'
  1495  09C6  346C               	retlw	108	;'l'
  1496  09C7  3461               	retlw	97	;'a'
  1497  09C8  3464               	retlw	100	;'d'
  1498  09C9  3465               	retlw	101	;'e'
  1499  09CA  3420               	retlw	32	;' '
  1500  09CB  3473               	retlw	115	;'s'
  1501  09CC  3477               	retlw	119	;'w'
  1502  09CD  3469               	retlw	105	;'i'
  1503  09CE  346E               	retlw	110	;'n'
  1504  09CF  3467               	retlw	103	;'g'
  1505  09D0  3420               	retlw	32	;' '
  1506  09D1  346C               	retlw	108	;'l'
  1507  09D2  3469               	retlw	105	;'i'
  1508  09D3  3467               	retlw	103	;'g'
  1509  09D4  3468               	retlw	104	;'h'
  1510  09D5  3474               	retlw	116	;'t'
  1511  09D6  3420               	retlw	32	;' '
  1512  09D7  3473               	retlw	115	;'s'
  1513  09D8  3468               	retlw	104	;'h'
  1514  09D9  346F               	retlw	111	;'o'
  1515  09DA  3477               	retlw	119	;'w'
  1516  09DB  342E               	retlw	46	;'.'
  1517  09DC  340A               	retlw	10
  1518  09DD  340D               	retlw	13
  1519  09DE  3400               	retlw	0
  1520  09DF                     STR_21:	
  1521  09DF  3441               	retlw	65	;'A'
  1522  09E0  3472               	retlw	114	;'r'
  1523  09E1  3465               	retlw	101	;'e'
  1524  09E2  3420               	retlw	32	;' '
  1525  09E3  3474               	retlw	116	;'t'
  1526  09E4  3468               	retlw	104	;'h'
  1527  09E5  3465               	retlw	101	;'e'
  1528  09E6  3420               	retlw	32	;' '
  1529  09E7  3462               	retlw	98	;'b'
  1530  09E8  346C               	retlw	108	;'l'
  1531  09E9  3461               	retlw	97	;'a'
  1532  09EA  3464               	retlw	100	;'d'
  1533  09EB  3465               	retlw	101	;'e'
  1534  09EC  3473               	retlw	115	;'s'
  1535  09ED  3420               	retlw	32	;' '
  1536  09EE  3469               	retlw	105	;'i'
  1537  09EF  346E               	retlw	110	;'n'
  1538  09F0  3420               	retlw	32	;' '
  1539  09F1  346F               	retlw	111	;'o'
  1540  09F2  346D               	retlw	109	;'m'
  1541  09F3  3465               	retlw	101	;'e'
  1542  09F4  3467               	retlw	103	;'g'
  1543  09F5  3461               	retlw	97	;'a'
  1544  09F6  3420               	retlw	32	;' '
  1545  09F7  346D               	retlw	109	;'m'
  1546  09F8  346F               	retlw	111	;'o'
  1547  09F9  3464               	retlw	100	;'d'
  1548  09FA  3465               	retlw	101	;'e'
  1549  09FB  343F               	retlw	63	;'?'
  1550  09FC  3420               	retlw	32	;' '
  1551  09FD  3428               	retlw	40	;'('
  1552  09FE  3479               	retlw	121	;'y'
  1553  09FF  342F               	retlw	47	;'/'
  1554  0A00  346E               	retlw	110	;'n'
  1555  0A01  3429               	retlw	41	;')'
  1556  0A02  340A               	retlw	10
  1557  0A03  340D               	retlw	13
  1558  0A04  3400               	retlw	0
  1559  0A05                     STR_15:	
  1560  0A05  3442               	retlw	66	;'B'
  1561  0A06  3465               	retlw	101	;'e'
  1562  0A07  3474               	retlw	116	;'t'
  1563  0A08  3461               	retlw	97	;'a'
  1564  0A09  342C               	retlw	44	;','
  1565  0A0A  3420               	retlw	32	;' '
  1566  0A0B  3464               	retlw	100	;'d'
  1567  0A0C  3420               	retlw	32	;' '
  1568  0A0D  3466               	retlw	102	;'f'
  1569  0A0E  346F               	retlw	111	;'o'
  1570  0A0F  3472               	retlw	114	;'r'
  1571  0A10  3420               	retlw	32	;' '
  1572  0A11  3444               	retlw	68	;'D'
  1573  0A12  3465               	retlw	101	;'e'
  1574  0A13  346C               	retlw	108	;'l'
  1575  0A14  3474               	retlw	116	;'t'
  1576  0A15  3461               	retlw	97	;'a'
  1577  0A16  342C               	retlw	44	;','
  1578  0A17  3420               	retlw	32	;' '
  1579  0A18  346F               	retlw	111	;'o'
  1580  0A19  3472               	retlw	114	;'r'
  1581  0A1A  3420               	retlw	32	;' '
  1582  0A1B  3467               	retlw	103	;'g'
  1583  0A1C  3420               	retlw	32	;' '
  1584  0A1D  3466               	retlw	102	;'f'
  1585  0A1E  346F               	retlw	111	;'o'
  1586  0A1F  3472               	retlw	114	;'r'
  1587  0A20  3420               	retlw	32	;' '
  1588  0A21  3447               	retlw	71	;'G'
  1589  0A22  3461               	retlw	97	;'a'
  1590  0A23  346D               	retlw	109	;'m'
  1591  0A24  346D               	retlw	109	;'m'
  1592  0A25  3461               	retlw	97	;'a'
  1593  0A26  342E               	retlw	46	;'.'
  1594  0A27  340A               	retlw	10
  1595  0A28  340D               	retlw	13
  1596  0A29  3400               	retlw	0
  1597  0A2A                     STR_27:	
  1598  0A2A  3450               	retlw	80	;'P'
  1599  0A2B  3472               	retlw	114	;'r'
  1600  0A2C  3465               	retlw	101	;'e'
  1601  0A2D  3473               	retlw	115	;'s'
  1602  0A2E  3473               	retlw	115	;'s'
  1603  0A2F  3420               	retlw	32	;' '
  1604  0A30  3427               	retlw	39	;'''
  1605  0A31  346F               	retlw	111	;'o'
  1606  0A32  3427               	retlw	39	;'''
  1607  0A33  3420               	retlw	32	;' '
  1608  0A34  3474               	retlw	116	;'t'
  1609  0A35  346F               	retlw	111	;'o'
  1610  0A36  3420               	retlw	32	;' '
  1611  0A37  3474               	retlw	116	;'t'
  1612  0A38  346F               	retlw	111	;'o'
  1613  0A39  3467               	retlw	103	;'g'
  1614  0A3A  3467               	retlw	103	;'g'
  1615  0A3B  346C               	retlw	108	;'l'
  1616  0A3C  3465               	retlw	101	;'e'
  1617  0A3D  3420               	retlw	32	;' '
  1618  0A3E  344F               	retlw	79	;'O'
  1619  0A3F  346D               	retlw	109	;'m'
  1620  0A40  3465               	retlw	101	;'e'
  1621  0A41  3467               	retlw	103	;'g'
  1622  0A42  3461               	retlw	97	;'a'
  1623  0A43  3420               	retlw	32	;' '
  1624  0A44  346D               	retlw	109	;'m'
  1625  0A45  346F               	retlw	111	;'o'
  1626  0A46  3464               	retlw	100	;'d'
  1627  0A47  3465               	retlw	101	;'e'
  1628  0A48  342E               	retlw	46	;'.'
  1629  0A49  340A               	retlw	10
  1630  0A4A  340D               	retlw	13
  1631  0A4B  340A               	retlw	10
  1632  0A4C  340D               	retlw	13
  1633  0A4D  3400               	retlw	0
  1634  0A4E                     STR_1:	
  1635  0A4E  3449               	retlw	73	;'I'
  1636  0A4F  346E               	retlw	110	;'n'
  1637  0A50  3469               	retlw	105	;'i'
  1638  0A51  3474               	retlw	116	;'t'
  1639  0A52  3469               	retlw	105	;'i'
  1640  0A53  3461               	retlw	97	;'a'
  1641  0A54  346C               	retlw	108	;'l'
  1642  0A55  3469               	retlw	105	;'i'
  1643  0A56  347A               	retlw	122	;'z'
  1644  0A57  3465               	retlw	101	;'e'
  1645  0A58  3464               	retlw	100	;'d'
  1646  0A59  3420               	retlw	32	;' '
  1647  0A5A  3449               	retlw	73	;'I'
  1648  0A5B  3452               	retlw	82	;'R'
  1649  0A5C  3420               	retlw	32	;' '
  1650  0A5D  3473               	retlw	115	;'s'
  1651  0A5E  3465               	retlw	101	;'e'
  1652  0A5F  346E               	retlw	110	;'n'
  1653  0A60  3464               	retlw	100	;'d'
  1654  0A61  342F               	retlw	47	;'/'
  1655  0A62  3472               	retlw	114	;'r'
  1656  0A63  3465               	retlw	101	;'e'
  1657  0A64  3463               	retlw	99	;'c'
  1658  0A65  3465               	retlw	101	;'e'
  1659  0A66  3469               	retlw	105	;'i'
  1660  0A67  3476               	retlw	118	;'v'
  1661  0A68  3465               	retlw	101	;'e'
  1662  0A69  3420               	retlw	32	;' '
  1663  0A6A  3463               	retlw	99	;'c'
  1664  0A6B  346F               	retlw	111	;'o'
  1665  0A6C  3464               	retlw	100	;'d'
  1666  0A6D  3465               	retlw	101	;'e'
  1667  0A6E  342E               	retlw	46	;'.'
  1668  0A6F  340A               	retlw	10
  1669  0A70  340D               	retlw	13
  1670  0A71  3400               	retlw	0
  1671  0A72                     STR_7:	
  1672  0A72  3450               	retlw	80	;'P'
  1673  0A73  346C               	retlw	108	;'l'
  1674  0A74  3461               	retlw	97	;'a'
  1675  0A75  3479               	retlw	121	;'y'
  1676  0A76  3465               	retlw	101	;'e'
  1677  0A77  3464               	retlw	100	;'d'
  1678  0A78  3420               	retlw	32	;' '
  1679  0A79  344F               	retlw	79	;'O'
  1680  0A7A  346D               	retlw	109	;'m'
  1681  0A7B  3465               	retlw	101	;'e'
  1682  0A7C  3467               	retlw	103	;'g'
  1683  0A7D  3461               	retlw	97	;'a'
  1684  0A7E  3420               	retlw	32	;' '
  1685  0A7F  3462               	retlw	98	;'b'
  1686  0A80  346C               	retlw	108	;'l'
  1687  0A81  3461               	retlw	97	;'a'
  1688  0A82  3464               	retlw	100	;'d'
  1689  0A83  3465               	retlw	101	;'e'
  1690  0A84  3420               	retlw	32	;' '
  1691  0A85  3473               	retlw	115	;'s'
  1692  0A86  3477               	retlw	119	;'w'
  1693  0A87  3469               	retlw	105	;'i'
  1694  0A88  346E               	retlw	110	;'n'
  1695  0A89  3467               	retlw	103	;'g'
  1696  0A8A  3420               	retlw	32	;' '
  1697  0A8B  3473               	retlw	115	;'s'
  1698  0A8C  346F               	retlw	111	;'o'
  1699  0A8D  3475               	retlw	117	;'u'
  1700  0A8E  346E               	retlw	110	;'n'
  1701  0A8F  3464               	retlw	100	;'d'
  1702  0A90  342E               	retlw	46	;'.'
  1703  0A91  340A               	retlw	10
  1704  0A92  340D               	retlw	13
  1705  0A93  3400               	retlw	0
  1706  0A94                     STR_6:	
  1707  0A94  3450               	retlw	80	;'P'
  1708  0A95  346C               	retlw	108	;'l'
  1709  0A96  3461               	retlw	97	;'a'
  1710  0A97  3479               	retlw	121	;'y'
  1711  0A98  3465               	retlw	101	;'e'
  1712  0A99  3464               	retlw	100	;'d'
  1713  0A9A  3420               	retlw	32	;' '
  1714  0A9B  3442               	retlw	66	;'B'
  1715  0A9C  3465               	retlw	101	;'e'
  1716  0A9D  3474               	retlw	116	;'t'
  1717  0A9E  3461               	retlw	97	;'a'
  1718  0A9F  3420               	retlw	32	;' '
  1719  0AA0  3462               	retlw	98	;'b'
  1720  0AA1  346C               	retlw	108	;'l'
  1721  0AA2  3461               	retlw	97	;'a'
  1722  0AA3  3464               	retlw	100	;'d'
  1723  0AA4  3465               	retlw	101	;'e'
  1724  0AA5  3420               	retlw	32	;' '
  1725  0AA6  3473               	retlw	115	;'s'
  1726  0AA7  3477               	retlw	119	;'w'
  1727  0AA8  3469               	retlw	105	;'i'
  1728  0AA9  346E               	retlw	110	;'n'
  1729  0AAA  3467               	retlw	103	;'g'
  1730  0AAB  3420               	retlw	32	;' '
  1731  0AAC  3473               	retlw	115	;'s'
  1732  0AAD  346F               	retlw	111	;'o'
  1733  0AAE  3475               	retlw	117	;'u'
  1734  0AAF  346E               	retlw	110	;'n'
  1735  0AB0  3464               	retlw	100	;'d'
  1736  0AB1  342E               	retlw	46	;'.'
  1737  0AB2  340A               	retlw	10
  1738  0AB3  340D               	retlw	13
  1739  0AB4  3400               	retlw	0
  1740  0AB5                     STR_51:	
  1741  0AB5  3450               	retlw	80	;'P'
  1742  0AB6  346C               	retlw	108	;'l'
  1743  0AB7  3465               	retlw	101	;'e'
  1744  0AB8  3461               	retlw	97	;'a'
  1745  0AB9  3473               	retlw	115	;'s'
  1746  0ABA  3465               	retlw	101	;'e'
  1747  0ABB  3420               	retlw	32	;' '
  1748  0ABC  3465               	retlw	101	;'e'
  1749  0ABD  346E               	retlw	110	;'n'
  1750  0ABE  3474               	retlw	116	;'t'
  1751  0ABF  3465               	retlw	101	;'e'
  1752  0AC0  3472               	retlw	114	;'r'
  1753  0AC1  3420               	retlw	32	;' '
  1754  0AC2  3474               	retlw	116	;'t'
  1755  0AC3  3468               	retlw	104	;'h'
  1756  0AC4  3465               	retlw	101	;'e'
  1757  0AC5  3420               	retlw	32	;' '
  1758  0AC6  3463               	retlw	99	;'c'
  1759  0AC7  3468               	retlw	104	;'h'
  1760  0AC8  3461               	retlw	97	;'a'
  1761  0AC9  3472               	retlw	114	;'r'
  1762  0ACA  3461               	retlw	97	;'a'
  1763  0ACB  3463               	retlw	99	;'c'
  1764  0ACC  3474               	retlw	116	;'t'
  1765  0ACD  3465               	retlw	101	;'e'
  1766  0ACE  3472               	retlw	114	;'r'
  1767  0ACF  3420               	retlw	32	;' '
  1768  0AD0  3441               	retlw	65	;'A'
  1769  0AD1  343A               	retlw	58	;':'
  1770  0AD2  3420               	retlw	32	;' '
  1771  0AD3  3400               	retlw	0
  1772  0AD4                     STR_31:	
  1773  0AD4  3454               	retlw	84	;'T'
  1774  0AD5  3468               	retlw	104	;'h'
  1775  0AD6  3465               	retlw	101	;'e'
  1776  0AD7  3420               	retlw	32	;' '
  1777  0AD8  3462               	retlw	98	;'b'
  1778  0AD9  346C               	retlw	108	;'l'
  1779  0ADA  3461               	retlw	97	;'a'
  1780  0ADB  3464               	retlw	100	;'d'
  1781  0ADC  3465               	retlw	101	;'e'
  1782  0ADD  3420               	retlw	32	;' '
  1783  0ADE  3468               	retlw	104	;'h'
  1784  0ADF  3461               	retlw	97	;'a'
  1785  0AE0  3473               	retlw	115	;'s'
  1786  0AE1  3420               	retlw	32	;' '
  1787  0AE2  3462               	retlw	98	;'b'
  1788  0AE3  3465               	retlw	101	;'e'
  1789  0AE4  3465               	retlw	101	;'e'
  1790  0AE5  346E               	retlw	110	;'n'
  1791  0AE6  3420               	retlw	32	;' '
  1792  0AE7  3473               	retlw	115	;'s'
  1793  0AE8  3474               	retlw	116	;'t'
  1794  0AE9  3475               	retlw	117	;'u'
  1795  0AEA  346E               	retlw	110	;'n'
  1796  0AEB  346E               	retlw	110	;'n'
  1797  0AEC  3465               	retlw	101	;'e'
  1798  0AED  3464               	retlw	100	;'d'
  1799  0AEE  342E               	retlw	46	;'.'
  1800  0AEF  340A               	retlw	10
  1801  0AF0  340D               	retlw	13
  1802  0AF1  3400               	retlw	0
  1803  0AF2                     STR_8:	
  1804  0AF2  3449               	retlw	73	;'I'
  1805  0AF3  346E               	retlw	110	;'n'
  1806  0AF4  3469               	retlw	105	;'i'
  1807  0AF5  3474               	retlw	116	;'t'
  1808  0AF6  3469               	retlw	105	;'i'
  1809  0AF7  3461               	retlw	97	;'a'
  1810  0AF8  346C               	retlw	108	;'l'
  1811  0AF9  3469               	retlw	105	;'i'
  1812  0AFA  347A               	retlw	122	;'z'
  1813  0AFB  3465               	retlw	101	;'e'
  1814  0AFC  3464               	retlw	100	;'d'
  1815  0AFD  3420               	retlw	32	;' '
  1816  0AFE  3461               	retlw	97	;'a'
  1817  0AFF  3463               	retlw	99	;'c'
  1818  0B00  3463               	retlw	99	;'c'
  1819  0B01  3465               	retlw	101	;'e'
  1820  0B02  346C               	retlw	108	;'l'
  1821  0B03  3465               	retlw	101	;'e'
  1822  0B04  3472               	retlw	114	;'r'
  1823  0B05  346F               	retlw	111	;'o'
  1824  0B06  346D               	retlw	109	;'m'
  1825  0B07  3465               	retlw	101	;'e'
  1826  0B08  3474               	retlw	116	;'t'
  1827  0B09  3465               	retlw	101	;'e'
  1828  0B0A  3472               	retlw	114	;'r'
  1829  0B0B  342E               	retlw	46	;'.'
  1830  0B0C  340A               	retlw	10
  1831  0B0D  340D               	retlw	13
  1832  0B0E  3400               	retlw	0
  1833  0B0F                     STR_20:	
  1834  0B0F  3449               	retlw	73	;'I'
  1835  0B10  346E               	retlw	110	;'n'
  1836  0B11  3476               	retlw	118	;'v'
  1837  0B12  3461               	retlw	97	;'a'
  1838  0B13  346C               	retlw	108	;'l'
  1839  0B14  3469               	retlw	105	;'i'
  1840  0B15  3464               	retlw	100	;'d'
  1841  0B16  3420               	retlw	32	;' '
  1842  0B17  3469               	retlw	105	;'i'
  1843  0B18  346E               	retlw	110	;'n'
  1844  0B19  3470               	retlw	112	;'p'
  1845  0B1A  3475               	retlw	117	;'u'
  1846  0B1B  3474               	retlw	116	;'t'
  1847  0B1C  342E               	retlw	46	;'.'
  1848  0B1D  3420               	retlw	32	;' '
  1849  0B1E  3454               	retlw	84	;'T'
  1850  0B1F  3472               	retlw	114	;'r'
  1851  0B20  3479               	retlw	121	;'y'
  1852  0B21  3420               	retlw	32	;' '
  1853  0B22  3461               	retlw	97	;'a'
  1854  0B23  3467               	retlw	103	;'g'
  1855  0B24  3461               	retlw	97	;'a'
  1856  0B25  3469               	retlw	105	;'i'
  1857  0B26  346E               	retlw	110	;'n'
  1858  0B27  342E               	retlw	46	;'.'
  1859  0B28  340A               	retlw	10
  1860  0B29  340D               	retlw	13
  1861  0B2A  3400               	retlw	0
  1862  0B2B                     STR_53:	
  1863  0B2B  340A               	retlw	10
  1864  0B2C  340D               	retlw	13
  1865  0B2D  3457               	retlw	87	;'W'
  1866  0B2E  3472               	retlw	114	;'r'
  1867  0B2F  346F               	retlw	111	;'o'
  1868  0B30  346E               	retlw	110	;'n'
  1869  0B31  3467               	retlw	103	;'g'
  1870  0B32  3420               	retlw	32	;' '
  1871  0B33  346B               	retlw	107	;'k'
  1872  0B34  3465               	retlw	101	;'e'
  1873  0B35  3479               	retlw	121	;'y'
  1874  0B36  342E               	retlw	46	;'.'
  1875  0B37  3420               	retlw	32	;' '
  1876  0B38  3454               	retlw	84	;'T'
  1877  0B39  3472               	retlw	114	;'r'
  1878  0B3A  3479               	retlw	121	;'y'
  1879  0B3B  3420               	retlw	32	;' '
  1880  0B3C  3461               	retlw	97	;'a'
  1881  0B3D  3467               	retlw	103	;'g'
  1882  0B3E  3461               	retlw	97	;'a'
  1883  0B3F  3469               	retlw	105	;'i'
  1884  0B40  346E               	retlw	110	;'n'
  1885  0B41  342E               	retlw	46	;'.'
  1886  0B42  340A               	retlw	10
  1887  0B43  340D               	retlw	13
  1888  0B44  3400               	retlw	0
  1889  0B45                     STR_50:	
  1890  0B45  340A               	retlw	10
  1891  0B46  340D               	retlw	13
  1892  0B47  344D               	retlw	77	;'M'
  1893  0B48  3461               	retlw	97	;'a'
  1894  0B49  3469               	retlw	105	;'i'
  1895  0B4A  346E               	retlw	110	;'n'
  1896  0B4B  3420               	retlw	32	;' '
  1897  0B4C  344C               	retlw	76	;'L'
  1898  0B4D  346F               	retlw	111	;'o'
  1899  0B4E  346F               	retlw	111	;'o'
  1900  0B4F  3470               	retlw	112	;'p'
  1901  0B50  3420               	retlw	32	;' '
  1902  0B51  3449               	retlw	73	;'I'
  1903  0B52  346E               	retlw	110	;'n'
  1904  0B53  3464               	retlw	100	;'d'
  1905  0B54  3469               	retlw	105	;'i'
  1906  0B55  3476               	retlw	118	;'v'
  1907  0B56  3469               	retlw	105	;'i'
  1908  0B57  3464               	retlw	100	;'d'
  1909  0B58  3475               	retlw	117	;'u'
  1910  0B59  3461               	retlw	97	;'a'
  1911  0B5A  346C               	retlw	108	;'l'
  1912  0B5B  340A               	retlw	10
  1913  0B5C  340D               	retlw	13
  1914  0B5D  3400               	retlw	0
  1915  0B5E                     STR_33:	
  1916  0B5E  344F               	retlw	79	;'O'
  1917  0B5F  346D               	retlw	109	;'m'
  1918  0B60  3465               	retlw	101	;'e'
  1919  0B61  3467               	retlw	103	;'g'
  1920  0B62  3461               	retlw	97	;'a'
  1921  0B63  3420               	retlw	32	;' '
  1922  0B64  346D               	retlw	109	;'m'
  1923  0B65  346F               	retlw	111	;'o'
  1924  0B66  3464               	retlw	100	;'d'
  1925  0B67  3465               	retlw	101	;'e'
  1926  0B68  3420               	retlw	32	;' '
  1927  0B69  3464               	retlw	100	;'d'
  1928  0B6A  3469               	retlw	105	;'i'
  1929  0B6B  3473               	retlw	115	;'s'
  1930  0B6C  3461               	retlw	97	;'a'
  1931  0B6D  3462               	retlw	98	;'b'
  1932  0B6E  346C               	retlw	108	;'l'
  1933  0B6F  3465               	retlw	101	;'e'
  1934  0B70  3464               	retlw	100	;'d'
  1935  0B71  342E               	retlw	46	;'.'
  1936  0B72  340A               	retlw	10
  1937  0B73  340D               	retlw	13
  1938  0B74  3400               	retlw	0
  1939  0B75                     STR_32:	
  1940  0B75  344F               	retlw	79	;'O'
  1941  0B76  346D               	retlw	109	;'m'
  1942  0B77  3465               	retlw	101	;'e'
  1943  0B78  3467               	retlw	103	;'g'
  1944  0B79  3461               	retlw	97	;'a'
  1945  0B7A  3420               	retlw	32	;' '
  1946  0B7B  346D               	retlw	109	;'m'
  1947  0B7C  346F               	retlw	111	;'o'
  1948  0B7D  3464               	retlw	100	;'d'
  1949  0B7E  3465               	retlw	101	;'e'
  1950  0B7F  3420               	retlw	32	;' '
  1951  0B80  3465               	retlw	101	;'e'
  1952  0B81  346E               	retlw	110	;'n'
  1953  0B82  3461               	retlw	97	;'a'
  1954  0B83  3462               	retlw	98	;'b'
  1955  0B84  346C               	retlw	108	;'l'
  1956  0B85  3465               	retlw	101	;'e'
  1957  0B86  3464               	retlw	100	;'d'
  1958  0B87  342E               	retlw	46	;'.'
  1959  0B88  340A               	retlw	10
  1960  0B89  340D               	retlw	13
  1961  0B8A  3400               	retlw	0
  1962  0B8B                     STR_9:	
  1963  0B8B  3449               	retlw	73	;'I'
  1964  0B8C  346E               	retlw	110	;'n'
  1965  0B8D  3469               	retlw	105	;'i'
  1966  0B8E  3474               	retlw	116	;'t'
  1967  0B8F  3469               	retlw	105	;'i'
  1968  0B90  3461               	retlw	97	;'a'
  1969  0B91  346C               	retlw	108	;'l'
  1970  0B92  3469               	retlw	105	;'i'
  1971  0B93  347A               	retlw	122	;'z'
  1972  0B94  3465               	retlw	101	;'e'
  1973  0B95  3464               	retlw	100	;'d'
  1974  0B96  3420               	retlw	32	;' '
  1975  0B97  344C               	retlw	76	;'L'
  1976  0B98  3445               	retlw	69	;'E'
  1977  0B99  3444               	retlw	68	;'D'
  1978  0B9A  3473               	retlw	115	;'s'
  1979  0B9B  342E               	retlw	46	;'.'
  1980  0B9C  340A               	retlw	10
  1981  0B9D  340D               	retlw	13
  1982  0B9E  3400               	retlw	0
  1983  0B9F                     STR_12:	
  1984  0B9F  3449               	retlw	73	;'I'
  1985  0BA0  346E               	retlw	110	;'n'
  1986  0BA1  3469               	retlw	105	;'i'
  1987  0BA2  3474               	retlw	116	;'t'
  1988  0BA3  3469               	retlw	105	;'i'
  1989  0BA4  3461               	retlw	97	;'a'
  1990  0BA5  346C               	retlw	108	;'l'
  1991  0BA6  3469               	retlw	105	;'i'
  1992  0BA7  347A               	retlw	122	;'z'
  1993  0BA8  3465               	retlw	101	;'e'
  1994  0BA9  3464               	retlw	100	;'d'
  1995  0BAA  3420               	retlw	32	;' '
  1996  0BAB  3449               	retlw	73	;'I'
  1997  0BAC  3453               	retlw	83	;'S'
  1998  0BAD  3452               	retlw	82	;'R'
  1999  0BAE  342E               	retlw	46	;'.'
  2000  0BAF  340A               	retlw	10
  2001  0BB0  340D               	retlw	13
  2002  0BB1  3400               	retlw	0
  2003  0BB2                     STR_28:	
  2004  0BB2  3453               	retlw	83	;'S'
  2005  0BB3  3477               	retlw	119	;'w'
  2006  0BB4  346F               	retlw	111	;'o'
  2007  0BB5  3472               	retlw	114	;'r'
  2008  0BB6  3464               	retlw	100	;'d'
  2009  0BB7  3420               	retlw	32	;' '
  2010  0BB8  3477               	retlw	119	;'w'
  2011  0BB9  3461               	retlw	97	;'a'
  2012  0BBA  3473               	retlw	115	;'s'
  2013  0BBB  3420               	retlw	32	;' '
  2014  0BBC  3473               	retlw	115	;'s'
  2015  0BBD  3477               	retlw	119	;'w'
  2016  0BBE  3475               	retlw	117	;'u'
  2017  0BBF  346E               	retlw	110	;'n'
  2018  0BC0  3467               	retlw	103	;'g'
  2019  0BC1  340A               	retlw	10
  2020  0BC2  340D               	retlw	13
  2021  0BC3  3400               	retlw	0
  2022  0BC4                     STR_3:	
  2023  0BC4  3464               	retlw	100	;'d'
  2024  0BC5  3461               	retlw	97	;'a'
  2025  0BC6  346D               	retlw	109	;'m'
  2026  0BC7  3461               	retlw	97	;'a'
  2027  0BC8  3467               	retlw	103	;'g'
  2028  0BC9  3465               	retlw	101	;'e'
  2029  0BCA  342E               	retlw	46	;'.'
  2030  0BCB  340A               	retlw	10
  2031  0BCC  340D               	retlw	13
  2032  0BCD  3400               	retlw	0
  2033  0BCE                     STR_4:	
  2034  0BCE  3468               	retlw	104	;'h'
  2035  0BCF  3465               	retlw	101	;'e'
  2036  0BD0  3461               	retlw	97	;'a'
  2037  0BD1  346C               	retlw	108	;'l'
  2038  0BD2  3474               	retlw	116	;'t'
  2039  0BD3  3468               	retlw	104	;'h'
  2040  0BD4  342E               	retlw	46	;'.'
  2041  0BD5  340A               	retlw	10
  2042  0BD6  340D               	retlw	13
  2043  0BD7  3400               	retlw	0
  2044  0BD8                     STR_2:	
  2045  0BD8  3453               	retlw	83	;'S'
  2046  0BD9  3465               	retlw	101	;'e'
  2047  0BDA  346E               	retlw	110	;'n'
  2048  0BDB  3474               	retlw	116	;'t'
  2049  0BDC  3420               	retlw	32	;' '
  2050  0BDD  3425               	retlw	37	;'%'
  2051  0BDE  3464               	retlw	100	;'d'
  2052  0BDF  3420               	retlw	32	;' '
  2053  0BE0  3400               	retlw	0
  2054  0BE1                     STR_5:	
  2055  0BE1  3473               	retlw	115	;'s'
  2056  0BE2  3474               	retlw	116	;'t'
  2057  0BE3  3475               	retlw	117	;'u'
  2058  0BE4  346E               	retlw	110	;'n'
  2059  0BE5  342E               	retlw	46	;'.'
  2060  0BE6  340A               	retlw	10
  2061  0BE7  340D               	retlw	13
  2062  0BE8  3400               	retlw	0
  2063  0BE9                     STR_16:	
  2064  0BE9  3431               	retlw	49	;'1'
  2065  0BEA  340A               	retlw	10
  2066  0BEB  340D               	retlw	13
  2067  0BEC  3400               	retlw	0
  2068  0BED                     STR_17:	
  2069  0BED  3432               	retlw	50	;'2'
  2070  0BEE  340A               	retlw	10
  2071  0BEF  340D               	retlw	13
  2072  0BF0  3400               	retlw	0
  2073  0BF1                     STR_18:	
  2074  0BF1  3433               	retlw	51	;'3'
  2075  0BF2  340A               	retlw	10
  2076  0BF3  340D               	retlw	13
  2077  0BF4  3400               	retlw	0
  2078  0BF5                     STR_19:	
  2079  0BF5  3434               	retlw	52	;'4'
  2080  0BF6  340A               	retlw	10
  2081  0BF7  340D               	retlw	13
  2082  0BF8  3400               	retlw	0
  2083  0BF9                     STR_23:	
  2084  0BF9  346E               	retlw	110	;'n'
  2085  0BFA  340A               	retlw	10
  2086  0BFB  340D               	retlw	13
  2087  0BFC  3400               	retlw	0
  2088  0BFD                     STR_22:	
  2089  0BFD  3479               	retlw	121	;'y'
  2090  0BFE  340A               	retlw	10
  2091  0BFF  340D               	retlw	13
  2092  0C00  3400               	retlw	0
  2093  0A4B                     
  2094                           ; #config settings
  2095  0000                     
  2096                           	psect	cinit
  2097  07F4                     start_initialization:	
  2098  07F4                     __initialization:	
  2099                           
  2100                           ; Clear objects allocated to BANK0
  2101  07F4  01BA               	clrf	__pbssBANK0& (0+127)
  2102  07F5  01BB               	clrf	(__pbssBANK0+1)& (0+127)
  2103  07F6  01BC               	clrf	(__pbssBANK0+2)& (0+127)
  2104  07F7  01BD               	clrf	(__pbssBANK0+3)& (0+127)
  2105  07F8  01BE               	clrf	(__pbssBANK0+4)& (0+127)
  2106  07F9  01BF               	clrf	(__pbssBANK0+5)& (0+127)
  2107                           
  2108                           ; Initialize objects allocated to BANK0
  2109  07FA  3181  21D8         	fcall	__pidataBANK0	;fetch initializer
  2110  07FC  00C0               	movwf	__pdataBANK0& (0+127)
  2111  07FD                     end_of_initialization:	
  2112                           ;End of C runtime variable initialization code
  2113                           
  2114  07FD                     __end_of__initialization:	
  2115  07FD  0020               	movlb	0
  2116  07FE  3183  2BC6         	ljmp	_main	;jump to C main() function
  2117                           
  2118                           	psect	bssBANK0
  2119  003A                     __pbssBANK0:	
  2120  003A                     main@F7229:	
  2121  003A                     	ds	3
  2122  003D                     _blade:	
  2123  003D                     	ds	1
  2124  003E                     _omega_mode:	
  2125  003E                     	ds	1
  2126  003F                     _stun_counter:	
  2127  003F                     	ds	1
  2128                           
  2129                           	psect	dataBANK0
  2130  0040                     __pdataBANK0:	
  2131  0040                     _health:	
  2132  0040                     	ds	1
  2133                           
  2134                           	psect	cstackCOMMON
  2135  0070                     __pcstackCOMMON:	
  2136  0070                     ??_getch:	
  2137  0070                     ?_init_pic:	
  2138                           ; 0 bytes @ 0x0
  2139                           
  2140  0070                     ??_init_pic:	
  2141                           ; 0 bytes @ 0x0
  2142                           
  2143  0070                     ?_init_uart:	
  2144                           ; 0 bytes @ 0x0
  2145                           
  2146  0070                     ??_init_uart:	
  2147                           ; 0 bytes @ 0x0
  2148                           
  2149  0070                     ??_waitch:	
  2150                           ; 0 bytes @ 0x0
  2151                           
  2152  0070                     ?_init_ir:	
  2153                           ; 0 bytes @ 0x0
  2154                           
  2155  0070                     ?_play_sound:	
  2156                           ; 0 bytes @ 0x0
  2157                           
  2158  0070                     ?_init_accel:	
  2159                           ; 0 bytes @ 0x0
  2160                           
  2161  0070                     ??_determine_omega_mode_active:	
  2162                           ; 0 bytes @ 0x0
  2163                           
  2164  0070                     ?_determine_packets_to_send:	
  2165                           ; 0 bytes @ 0x0
  2166                           
  2167  0070                     ??_determine_packets_to_send:	
  2168                           ; 0 bytes @ 0x0
  2169                           
  2170  0070                     ?_display_health:	
  2171                           ; 0 bytes @ 0x0
  2172                           
  2173  0070                     ??_display_health:	
  2174                           ; 0 bytes @ 0x0
  2175                           
  2176  0070                     ?_init_leds:	
  2177                           ; 0 bytes @ 0x0
  2178                           
  2179  0070                     ?_display_blade_lights:	
  2180                           ; 0 bytes @ 0x0
  2181                           
  2182  0070                     ?_init_isr:	
  2183                           ; 0 bytes @ 0x0
  2184                           
  2185  0070                     ?_putch:	
  2186                           ; 0 bytes @ 0x0
  2187                           
  2188  0070                     ??_putch:	
  2189                           ; 0 bytes @ 0x0
  2190                           
  2191  0070                     ?_getch:	
  2192                           ; 0 bytes @ 0x0
  2193                           
  2194  0070                     ?_waitch:	
  2195                           ; 1 bytes @ 0x0
  2196                           
  2197  0070                     ?_determine_sword_was_swung:	
  2198                           ; 1 bytes @ 0x0
  2199                           
  2200  0070                     ?_determine_omega_mode_active:	
  2201                           ; 1 bytes @ 0x0
  2202                           
  2203  0070                     ?_main:	
  2204                           ; 1 bytes @ 0x0
  2205                           
  2206  0070                     ?___lwdiv:	
  2207                           ; 2 bytes @ 0x0
  2208                           
  2209  0070                     putch@input:	
  2210                           ; 2 bytes @ 0x0
  2211                           
  2212  0070                     getch@counter:	
  2213                           ; 1 bytes @ 0x0
  2214                           
  2215  0070                     ___lwdiv@divisor:	
  2216                           ; 1 bytes @ 0x0
  2217                           
  2218                           
  2219                           ; 2 bytes @ 0x0
  2220  0070                     	ds	1
  2221  0071                     ??_determine_sword_was_swung:	
  2222  0071                     determine_packets_to_send@packets:	
  2223                           ; 0 bytes @ 0x1
  2224                           
  2225                           
  2226                           ; 1 bytes @ 0x1
  2227  0071                     	ds	1
  2228  0072                     determine_sword_was_swung@input:	
  2229  0072                     ___lwdiv@dividend:	
  2230                           ; 1 bytes @ 0x2
  2231                           
  2232                           
  2233                           ; 2 bytes @ 0x2
  2234  0072                     	ds	2
  2235  0074                     ??___lwdiv:	
  2236                           
  2237                           ; 0 bytes @ 0x4
  2238  0074                     	ds	1
  2239  0075                     ___lwdiv@quotient:	
  2240                           
  2241                           ; 2 bytes @ 0x5
  2242  0075                     	ds	2
  2243  0077                     ___lwdiv@counter:	
  2244                           
  2245                           ; 1 bytes @ 0x7
  2246  0077                     	ds	1
  2247  0078                     ?___lwmod:	
  2248  0078                     ___lwmod@divisor:	
  2249                           ; 2 bytes @ 0x8
  2250                           
  2251                           
  2252                           ; 2 bytes @ 0x8
  2253  0078                     	ds	2
  2254  007A                     ___lwmod@dividend:	
  2255                           
  2256                           ; 2 bytes @ 0xA
  2257  007A                     	ds	2
  2258  007C                     ??___lwmod:	
  2259                           
  2260                           ; 0 bytes @ 0xC
  2261  007C                     	ds	1
  2262  007D                     ___lwmod@counter:	
  2263                           
  2264                           ; 1 bytes @ 0xD
  2265  007D                     	ds	1
  2266  007E                     ??_init_ir:	
  2267  007E                     ??_play_sound:	
  2268                           ; 0 bytes @ 0xE
  2269                           
  2270  007E                     ??_init_accel:	
  2271                           ; 0 bytes @ 0xE
  2272                           
  2273  007E                     ??_init_leds:	
  2274                           ; 0 bytes @ 0xE
  2275                           
  2276  007E                     ??_display_blade_lights:	
  2277                           ; 0 bytes @ 0xE
  2278                           
  2279  007E                     ??_init_isr:	
  2280                           ; 0 bytes @ 0xE
  2281                           
  2282                           
  2283                           	psect	cstackBANK0
  2284  0020                     __pcstackBANK0:	
  2285                           ; 0 bytes @ 0xE
  2286                           
  2287  0020                     ?_printf:	
  2288  0020                     printf@f:	
  2289                           ; 2 bytes @ 0x0
  2290                           
  2291                           
  2292                           ; 2 bytes @ 0x0
  2293  0020                     	ds	4
  2294  0024                     ??_printf:	
  2295                           
  2296                           ; 0 bytes @ 0x4
  2297  0024                     	ds	4
  2298  0028                     printf@ap:	
  2299                           
  2300                           ; 1 bytes @ 0x8
  2301  0028                     	ds	1
  2302  0029                     printf@flag:	
  2303                           
  2304                           ; 1 bytes @ 0x9
  2305  0029                     	ds	1
  2306  002A                     printf@prec:	
  2307                           
  2308                           ; 1 bytes @ 0xA
  2309  002A                     	ds	1
  2310  002B                     printf@val:	
  2311                           
  2312                           ; 2 bytes @ 0xB
  2313  002B                     	ds	2
  2314  002D                     printf@c:	
  2315                           
  2316                           ; 1 bytes @ 0xD
  2317  002D                     	ds	1
  2318  002E                     ?_output_ir:	
  2319  002E                     output_ir@amount:	
  2320                           ; 0 bytes @ 0xE
  2321                           
  2322  002E                     play_sound@sound_selection:	
  2323                           ; 1 bytes @ 0xE
  2324                           
  2325  002E                     display_blade_lights@mode:	
  2326                           ; 1 bytes @ 0xE
  2327                           
  2328                           
  2329                           ; 1 bytes @ 0xE
  2330  002E                     	ds	1
  2331  002F                     ??_output_ir:	
  2332                           
  2333                           ; 0 bytes @ 0xF
  2334  002F                     	ds	2
  2335  0031                     output_ir@pkt_type:	
  2336                           
  2337                           ; 1 bytes @ 0x11
  2338  0031                     	ds	1
  2339  0032                     ??_main:	
  2340                           
  2341                           ; 0 bytes @ 0x12
  2342  0032                     	ds	3
  2343  0035                     main@pkt_arr:	
  2344                           
  2345                           ; 3 bytes @ 0x15
  2346  0035                     	ds	3
  2347  0038                     main@i:	
  2348                           
  2349                           ; 1 bytes @ 0x18
  2350  0038                     	ds	1
  2351  0039                     main@userInput:	
  2352                           
  2353                           ; 1 bytes @ 0x19
  2354  0039                     	ds	1
  2355                           
  2356                           	psect	maintext
  2357  03C6                     __pmaintext:	
  2358 ;;
  2359 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2360 ;;
  2361 ;; *************** function _main *****************
  2362 ;; Defined at:
  2363 ;;		line 18 in file "../../source/main.c"
  2364 ;; Parameters:    Size  Location     Type
  2365 ;;		None
  2366 ;; Auto vars:     Size  Location     Type
  2367 ;;  pkt_arr         3   21[BANK0 ] unsigned char [3]
  2368 ;;  userInput       1   25[BANK0 ] unsigned char 
  2369 ;;  i               1   24[BANK0 ] unsigned char 
  2370 ;; Return value:  Size  Location     Type
  2371 ;;                  2  104[None  ] int 
  2372 ;; Registers used:
  2373 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2374 ;; Tracked objects:
  2375 ;;		On entry : B1F/0
  2376 ;;		On exit  : 0/0
  2377 ;;		Unchanged: 0/0
  2378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2380 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2381 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2382 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2383 ;;Total ram usage:        8 bytes
  2384 ;; Hardware stack levels required when called:    3
  2385 ;; This function calls:
  2386 ;;		_determine_omega_mode_active
  2387 ;;		_determine_packets_to_send
  2388 ;;		_determine_sword_was_swung
  2389 ;;		_display_blade_lights
  2390 ;;		_display_health
  2391 ;;		_init_accel
  2392 ;;		_init_ir
  2393 ;;		_init_isr
  2394 ;;		_init_leds
  2395 ;;		_init_pic
  2396 ;;		_init_uart
  2397 ;;		_output_ir
  2398 ;;		_play_sound
  2399 ;;		_printf
  2400 ;;		_waitch
  2401 ;; This function is called by:
  2402 ;;		Startup code after reset
  2403 ;; This function uses a non-reentrant model
  2404 ;;
  2405                           
  2406                           
  2407                           ;psect for function _main
  2408  03C6                     _main:	
  2409                           
  2410                           ;main.c: 20: char pkt_arr[] = {0, 0, 0};
  2411                           
  2412                           ;incstack = 0
  2413                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2414  03C6  0020               	movlb	0	; select bank0
  2415  03C7  083A               	movf	main@F7229,w
  2416  03C8  00B5               	movwf	main@pkt_arr
  2417  03C9  083B               	movf	main@F7229+1,w
  2418  03CA  00B6               	movwf	main@pkt_arr+1
  2419  03CB  083C               	movf	main@F7229+2,w
  2420  03CC  00B7               	movwf	main@pkt_arr+2
  2421                           
  2422                           ;main.c: 21: char userInput = ' ';
  2423  03CD  3020               	movlw	32
  2424  03CE  00B2               	movwf	??_main
  2425  03CF  0832               	movf	??_main,w
  2426  03D0  00B9               	movwf	main@userInput
  2427                           
  2428                           ;main.c: 22: char i = 0;
  2429  03D1  01B8               	clrf	main@i
  2430                           
  2431                           ;main.c: 25: init_pic();
  2432  03D2  3182  2210  3183   	fcall	_init_pic
  2433                           
  2434                           ;main.c: 26: init_uart();
  2435  03D5  3182  2229  3183   	fcall	_init_uart
  2436                           
  2437                           ;main.c: 29: _delay((unsigned long)((100)*(32000000/4000.0)));
  2438  03D8  3005               	movlw	5
  2439  03D9  0020               	movlb	0	; select bank0
  2440  03DA  00B4               	movwf	??_main+2
  2441  03DB  300F               	movlw	15
  2442  03DC  00B3               	movwf	??_main+1
  2443  03DD  30F4               	movlw	244
  2444  03DE  00B2               	movwf	??_main
  2445  03DF                     u2137:	
  2446  03DF  0BB2               	decfsz	??_main,f
  2447  03E0  2BDF               	goto	u2137
  2448  03E1  0BB3               	decfsz	??_main+1,f
  2449  03E2  2BDF               	goto	u2137
  2450  03E3  0BB4               	decfsz	??_main+2,f
  2451  03E4  2BDF               	goto	u2137
  2452                           
  2453                           ;main.c: 30: RB3 = 1;
  2454  03E5  0020               	movlb	0	; select bank0
  2455  03E6  158D               	bsf	13,3	;volatile
  2456                           
  2457                           ;main.c: 32: printf("\n\r=========================================================\n\r")
      +                          ;
  2458  03E7  308D               	movlw	low (STR_13| (0+32768))
  2459  03E8  00A0               	movwf	printf@f
  2460  03E9  3088               	movlw	high (STR_13| (0+32768))
  2461  03EA  00A1               	movwf	printf@f+1
  2462  03EB  3183  230F  3183   	fcall	_printf
  2463                           
  2464                           ;main.c: 35: init_ir();
  2465  03EE  3181  21F8  3183   	fcall	_init_ir
  2466                           
  2467                           ;main.c: 36: init_accel();
  2468  03F1  3181  21F0  3183   	fcall	_init_accel
  2469                           
  2470                           ;main.c: 37: init_leds();
  2471  03F4  3182  2208  3183   	fcall	_init_leds
  2472                           
  2473                           ;main.c: 38: init_isr();
  2474  03F7  3182  2200  3183   	fcall	_init_isr
  2475                           
  2476                           ;main.c: 41: printf("\n\rWhich blade would you like to test? Enter a for Alpha, b for\n\
      +                          r");
  2477  03FA  304C               	movlw	low (STR_14| (0+32768))
  2478  03FB  0020               	movlb	0	; select bank0
  2479  03FC  00A0               	movwf	printf@f
  2480  03FD  3088               	movlw	high (STR_14| (0+32768))
  2481  03FE  00A1               	movwf	printf@f+1
  2482  03FF  3183  230F  3183   	fcall	_printf
  2483                           
  2484                           ;main.c: 42: printf("Beta, d for Delta, or g for Gamma.\n\r");
  2485  0402  3005               	movlw	low (STR_15| (0+32768))
  2486  0403  0020               	movlb	0	; select bank0
  2487  0404  00A0               	movwf	printf@f
  2488  0405  308A               	movlw	high (STR_15| (0+32768))
  2489                           
  2490                           ;main.c: 50: break;
  2491  0406  2C35               	goto	L3
  2492  0407                     l1673:	
  2493                           ;main.c: 51: }
  2494                           
  2495                           
  2496                           ;main.c: 52: else if( userInput == 'b' )
  2497  0407  3062               	movlw	98
  2498  0408  0639               	xorwf	main@userInput,w
  2499  0409  1D03               	btfss	3,2
  2500  040A  2C14               	goto	l1681
  2501                           
  2502                           ;main.c: 53: {
  2503                           ;main.c: 54: printf("2\n\r");
  2504  040B  30ED               	movlw	low (STR_17| (0+32768))
  2505  040C  00A0               	movwf	printf@f
  2506  040D  308B               	movlw	high (STR_17| (0+32768))
  2507  040E  00A1               	movwf	printf@f+1
  2508  040F  3183  230F  3183   	fcall	_printf
  2509                           
  2510                           ;main.c: 55: blade = 2;
  2511  0412  3002               	movlw	2
  2512  0413  2C2D               	goto	L2
  2513  0414                     l1681:	
  2514                           ;main.c: 57: }
  2515                           
  2516                           ;main.c: 56: break;
  2517                           
  2518                           
  2519                           ;main.c: 58: else if( userInput == 'd' )
  2520  0414  3064               	movlw	100
  2521  0415  0639               	xorwf	main@userInput,w
  2522  0416  1D03               	btfss	3,2
  2523  0417  2C21               	goto	l1689
  2524                           
  2525                           ;main.c: 59: {
  2526                           ;main.c: 60: printf("3\n\r");
  2527  0418  30F1               	movlw	low (STR_18| (0+32768))
  2528  0419  00A0               	movwf	printf@f
  2529  041A  308B               	movlw	high (STR_18| (0+32768))
  2530  041B  00A1               	movwf	printf@f+1
  2531  041C  3183  230F  3183   	fcall	_printf
  2532                           
  2533                           ;main.c: 61: blade = 3;
  2534  041F  3003               	movlw	3
  2535  0420  2C2D               	goto	L2
  2536  0421                     l1689:	
  2537                           ;main.c: 63: }
  2538                           
  2539                           ;main.c: 62: break;
  2540                           
  2541                           
  2542                           ;main.c: 64: else if( userInput == 'g' )
  2543  0421  3067               	movlw	103
  2544  0422  0639               	xorwf	main@userInput,w
  2545  0423  1D03               	btfss	3,2
  2546  0424  2C32               	goto	l1695
  2547                           
  2548                           ;main.c: 65: {
  2549                           ;main.c: 66: printf("4\n\r");
  2550  0425  30F5               	movlw	low (STR_19| (0+32768))
  2551  0426  00A0               	movwf	printf@f
  2552  0427  308B               	movlw	high (STR_19| (0+32768))
  2553  0428  00A1               	movwf	printf@f+1
  2554  0429  3183  230F  3183   	fcall	_printf
  2555                           
  2556                           ;main.c: 67: blade = 4;
  2557  042C  3004               	movlw	4
  2558  042D                     L2:	
  2559  042D  0020               	movlb	0	; select bank0
  2560  042E  00B2               	movwf	??_main
  2561  042F  0832               	movf	??_main,w
  2562  0430  00BD               	movwf	_blade
  2563                           
  2564                           ;main.c: 68: break;
  2565  0431  2C4E               	goto	l1697
  2566  0432                     l1695:	
  2567                           
  2568                           ;main.c: 69: }
  2569                           ;main.c: 70: printf("Invalid input. Try again.\n\r");
  2570  0432  300F               	movlw	low (STR_20| (0+32768))
  2571  0433  00A0               	movwf	printf@f
  2572  0434  308B               	movlw	high (STR_20| (0+32768))
  2573  0435                     L3:	
  2574  0435  00A1               	movwf	printf@f+1
  2575  0436  3183  230F  3183   	fcall	_printf
  2576                           
  2577                           ;main.c: 44: {
  2578                           ;main.c: 45: userInput = waitch();
  2579                           
  2580                           ;main.c: 43: while(1)
  2581  0439  3181  21DC  3183   	fcall	_waitch
  2582  043C  0020               	movlb	0	; select bank0
  2583  043D  00B2               	movwf	??_main
  2584  043E  0832               	movf	??_main,w
  2585  043F  00B9               	movwf	main@userInput
  2586                           
  2587                           ;main.c: 46: if(userInput == 'a')
  2588  0440  3061               	movlw	97
  2589  0441  0639               	xorwf	main@userInput,w
  2590  0442  1D03               	btfss	3,2
  2591  0443  2C07               	goto	l1673
  2592                           
  2593                           ;main.c: 47: {
  2594                           ;main.c: 48: printf("1\n\r");
  2595  0444  30E9               	movlw	low (STR_16| (0+32768))
  2596  0445  00A0               	movwf	printf@f
  2597  0446  308B               	movlw	high (STR_16| (0+32768))
  2598  0447  00A1               	movwf	printf@f+1
  2599  0448  3183  230F  3183   	fcall	_printf
  2600                           
  2601                           ;main.c: 49: blade = 1;
  2602  044B  0020               	movlb	0	; select bank0
  2603  044C  01BD               	clrf	_blade
  2604  044D  0ABD               	incf	_blade,f
  2605  044E                     l1697:	
  2606                           
  2607                           ;main.c: 71: }
  2608                           ;main.c: 73: printf("Are the blades in omega mode? (y/n)\n\r");
  2609  044E  30DF               	movlw	low (STR_21| (0+32768))
  2610  044F  0020               	movlb	0	; select bank0
  2611  0450  00A0               	movwf	printf@f
  2612  0451  3089               	movlw	high (STR_21| (0+32768))
  2613                           
  2614                           ;main.c: 81: break;
  2615  0452  2C64               	goto	L4
  2616  0453                     l1709:	
  2617                           ;main.c: 82: }
  2618                           
  2619                           
  2620                           ;main.c: 83: else if( userInput == 'n' )
  2621  0453  306E               	movlw	110
  2622  0454  0639               	xorwf	main@userInput,w
  2623  0455  1D03               	btfss	3,2
  2624  0456  2C61               	goto	l1715
  2625                           
  2626                           ;main.c: 84: {
  2627                           ;main.c: 85: printf("n\n\r");
  2628  0457  30F9               	movlw	low (STR_23| (0+32768))
  2629  0458  00A0               	movwf	printf@f
  2630  0459  308B               	movlw	high (STR_23| (0+32768))
  2631  045A  00A1               	movwf	printf@f+1
  2632  045B  3183  230F  3183   	fcall	_printf
  2633                           
  2634                           ;main.c: 86: omega_mode = 0;
  2635  045E  0020               	movlb	0	; select bank0
  2636  045F  01BE               	clrf	_omega_mode
  2637                           
  2638                           ;main.c: 87: break;
  2639  0460  2C7D               	goto	l1717
  2640  0461                     l1715:	
  2641                           
  2642                           ;main.c: 88: }
  2643                           ;main.c: 89: printf("Invalid input. Try again.\n\r");
  2644  0461  300F               	movlw	low (STR_20| (0+32768))
  2645  0462  00A0               	movwf	printf@f
  2646  0463  308B               	movlw	high (STR_20| (0+32768))
  2647  0464                     L4:	
  2648  0464  00A1               	movwf	printf@f+1
  2649  0465  3183  230F  3183   	fcall	_printf
  2650                           
  2651                           ;main.c: 75: {
  2652                           ;main.c: 76: userInput = waitch();
  2653                           
  2654                           ;main.c: 74: while(1)
  2655  0468  3181  21DC  3183   	fcall	_waitch
  2656  046B  0020               	movlb	0	; select bank0
  2657  046C  00B2               	movwf	??_main
  2658  046D  0832               	movf	??_main,w
  2659  046E  00B9               	movwf	main@userInput
  2660                           
  2661                           ;main.c: 77: if(userInput == 'y')
  2662  046F  3079               	movlw	121
  2663  0470  0639               	xorwf	main@userInput,w
  2664  0471  1D03               	btfss	3,2
  2665  0472  2C53               	goto	l1709
  2666                           
  2667                           ;main.c: 78: {
  2668                           ;main.c: 79: printf("y\n\r");
  2669  0473  30FD               	movlw	low (STR_22| (0+32768))
  2670  0474  00A0               	movwf	printf@f
  2671  0475  308B               	movlw	high (STR_22| (0+32768))
  2672  0476  00A1               	movwf	printf@f+1
  2673  0477  3183  230F  3183   	fcall	_printf
  2674                           
  2675                           ;main.c: 80: omega_mode = 1;
  2676  047A  0020               	movlb	0	; select bank0
  2677  047B  01BE               	clrf	_omega_mode
  2678  047C  0ABE               	incf	_omega_mode,f
  2679  047D                     l1717:	
  2680                           
  2681                           ;main.c: 90: }
  2682                           ;main.c: 92: printf("Press \'s\' to swing the sword and see what happens!\n\r");
  2683  047D  30CB               	movlw	low (STR_25| (0+32768))
  2684  047E  0020               	movlb	0	; select bank0
  2685  047F  00A0               	movwf	printf@f
  2686  0480  3088               	movlw	high (STR_25| (0+32768))
  2687  0481  00A1               	movwf	printf@f+1
  2688  0482  3183  230F  3183   	fcall	_printf
  2689                           
  2690                           ;main.c: 93: printf("Press 'd', 'h', or 't' to send damage, health, or stun packets.\n\r
      +                          ");
  2691  0485  300A               	movlw	low (STR_26| (0+32768))
  2692  0486  0020               	movlb	0	; select bank0
  2693  0487  00A0               	movwf	printf@f
  2694  0488  3088               	movlw	high (STR_26| (0+32768))
  2695  0489  00A1               	movwf	printf@f+1
  2696  048A  3183  230F  3183   	fcall	_printf
  2697                           
  2698                           ;main.c: 94: printf("Press 'o' to toggle Omega mode.\n\r\n\r");
  2699  048D  302A               	movlw	low (STR_27| (0+32768))
  2700  048E  0020               	movlb	0	; select bank0
  2701  048F  00A0               	movwf	printf@f
  2702  0490  308A               	movlw	high (STR_27| (0+32768))
  2703  0491                     L5:	
  2704  0491  00A1               	movwf	printf@f+1
  2705  0492  3183  230F  3183   	fcall	_printf
  2706                           
  2707                           ;main.c: 98: {
  2708                           ;main.c: 100: if( blade == 1 )
  2709                           
  2710                           ;main.c: 97: while(1)
  2711  0495  0020               	movlb	0	; select bank0
  2712  0496  033D               	decf	_blade,w
  2713  0497  1D03               	btfss	3,2
  2714  0498  2D89               	goto	l1815
  2715                           
  2716                           ;main.c: 122: }
  2717  0499  2D1C               	goto	l1721
  2718  049A                     l1753:	
  2719                           
  2720                           ;main.c: 123: else
  2721                           ;main.c: 124: {
  2722                           ;main.c: 125: display_blade_lights(1);
  2723  049A  3001               	movlw	1
  2724  049B  2D67               	goto	L6
  2725  049C                     l1757:	
  2726                           ;main.c: 129: }
  2727                           
  2728                           ;main.c: 126: }
  2729                           ;main.c: 128: break;
  2730                           
  2731                           
  2732                           ;main.c: 130: else if(userInput == 'd' && !determine_omega_mode_active())
  2733  049C  3064               	movlw	100
  2734  049D  0020               	movlb	0	; select bank0
  2735  049E  0639               	xorwf	main@userInput,w
  2736  049F  1D03               	btfss	3,2
  2737  04A0  2CBC               	goto	l1769
  2738  04A1  3181  21D9  3183   	fcall	_determine_omega_mode_active
  2739  04A4  3A00               	xorlw	0
  2740  04A5  1D03               	skipz
  2741  04A6  2CBC               	goto	l1769
  2742                           
  2743                           ;main.c: 131: {
  2744                           ;main.c: 132: if(health > 0)
  2745  04A7  0020               	movlb	0	; select bank0
  2746  04A8  0840               	movf	_health,w
  2747  04A9  1903               	btfsc	3,2
  2748  04AA  2CAD               	goto	l1765
  2749                           
  2750                           ;main.c: 133: {
  2751                           ;main.c: 134: health -= 10;
  2752  04AB  300A               	movlw	10
  2753  04AC  02C0               	subwf	_health,f
  2754  04AD                     l1765:	
  2755                           
  2756                           ;main.c: 135: }
  2757                           ;main.c: 136: printf("The blade has been damaged. Health = %d.\n\r",
  2758                           ;main.c: 137: health);
  2759  04AD  3060               	movlw	low (STR_29| (0+32768))
  2760  04AE  00A0               	movwf	printf@f
  2761  04AF  3089               	movlw	high (STR_29| (0+32768))
  2762  04B0  00A1               	movwf	printf@f+1
  2763  04B1  0840               	movf	_health,w
  2764  04B2  00B2               	movwf	??_main
  2765  04B3  01B3               	clrf	??_main+1
  2766  04B4  0832               	movf	??_main,w
  2767  04B5  00A2               	movwf	?_printf+2
  2768  04B6  0833               	movf	??_main+1,w
  2769  04B7  00A3               	movwf	?_printf+3
  2770  04B8  3183  230F  3183   	fcall	_printf
  2771                           
  2772                           ;main.c: 139: break;
  2773  04BB  2D6A               	goto	l134
  2774  04BC                     l1769:	
  2775                           ;main.c: 140: }
  2776                           
  2777                           
  2778                           ;main.c: 141: else if(userInput == 'h' && !determine_omega_mode_active())
  2779  04BC  3068               	movlw	104
  2780  04BD  0020               	movlb	0	; select bank0
  2781  04BE  0639               	xorwf	main@userInput,w
  2782  04BF  1D03               	btfss	3,2
  2783  04C0  2CDF               	goto	l1781
  2784  04C1  3181  21D9  3183   	fcall	_determine_omega_mode_active
  2785  04C4  3A00               	xorlw	0
  2786  04C5  1D03               	skipz
  2787  04C6  2CDF               	goto	l1781
  2788                           
  2789                           ;main.c: 142: {
  2790                           ;main.c: 143: if(health < 50)
  2791  04C7  3032               	movlw	50
  2792  04C8  0020               	movlb	0	; select bank0
  2793  04C9  0240               	subwf	_health,w
  2794  04CA  1803               	skipnc
  2795  04CB  2CD0               	goto	l1777
  2796                           
  2797                           ;main.c: 144: {
  2798                           ;main.c: 145: health += 10;
  2799  04CC  300A               	movlw	10
  2800  04CD  00B2               	movwf	??_main
  2801  04CE  0832               	movf	??_main,w
  2802  04CF  07C0               	addwf	_health,f
  2803  04D0                     l1777:	
  2804                           
  2805                           ;main.c: 146: }
  2806                           ;main.c: 147: printf("The blade has been healed. Health = %d.\n\r",
  2807                           ;main.c: 148: health);
  2808  04D0  308B               	movlw	low (STR_30| (0+32768))
  2809  04D1  00A0               	movwf	printf@f
  2810  04D2  3089               	movlw	high (STR_30| (0+32768))
  2811  04D3  00A1               	movwf	printf@f+1
  2812  04D4  0840               	movf	_health,w
  2813  04D5  00B2               	movwf	??_main
  2814  04D6  01B3               	clrf	??_main+1
  2815  04D7  0832               	movf	??_main,w
  2816  04D8  00A2               	movwf	?_printf+2
  2817  04D9  0833               	movf	??_main+1,w
  2818  04DA  00A3               	movwf	?_printf+3
  2819  04DB  3183  230F  3183   	fcall	_printf
  2820                           
  2821                           ;main.c: 150: break;
  2822  04DE  2D6A               	goto	l134
  2823  04DF                     l1781:	
  2824                           ;main.c: 151: }
  2825                           
  2826                           
  2827                           ;main.c: 152: else if(userInput == 't' && !determine_omega_mode_active())
  2828  04DF  3074               	movlw	116
  2829  04E0  0020               	movlb	0	; select bank0
  2830  04E1  0639               	xorwf	main@userInput,w
  2831  04E2  1D03               	btfss	3,2
  2832  04E3  2CF7               	goto	l1791
  2833  04E4  3181  21D9  3183   	fcall	_determine_omega_mode_active
  2834  04E7  3A00               	xorlw	0
  2835  04E8  1D03               	skipz
  2836  04E9  2CF7               	goto	l1791
  2837                           
  2838                           ;main.c: 153: {
  2839                           ;main.c: 154: stun_counter += 10;
  2840  04EA  300A               	movlw	10
  2841  04EB  0020               	movlb	0	; select bank0
  2842  04EC  00B2               	movwf	??_main
  2843  04ED  0832               	movf	??_main,w
  2844  04EE  07BF               	addwf	_stun_counter,f
  2845                           
  2846                           ;main.c: 155: printf("The blade has been stunned.\n\r");
  2847  04EF  30D4               	movlw	low (STR_31| (0+32768))
  2848  04F0  00A0               	movwf	printf@f
  2849  04F1  308A               	movlw	high (STR_31| (0+32768))
  2850  04F2  00A1               	movwf	printf@f+1
  2851  04F3  3183  230F  3183   	fcall	_printf
  2852                           
  2853                           ;main.c: 157: break;
  2854  04F6  2D6A               	goto	l134
  2855  04F7                     l1791:	
  2856                           ;main.c: 158: }
  2857                           
  2858                           
  2859                           ;main.c: 159: else if(userInput == 'o')
  2860  04F7  306F               	movlw	111
  2861  04F8  0020               	movlb	0	; select bank0
  2862  04F9  0639               	xorwf	main@userInput,w
  2863  04FA  1D03               	btfss	3,2
  2864  04FB  2D17               	goto	l1803
  2865                           
  2866                           ;main.c: 160: {
  2867                           ;main.c: 161: if(!determine_omega_mode_active())
  2868  04FC  3181  21D9  3183   	fcall	_determine_omega_mode_active
  2869  04FF  3A00               	xorlw	0
  2870  0500  1D03               	skipz
  2871  0501  2D0D               	goto	l1799
  2872                           
  2873                           ;main.c: 162: {
  2874                           ;main.c: 163: omega_mode = 1;
  2875  0502  0020               	movlb	0	; select bank0
  2876  0503  01BE               	clrf	_omega_mode
  2877  0504  0ABE               	incf	_omega_mode,f
  2878                           
  2879                           ;main.c: 164: printf("Omega mode enabled.\n\r");
  2880  0505  3075               	movlw	low (STR_32| (0+32768))
  2881  0506  00A0               	movwf	printf@f
  2882  0507  308B               	movlw	high (STR_32| (0+32768))
  2883  0508  00A1               	movwf	printf@f+1
  2884  0509  3183  230F  3183   	fcall	_printf
  2885                           
  2886                           ;main.c: 165: }
  2887  050C  2D6A               	goto	l134
  2888  050D                     l1799:	
  2889                           
  2890                           ;main.c: 166: else
  2891                           ;main.c: 167: {
  2892                           ;main.c: 168: omega_mode = 0;
  2893  050D  0020               	movlb	0	; select bank0
  2894  050E  01BE               	clrf	_omega_mode
  2895                           
  2896                           ;main.c: 169: printf("Omega mode disabled.\n\r");
  2897  050F  305E               	movlw	low (STR_33| (0+32768))
  2898  0510  00A0               	movwf	printf@f
  2899  0511  308B               	movlw	high (STR_33| (0+32768))
  2900  0512  00A1               	movwf	printf@f+1
  2901  0513  3183  230F  3183   	fcall	_printf
  2902                           
  2903                           ;main.c: 170: }
  2904                           ;main.c: 171: break;
  2905  0516  2D6A               	goto	l134
  2906  0517                     l1803:	
  2907                           
  2908                           ;main.c: 172: }
  2909                           ;main.c: 174: userInput = ' ';
  2910  0517  3020               	movlw	32
  2911  0518  0020               	movlb	0	; select bank0
  2912  0519  00B2               	movwf	??_main
  2913  051A  0832               	movf	??_main,w
  2914  051B  00B9               	movwf	main@userInput
  2915  051C                     l1721:	
  2916                           ;main.c: 101: {
  2917                           ;main.c: 102: while( 1 )
  2918                           
  2919                           
  2920                           ;main.c: 103: {
  2921                           ;main.c: 104: display_health();
  2922  051C  3181  21D7  3183   	fcall	_display_health
  2923                           
  2924                           ;main.c: 105: userInput = determine_sword_was_swung();
  2925  051F  3182  221B  3183   	fcall	_determine_sword_was_swung
  2926  0522  0020               	movlb	0	; select bank0
  2927  0523  00B2               	movwf	??_main
  2928  0524  0832               	movf	??_main,w
  2929  0525  00B9               	movwf	main@userInput
  2930                           
  2931                           ;main.c: 106: if( ( userInput == 1 ) && ( ( health > 0) || determine_omega_mode_active()
      +                           ) )
  2932  0526  0339               	decf	main@userInput,w
  2933  0527  1D03               	btfss	3,2
  2934  0528  2C9C               	goto	l1757
  2935  0529  0840               	movf	_health,w
  2936  052A  1D03               	btfss	3,2
  2937  052B  2D32               	goto	l1731
  2938  052C  3181  21D9  3183   	fcall	_determine_omega_mode_active
  2939  052F  3A00               	xorlw	0
  2940  0530  1903               	skipnz
  2941  0531  2C9C               	goto	l1757
  2942  0532                     l1731:	
  2943                           
  2944                           ;main.c: 107: {
  2945                           ;main.c: 108: printf("Sword was swung\n\r");
  2946  0532  30B2               	movlw	low (STR_28| (0+32768))
  2947  0533  0020               	movlb	0	; select bank0
  2948  0534  00A0               	movwf	printf@f
  2949  0535  308B               	movlw	high (STR_28| (0+32768))
  2950  0536  00A1               	movwf	printf@f+1
  2951  0537  3183  230F  3183   	fcall	_printf
  2952                           
  2953                           ;main.c: 110: if(!determine_omega_mode_active())
  2954  053A  3181  21D9  3183   	fcall	_determine_omega_mode_active
  2955  053D  3A00               	xorlw	0
  2956  053E  1D03               	skipz
  2957  053F  2C9A               	goto	l1753
  2958                           
  2959                           ;main.c: 111: {
  2960                           ;main.c: 112: determine_packets_to_send(&pkt_arr);
  2961  0540  3035               	movlw	(low (main@pkt_arr| 0))& (0+255)
  2962  0541  3182  2269  3183   	fcall	_determine_packets_to_send
  2963                           
  2964                           ;main.c: 114: for(i = 0; i < 3; ++i)
  2965  0544  0020               	movlb	0	; select bank0
  2966  0545  01B8               	clrf	main@i
  2967  0546  3003               	movlw	3
  2968  0547  0238               	subwf	main@i,w
  2969  0548  1803               	btfsc	3,0
  2970  0549  2D66               	goto	l1751
  2971  054A                     l1743:	
  2972                           
  2973                           ;main.c: 115: {
  2974                           ;main.c: 116: if(pkt_arr[i] > 0)
  2975  054A  0838               	movf	main@i,w
  2976  054B  3E35               	addlw	(low (main@pkt_arr| 0))& (0+255)
  2977  054C  0086               	movwf	6
  2978  054D  0187               	clrf	7
  2979  054E  0801               	movf	1,w
  2980  054F  1903               	btfsc	3,2
  2981  0550  2D5D               	goto	l1747
  2982                           
  2983                           ;main.c: 117: {
  2984                           ;main.c: 118: output_ir(i, pkt_arr[i]);
  2985  0551  0838               	movf	main@i,w
  2986  0552  3E35               	addlw	(low (main@pkt_arr| 0))& (0+255)
  2987  0553  0086               	movwf	6
  2988  0554  0187               	clrf	7
  2989  0555  0801               	movf	1,w
  2990  0556  00B2               	movwf	??_main
  2991  0557  0832               	movf	??_main,w
  2992  0558  00AE               	movwf	output_ir@amount
  2993  0559  0838               	movf	main@i,w
  2994  055A  3182  22AD  3183   	fcall	_output_ir
  2995  055D                     l1747:	
  2996  055D  3001               	movlw	1
  2997  055E  0020               	movlb	0	; select bank0
  2998  055F  00B2               	movwf	??_main
  2999  0560  0832               	movf	??_main,w
  3000  0561  07B8               	addwf	main@i,f
  3001  0562  3003               	movlw	3
  3002  0563  0238               	subwf	main@i,w
  3003  0564  1C03               	skipc
  3004  0565  2D4A               	goto	l1743
  3005  0566                     l1751:	
  3006                           
  3007                           ;main.c: 119: }
  3008                           ;main.c: 120: }
  3009                           ;main.c: 121: display_blade_lights(0);
  3010  0566  3000               	movlw	0
  3011  0567                     L6:	
  3012  0567  3182  223B  3183   	fcall	_display_blade_lights
  3013  056A                     l134:	
  3014                           
  3015                           ;main.c: 175: }
  3016                           ;main.c: 177: GIE = 0;
  3017  056A  138B               	bcf	11,7	;volatile
  3018                           
  3019                           ;main.c: 178: while( ( stun_counter > 0 ) && !determine_omega_mode_active() )
  3020  056B  2D7E               	goto	l1811
  3021  056C                     l149:	
  3022                           
  3023                           ;main.c: 179: {
  3024                           ;main.c: 180: GIE = 1;
  3025  056C  178B               	bsf	11,7	;volatile
  3026                           
  3027                           ;main.c: 181: _delay((unsigned long)((100)*(32000000/4000.0)));
  3028  056D  3005               	movlw	5
  3029  056E  0020               	movlb	0	; select bank0
  3030  056F  00B4               	movwf	??_main+2
  3031  0570  300F               	movlw	15
  3032  0571  00B3               	movwf	??_main+1
  3033  0572  30F4               	movlw	244
  3034  0573  00B2               	movwf	??_main
  3035  0574                     u2147:	
  3036  0574  0BB2               	decfsz	??_main,f
  3037  0575  2D74               	goto	u2147
  3038  0576  0BB3               	decfsz	??_main+1,f
  3039  0577  2D74               	goto	u2147
  3040  0578  0BB4               	decfsz	??_main+2,f
  3041  0579  2D74               	goto	u2147
  3042                           
  3043                           ;main.c: 182: GIE = 0;
  3044  057A  138B               	bcf	11,7	;volatile
  3045                           
  3046                           ;main.c: 183: --stun_counter;
  3047  057B  3001               	movlw	1
  3048  057C  0020               	movlb	0	; select bank0
  3049  057D  02BF               	subwf	_stun_counter,f
  3050  057E                     l1811:	
  3051  057E  0020               	movlb	0	; select bank0
  3052  057F  083F               	movf	_stun_counter,w
  3053  0580  1903               	btfsc	3,2
  3054  0581  2FEE               	goto	l227
  3055  0582  3181  21D9  3183   	fcall	_determine_omega_mode_active
  3056  0585  3A00               	xorlw	0
  3057  0586  1903               	skipnz
  3058  0587  2D6C               	goto	l149
  3059  0588  2FEE               	goto	l227
  3060  0589                     l1815:	
  3061                           ;main.c: 186: }
  3062                           
  3063                           ;main.c: 184: }
  3064                           ;main.c: 185: GIE = 1;
  3065                           
  3066                           
  3067                           ;main.c: 188: else if( blade == 2 )
  3068  0589  3002               	movlw	2
  3069  058A  0020               	movlb	0	; select bank0
  3070  058B  063D               	xorwf	_blade,w
  3071  058C  1D03               	btfss	3,2
  3072  058D  2E06               	goto	l1863
  3073  058E                     l1817:	
  3074                           ;main.c: 189: {
  3075                           ;main.c: 190: while( 1 )
  3076                           
  3077                           
  3078                           ;main.c: 191: {
  3079                           ;main.c: 192: display_health();
  3080  058E  3181  21D7  3183   	fcall	_display_health
  3081                           
  3082                           ;main.c: 193: userInput = determine_sword_was_swung();
  3083  0591  3182  221B  3183   	fcall	_determine_sword_was_swung
  3084  0594  0020               	movlb	0	; select bank0
  3085  0595  00B2               	movwf	??_main
  3086  0596  0832               	movf	??_main,w
  3087  0597  00B9               	movwf	main@userInput
  3088                           
  3089                           ;main.c: 194: if( userInput == 1 )
  3090  0598  0339               	decf	main@userInput,w
  3091  0599  1D03               	btfss	3,2
  3092  059A  2DE0               	goto	l1849
  3093                           
  3094                           ;main.c: 195: {
  3095                           ;main.c: 196: printf("Sword was swung\n\r");
  3096  059B  30B2               	movlw	low (STR_28| (0+32768))
  3097  059C  00A0               	movwf	printf@f
  3098  059D  308B               	movlw	high (STR_28| (0+32768))
  3099  059E  00A1               	movwf	printf@f+1
  3100  059F  3183  230F  3183   	fcall	_printf
  3101                           
  3102                           ;main.c: 198: if(!determine_omega_mode_active())
  3103  05A2  3181  21D9  3183   	fcall	_determine_omega_mode_active
  3104  05A5  3A00               	xorlw	0
  3105  05A6  1D03               	skipz
  3106  05A7  2DD7               	goto	l1845
  3107                           
  3108                           ;main.c: 199: {
  3109                           ;main.c: 200: determine_packets_to_send(&pkt_arr);
  3110  05A8  3035               	movlw	(low (main@pkt_arr| 0))& (0+255)
  3111  05A9  3182  2269  3183   	fcall	_determine_packets_to_send
  3112                           
  3113                           ;main.c: 202: for(i = 0; i < 3; ++i)
  3114  05AC  0020               	movlb	0	; select bank0
  3115  05AD  01B8               	clrf	main@i
  3116  05AE  3003               	movlw	3
  3117  05AF  0238               	subwf	main@i,w
  3118  05B0  1803               	btfsc	3,0
  3119  05B1  2DCE               	goto	l1843
  3120  05B2                     l1835:	
  3121                           
  3122                           ;main.c: 203: {
  3123                           ;main.c: 204: if(pkt_arr[i] > 0)
  3124  05B2  0838               	movf	main@i,w
  3125  05B3  3E35               	addlw	(low (main@pkt_arr| 0))& (0+255)
  3126  05B4  0086               	movwf	6
  3127  05B5  0187               	clrf	7
  3128  05B6  0801               	movf	1,w
  3129  05B7  1903               	btfsc	3,2
  3130  05B8  2DC5               	goto	l1839
  3131                           
  3132                           ;main.c: 205: {
  3133                           ;main.c: 206: output_ir(i, pkt_arr[i]);
  3134  05B9  0838               	movf	main@i,w
  3135  05BA  3E35               	addlw	(low (main@pkt_arr| 0))& (0+255)
  3136  05BB  0086               	movwf	6
  3137  05BC  0187               	clrf	7
  3138  05BD  0801               	movf	1,w
  3139  05BE  00B2               	movwf	??_main
  3140  05BF  0832               	movf	??_main,w
  3141  05C0  00AE               	movwf	output_ir@amount
  3142  05C1  0838               	movf	main@i,w
  3143  05C2  3182  22AD  3183   	fcall	_output_ir
  3144  05C5                     l1839:	
  3145  05C5  3001               	movlw	1
  3146  05C6  0020               	movlb	0	; select bank0
  3147  05C7  00B2               	movwf	??_main
  3148  05C8  0832               	movf	??_main,w
  3149  05C9  07B8               	addwf	main@i,f
  3150  05CA  3003               	movlw	3
  3151  05CB  0238               	subwf	main@i,w
  3152  05CC  1C03               	skipc
  3153  05CD  2DB2               	goto	l1835
  3154  05CE                     l1843:	
  3155                           
  3156                           ;main.c: 207: }
  3157                           ;main.c: 208: }
  3158                           ;main.c: 210: play_sound(0);
  3159  05CE  3000               	movlw	0
  3160  05CF  3182  2252  3183   	fcall	_play_sound
  3161                           
  3162                           ;main.c: 211: display_blade_lights(0);
  3163  05D2  3000               	movlw	0
  3164  05D3  3182  223B  3183   	fcall	_display_blade_lights
  3165                           
  3166                           ;main.c: 212: }
  3167  05D6  2FEF               	goto	l2055
  3168  05D7                     l1845:	
  3169                           
  3170                           ;main.c: 213: else
  3171                           ;main.c: 214: {
  3172                           ;main.c: 215: play_sound(1);
  3173  05D7  3001               	movlw	1
  3174  05D8  3182  2252  3183   	fcall	_play_sound
  3175                           
  3176                           ;main.c: 216: display_blade_lights(1);
  3177  05DB  3001               	movlw	1
  3178  05DC  3182  223B  3183   	fcall	_display_blade_lights
  3179                           
  3180                           ;main.c: 217: }
  3181                           ;main.c: 219: break;
  3182  05DF  2FEF               	goto	l2055
  3183  05E0                     l1849:	
  3184                           ;main.c: 220: }
  3185                           
  3186                           
  3187                           ;main.c: 221: else if(userInput == 'o')
  3188  05E0  306F               	movlw	111
  3189  05E1  0020               	movlb	0	; select bank0
  3190  05E2  0639               	xorwf	main@userInput,w
  3191  05E3  1D03               	btfss	3,2
  3192  05E4  2E00               	goto	l1861
  3193                           
  3194                           ;main.c: 222: {
  3195                           ;main.c: 223: if(!determine_omega_mode_active())
  3196  05E5  3181  21D9  3183   	fcall	_determine_omega_mode_active
  3197  05E8  3A00               	xorlw	0
  3198  05E9  1D03               	skipz
  3199  05EA  2DF6               	goto	l1857
  3200                           
  3201                           ;main.c: 224: {
  3202                           ;main.c: 225: omega_mode = 1;
  3203  05EB  0020               	movlb	0	; select bank0
  3204  05EC  01BE               	clrf	_omega_mode
  3205  05ED  0ABE               	incf	_omega_mode,f
  3206                           
  3207                           ;main.c: 226: printf("Omega mode enabled.\n\r");
  3208  05EE  3075               	movlw	low (STR_32| (0+32768))
  3209  05EF  00A0               	movwf	printf@f
  3210  05F0  308B               	movlw	high (STR_32| (0+32768))
  3211  05F1  00A1               	movwf	printf@f+1
  3212  05F2  3183  230F  3183   	fcall	_printf
  3213                           
  3214                           ;main.c: 227: }
  3215  05F5  2FEF               	goto	l2055
  3216  05F6                     l1857:	
  3217                           
  3218                           ;main.c: 228: else
  3219                           ;main.c: 229: {
  3220                           ;main.c: 230: omega_mode = 0;
  3221  05F6  0020               	movlb	0	; select bank0
  3222  05F7  01BE               	clrf	_omega_mode
  3223                           
  3224                           ;main.c: 231: printf("Omega mode disabled.\n\r");
  3225  05F8  305E               	movlw	low (STR_33| (0+32768))
  3226  05F9  00A0               	movwf	printf@f
  3227  05FA  308B               	movlw	high (STR_33| (0+32768))
  3228  05FB  00A1               	movwf	printf@f+1
  3229  05FC  3183  230F  3183   	fcall	_printf
  3230                           
  3231                           ;main.c: 232: }
  3232                           ;main.c: 233: break;
  3233  05FF  2FEF               	goto	l2055
  3234  0600                     l1861:	
  3235                           
  3236                           ;main.c: 234: }
  3237                           ;main.c: 236: userInput = ' ';
  3238  0600  3020               	movlw	32
  3239  0601  0020               	movlb	0	; select bank0
  3240  0602  00B2               	movwf	??_main
  3241  0603  0832               	movf	??_main,w
  3242  0604  00B9               	movwf	main@userInput
  3243  0605  2D8E               	goto	l1817
  3244  0606                     l1863:	
  3245                           ;main.c: 237: }
  3246                           ;main.c: 238: }
  3247                           
  3248                           
  3249                           ;main.c: 240: else if( blade == 3 )
  3250  0606  3003               	movlw	3
  3251  0607  063D               	xorwf	_blade,w
  3252  0608  1D03               	btfss	3,2
  3253  0609  2EFA               	goto	l1959
  3254                           
  3255                           ;main.c: 263: }
  3256  060A  2E8D               	goto	l1865
  3257  060B                     l1897:	
  3258                           
  3259                           ;main.c: 264: else
  3260                           ;main.c: 265: {
  3261                           ;main.c: 266: display_blade_lights(1);
  3262  060B  3001               	movlw	1
  3263  060C  2ED8               	goto	L7
  3264  060D                     l1901:	
  3265                           ;main.c: 270: }
  3266                           
  3267                           ;main.c: 267: }
  3268                           ;main.c: 269: break;
  3269                           
  3270                           
  3271                           ;main.c: 271: else if(userInput == 'd' && !determine_omega_mode_active())
  3272  060D  3064               	movlw	100
  3273  060E  0020               	movlb	0	; select bank0
  3274  060F  0639               	xorwf	main@userInput,w
  3275  0610  1D03               	btfss	3,2
  3276  0611  2E2D               	goto	l1913
  3277  0612  3181  21D9  3183   	fcall	_determine_omega_mode_active
  3278  0615  3A00               	xorlw	0
  3279  0616  1D03               	skipz
  3280  0617  2E2D               	goto	l1913
  3281                           
  3282                           ;main.c: 272: {
  3283                           ;main.c: 273: if(health > 0)
  3284  0618  0020               	movlb	0	; select bank0
  3285  0619  0840               	movf	_health,w
  3286  061A  1903               	btfsc	3,2
  3287  061B  2E1E               	goto	l1909
  3288                           
  3289                           ;main.c: 274: {
  3290                           ;main.c: 275: health -= 10;
  3291  061C  300A               	movlw	10
  3292  061D  02C0               	subwf	_health,f
  3293  061E                     l1909:	
  3294                           
  3295                           ;main.c: 276: }
  3296                           ;main.c: 277: printf("The blade has been damaged. Health = %d.\n\r",
  3297                           ;main.c: 278: health);
  3298  061E  3060               	movlw	low (STR_29| (0+32768))
  3299  061F  00A0               	movwf	printf@f
  3300  0620  3089               	movlw	high (STR_29| (0+32768))
  3301  0621  00A1               	movwf	printf@f+1
  3302  0622  0840               	movf	_health,w
  3303  0623  00B2               	movwf	??_main
  3304  0624  01B3               	clrf	??_main+1
  3305  0625  0832               	movf	??_main,w
  3306  0626  00A2               	movwf	?_printf+2
  3307  0627  0833               	movf	??_main+1,w
  3308  0628  00A3               	movwf	?_printf+3
  3309  0629  3183  230F  3183   	fcall	_printf
  3310                           
  3311                           ;main.c: 280: break;
  3312  062C  2EDB               	goto	l179
  3313  062D                     l1913:	
  3314                           ;main.c: 281: }
  3315                           
  3316                           
  3317                           ;main.c: 282: else if(userInput == 'h' && !determine_omega_mode_active())
  3318  062D  3068               	movlw	104
  3319  062E  0020               	movlb	0	; select bank0
  3320  062F  0639               	xorwf	main@userInput,w
  3321  0630  1D03               	btfss	3,2
  3322  0631  2E50               	goto	l1925
  3323  0632  3181  21D9  3183   	fcall	_determine_omega_mode_active
  3324  0635  3A00               	xorlw	0
  3325  0636  1D03               	skipz
  3326  0637  2E50               	goto	l1925
  3327                           
  3328                           ;main.c: 283: {
  3329                           ;main.c: 284: if(health < 50)
  3330  0638  3032               	movlw	50
  3331  0639  0020               	movlb	0	; select bank0
  3332  063A  0240               	subwf	_health,w
  3333  063B  1803               	skipnc
  3334  063C  2E41               	goto	l1921
  3335                           
  3336                           ;main.c: 285: {
  3337                           ;main.c: 286: health += 10;
  3338  063D  300A               	movlw	10
  3339  063E  00B2               	movwf	??_main
  3340  063F  0832               	movf	??_main,w
  3341  0640  07C0               	addwf	_health,f
  3342  0641                     l1921:	
  3343                           
  3344                           ;main.c: 287: }
  3345                           ;main.c: 288: printf("The blade has been healed. Health = %d.\n\r",
  3346                           ;main.c: 289: health);
  3347  0641  308B               	movlw	low (STR_30| (0+32768))
  3348  0642  00A0               	movwf	printf@f
  3349  0643  3089               	movlw	high (STR_30| (0+32768))
  3350  0644  00A1               	movwf	printf@f+1
  3351  0645  0840               	movf	_health,w
  3352  0646  00B2               	movwf	??_main
  3353  0647  01B3               	clrf	??_main+1
  3354  0648  0832               	movf	??_main,w
  3355  0649  00A2               	movwf	?_printf+2
  3356  064A  0833               	movf	??_main+1,w
  3357  064B  00A3               	movwf	?_printf+3
  3358  064C  3183  230F  3183   	fcall	_printf
  3359                           
  3360                           ;main.c: 291: break;
  3361  064F  2EDB               	goto	l179
  3362  0650                     l1925:	
  3363                           ;main.c: 292: }
  3364                           
  3365                           
  3366                           ;main.c: 293: else if(userInput == 't' && !determine_omega_mode_active())
  3367  0650  3074               	movlw	116
  3368  0651  0020               	movlb	0	; select bank0
  3369  0652  0639               	xorwf	main@userInput,w
  3370  0653  1D03               	btfss	3,2
  3371  0654  2E68               	goto	l1935
  3372  0655  3181  21D9  3183   	fcall	_determine_omega_mode_active
  3373  0658  3A00               	xorlw	0
  3374  0659  1D03               	skipz
  3375  065A  2E68               	goto	l1935
  3376                           
  3377                           ;main.c: 294: {
  3378                           ;main.c: 295: stun_counter += 10;
  3379  065B  300A               	movlw	10
  3380  065C  0020               	movlb	0	; select bank0
  3381  065D  00B2               	movwf	??_main
  3382  065E  0832               	movf	??_main,w
  3383  065F  07BF               	addwf	_stun_counter,f
  3384                           
  3385                           ;main.c: 296: printf("The blade has been stunned.\n\r");
  3386  0660  30D4               	movlw	low (STR_31| (0+32768))
  3387  0661  00A0               	movwf	printf@f
  3388  0662  308A               	movlw	high (STR_31| (0+32768))
  3389  0663  00A1               	movwf	printf@f+1
  3390  0664  3183  230F  3183   	fcall	_printf
  3391                           
  3392                           ;main.c: 298: break;
  3393  0667  2EDB               	goto	l179
  3394  0668                     l1935:	
  3395                           ;main.c: 299: }
  3396                           
  3397                           
  3398                           ;main.c: 300: else if(userInput == 'o')
  3399  0668  306F               	movlw	111
  3400  0669  0020               	movlb	0	; select bank0
  3401  066A  0639               	xorwf	main@userInput,w
  3402  066B  1D03               	btfss	3,2
  3403  066C  2E88               	goto	l1947
  3404                           
  3405                           ;main.c: 301: {
  3406                           ;main.c: 302: if(!determine_omega_mode_active())
  3407  066D  3181  21D9  3183   	fcall	_determine_omega_mode_active
  3408  0670  3A00               	xorlw	0
  3409  0671  1D03               	skipz
  3410  0672  2E7E               	goto	l1943
  3411                           
  3412                           ;main.c: 303: {
  3413                           ;main.c: 304: omega_mode = 1;
  3414  0673  0020               	movlb	0	; select bank0
  3415  0674  01BE               	clrf	_omega_mode
  3416  0675  0ABE               	incf	_omega_mode,f
  3417                           
  3418                           ;main.c: 305: printf("Omega mode enabled.\n\r");
  3419  0676  3075               	movlw	low (STR_32| (0+32768))
  3420  0677  00A0               	movwf	printf@f
  3421  0678  308B               	movlw	high (STR_32| (0+32768))
  3422  0679  00A1               	movwf	printf@f+1
  3423  067A  3183  230F  3183   	fcall	_printf
  3424                           
  3425                           ;main.c: 306: }
  3426  067D  2EDB               	goto	l179
  3427  067E                     l1943:	
  3428                           
  3429                           ;main.c: 307: else
  3430                           ;main.c: 308: {
  3431                           ;main.c: 309: omega_mode = 0;
  3432  067E  0020               	movlb	0	; select bank0
  3433  067F  01BE               	clrf	_omega_mode
  3434                           
  3435                           ;main.c: 310: printf("Omega mode disabled.\n\r");
  3436  0680  305E               	movlw	low (STR_33| (0+32768))
  3437  0681  00A0               	movwf	printf@f
  3438  0682  308B               	movlw	high (STR_33| (0+32768))
  3439  0683  00A1               	movwf	printf@f+1
  3440  0684  3183  230F  3183   	fcall	_printf
  3441                           
  3442                           ;main.c: 311: }
  3443                           ;main.c: 312: break;
  3444  0687  2EDB               	goto	l179
  3445  0688                     l1947:	
  3446                           
  3447                           ;main.c: 313: }
  3448                           ;main.c: 315: userInput = ' ';
  3449  0688  3020               	movlw	32
  3450  0689  0020               	movlb	0	; select bank0
  3451  068A  00B2               	movwf	??_main
  3452  068B  0832               	movf	??_main,w
  3453  068C  00B9               	movwf	main@userInput
  3454  068D                     l1865:	
  3455                           ;main.c: 241: {
  3456                           ;main.c: 242: while( 1 )
  3457                           
  3458                           
  3459                           ;main.c: 243: {
  3460                           ;main.c: 244: display_health();
  3461  068D  3181  21D7  3183   	fcall	_display_health
  3462                           
  3463                           ;main.c: 245: userInput = determine_sword_was_swung();
  3464  0690  3182  221B  3183   	fcall	_determine_sword_was_swung
  3465  0693  0020               	movlb	0	; select bank0
  3466  0694  00B2               	movwf	??_main
  3467  0695  0832               	movf	??_main,w
  3468  0696  00B9               	movwf	main@userInput
  3469                           
  3470                           ;main.c: 246: if( ( userInput == 1 ) && ( ( health > 0) || determine_omega_mode_active()
      +                           ) )
  3471  0697  0339               	decf	main@userInput,w
  3472  0698  1D03               	btfss	3,2
  3473  0699  2E0D               	goto	l1901
  3474  069A  0840               	movf	_health,w
  3475  069B  1D03               	btfss	3,2
  3476  069C  2EA3               	goto	l1875
  3477  069D  3181  21D9  3183   	fcall	_determine_omega_mode_active
  3478  06A0  3A00               	xorlw	0
  3479  06A1  1903               	skipnz
  3480  06A2  2E0D               	goto	l1901
  3481  06A3                     l1875:	
  3482                           
  3483                           ;main.c: 247: {
  3484                           ;main.c: 248: printf("Sword was swung\n\r");
  3485  06A3  30B2               	movlw	low (STR_28| (0+32768))
  3486  06A4  0020               	movlb	0	; select bank0
  3487  06A5  00A0               	movwf	printf@f
  3488  06A6  308B               	movlw	high (STR_28| (0+32768))
  3489  06A7  00A1               	movwf	printf@f+1
  3490  06A8  3183  230F  3183   	fcall	_printf
  3491                           
  3492                           ;main.c: 250: determine_packets_to_send(&pkt_arr);
  3493  06AB  3035               	movlw	(low (main@pkt_arr| 0))& (0+255)
  3494  06AC  3182  2269  3183   	fcall	_determine_packets_to_send
  3495                           
  3496                           ;main.c: 252: for(i = 0; i < 3; ++i)
  3497  06AF  0020               	movlb	0	; select bank0
  3498  06B0  01B8               	clrf	main@i
  3499  06B1  3003               	movlw	3
  3500  06B2  0238               	subwf	main@i,w
  3501  06B3  1803               	btfsc	3,0
  3502  06B4  2ED1               	goto	l1893
  3503  06B5                     l1885:	
  3504                           
  3505                           ;main.c: 253: {
  3506                           ;main.c: 254: if(pkt_arr[i] > 0)
  3507  06B5  0838               	movf	main@i,w
  3508  06B6  3E35               	addlw	(low (main@pkt_arr| 0))& (0+255)
  3509  06B7  0086               	movwf	6
  3510  06B8  0187               	clrf	7
  3511  06B9  0801               	movf	1,w
  3512  06BA  1903               	btfsc	3,2
  3513  06BB  2EC8               	goto	l1889
  3514                           
  3515                           ;main.c: 255: {
  3516                           ;main.c: 256: output_ir(i, pkt_arr[i]);
  3517  06BC  0838               	movf	main@i,w
  3518  06BD  3E35               	addlw	(low (main@pkt_arr| 0))& (0+255)
  3519  06BE  0086               	movwf	6
  3520  06BF  0187               	clrf	7
  3521  06C0  0801               	movf	1,w
  3522  06C1  00B2               	movwf	??_main
  3523  06C2  0832               	movf	??_main,w
  3524  06C3  00AE               	movwf	output_ir@amount
  3525  06C4  0838               	movf	main@i,w
  3526  06C5  3182  22AD  3183   	fcall	_output_ir
  3527  06C8                     l1889:	
  3528  06C8  3001               	movlw	1
  3529  06C9  0020               	movlb	0	; select bank0
  3530  06CA  00B2               	movwf	??_main
  3531  06CB  0832               	movf	??_main,w
  3532  06CC  07B8               	addwf	main@i,f
  3533  06CD  3003               	movlw	3
  3534  06CE  0238               	subwf	main@i,w
  3535  06CF  1C03               	skipc
  3536  06D0  2EB5               	goto	l1885
  3537  06D1                     l1893:	
  3538                           
  3539                           ;main.c: 257: }
  3540                           ;main.c: 258: }
  3541                           ;main.c: 260: if(!determine_omega_mode_active())
  3542  06D1  3181  21D9  3183   	fcall	_determine_omega_mode_active
  3543  06D4  3A00               	xorlw	0
  3544  06D5  1D03               	skipz
  3545  06D6  2E0B               	goto	l1897
  3546                           
  3547                           ;main.c: 261: {
  3548                           ;main.c: 262: display_blade_lights(0);
  3549  06D7  3000               	movlw	0
  3550  06D8                     L7:	
  3551  06D8  3182  223B  3183   	fcall	_display_blade_lights
  3552  06DB                     l179:	
  3553                           
  3554                           ;main.c: 316: }
  3555                           ;main.c: 318: GIE = 0;
  3556  06DB  138B               	bcf	11,7	;volatile
  3557                           
  3558                           ;main.c: 319: while( ( stun_counter > 0 ) && !determine_omega_mode_active() )
  3559  06DC  2EEF               	goto	l1955
  3560  06DD                     l194:	
  3561                           
  3562                           ;main.c: 320: {
  3563                           ;main.c: 321: GIE = 1;
  3564  06DD  178B               	bsf	11,7	;volatile
  3565                           
  3566                           ;main.c: 322: _delay((unsigned long)((100)*(32000000/4000.0)));
  3567  06DE  3005               	movlw	5
  3568  06DF  0020               	movlb	0	; select bank0
  3569  06E0  00B4               	movwf	??_main+2
  3570  06E1  300F               	movlw	15
  3571  06E2  00B3               	movwf	??_main+1
  3572  06E3  30F4               	movlw	244
  3573  06E4  00B2               	movwf	??_main
  3574  06E5                     u2157:	
  3575  06E5  0BB2               	decfsz	??_main,f
  3576  06E6  2EE5               	goto	u2157
  3577  06E7  0BB3               	decfsz	??_main+1,f
  3578  06E8  2EE5               	goto	u2157
  3579  06E9  0BB4               	decfsz	??_main+2,f
  3580  06EA  2EE5               	goto	u2157
  3581                           
  3582                           ;main.c: 323: GIE = 0;
  3583  06EB  138B               	bcf	11,7	;volatile
  3584                           
  3585                           ;main.c: 324: --stun_counter;
  3586  06EC  3001               	movlw	1
  3587  06ED  0020               	movlb	0	; select bank0
  3588  06EE  02BF               	subwf	_stun_counter,f
  3589  06EF                     l1955:	
  3590  06EF  0020               	movlb	0	; select bank0
  3591  06F0  083F               	movf	_stun_counter,w
  3592  06F1  1903               	btfsc	3,2
  3593  06F2  2FEE               	goto	l227
  3594  06F3  3181  21D9  3183   	fcall	_determine_omega_mode_active
  3595  06F6  3A00               	xorlw	0
  3596  06F7  1903               	skipnz
  3597  06F8  2EDD               	goto	l194
  3598  06F9  2FEE               	goto	l227
  3599  06FA                     l1959:	
  3600                           ;main.c: 327: }
  3601                           
  3602                           ;main.c: 325: }
  3603                           ;main.c: 326: GIE = 1;
  3604                           
  3605                           
  3606                           ;main.c: 329: else if( blade == 4 )
  3607  06FA  3004               	movlw	4
  3608  06FB  0020               	movlb	0	; select bank0
  3609  06FC  063D               	xorwf	_blade,w
  3610  06FD  1D03               	btfss	3,2
  3611  06FE  2FEF               	goto	l2055
  3612                           
  3613                           ;main.c: 351: }
  3614  06FF  2F82               	goto	l1961
  3615  0700                     l1993:	
  3616                           
  3617                           ;main.c: 352: else
  3618                           ;main.c: 353: {
  3619                           ;main.c: 354: display_blade_lights(1);
  3620  0700  3001               	movlw	1
  3621  0701  2FCD               	goto	L8
  3622  0702                     l1997:	
  3623                           ;main.c: 358: }
  3624                           
  3625                           ;main.c: 355: }
  3626                           ;main.c: 357: break;
  3627                           
  3628                           
  3629                           ;main.c: 359: else if(userInput == 'd' && !determine_omega_mode_active())
  3630  0702  3064               	movlw	100
  3631  0703  0020               	movlb	0	; select bank0
  3632  0704  0639               	xorwf	main@userInput,w
  3633  0705  1D03               	btfss	3,2
  3634  0706  2F22               	goto	l2009
  3635  0707  3181  21D9  3183   	fcall	_determine_omega_mode_active
  3636  070A  3A00               	xorlw	0
  3637  070B  1D03               	skipz
  3638  070C  2F22               	goto	l2009
  3639                           
  3640                           ;main.c: 360: {
  3641                           ;main.c: 361: if(health > 0)
  3642  070D  0020               	movlb	0	; select bank0
  3643  070E  0840               	movf	_health,w
  3644  070F  1903               	btfsc	3,2
  3645  0710  2F13               	goto	l2005
  3646                           
  3647                           ;main.c: 362: {
  3648                           ;main.c: 363: health -= 10;
  3649  0711  300A               	movlw	10
  3650  0712  02C0               	subwf	_health,f
  3651  0713                     l2005:	
  3652                           
  3653                           ;main.c: 364: }
  3654                           ;main.c: 365: printf("The blade has been damaged. Health = %d.\n\r",
  3655                           ;main.c: 366: health);
  3656  0713  3060               	movlw	low (STR_29| (0+32768))
  3657  0714  00A0               	movwf	printf@f
  3658  0715  3089               	movlw	high (STR_29| (0+32768))
  3659  0716  00A1               	movwf	printf@f+1
  3660  0717  0840               	movf	_health,w
  3661  0718  00B2               	movwf	??_main
  3662  0719  01B3               	clrf	??_main+1
  3663  071A  0832               	movf	??_main,w
  3664  071B  00A2               	movwf	?_printf+2
  3665  071C  0833               	movf	??_main+1,w
  3666  071D  00A3               	movwf	?_printf+3
  3667  071E  3183  230F  3183   	fcall	_printf
  3668                           
  3669                           ;main.c: 368: break;
  3670  0721  2FD0               	goto	l209
  3671  0722                     l2009:	
  3672                           ;main.c: 369: }
  3673                           
  3674                           
  3675                           ;main.c: 370: else if(userInput == 'h' && !determine_omega_mode_active())
  3676  0722  3068               	movlw	104
  3677  0723  0020               	movlb	0	; select bank0
  3678  0724  0639               	xorwf	main@userInput,w
  3679  0725  1D03               	btfss	3,2
  3680  0726  2F45               	goto	l2021
  3681  0727  3181  21D9  3183   	fcall	_determine_omega_mode_active
  3682  072A  3A00               	xorlw	0
  3683  072B  1D03               	skipz
  3684  072C  2F45               	goto	l2021
  3685                           
  3686                           ;main.c: 371: {
  3687                           ;main.c: 372: if(health < 50)
  3688  072D  3032               	movlw	50
  3689  072E  0020               	movlb	0	; select bank0
  3690  072F  0240               	subwf	_health,w
  3691  0730  1803               	skipnc
  3692  0731  2F36               	goto	l2017
  3693                           
  3694                           ;main.c: 373: {
  3695                           ;main.c: 374: health += 10;
  3696  0732  300A               	movlw	10
  3697  0733  00B2               	movwf	??_main
  3698  0734  0832               	movf	??_main,w
  3699  0735  07C0               	addwf	_health,f
  3700  0736                     l2017:	
  3701                           
  3702                           ;main.c: 375: }
  3703                           ;main.c: 376: printf("The blade has been healed. Health = %d.\n\r",
  3704                           ;main.c: 377: health);
  3705  0736  308B               	movlw	low (STR_30| (0+32768))
  3706  0737  00A0               	movwf	printf@f
  3707  0738  3089               	movlw	high (STR_30| (0+32768))
  3708  0739  00A1               	movwf	printf@f+1
  3709  073A  0840               	movf	_health,w
  3710  073B  00B2               	movwf	??_main
  3711  073C  01B3               	clrf	??_main+1
  3712  073D  0832               	movf	??_main,w
  3713  073E  00A2               	movwf	?_printf+2
  3714  073F  0833               	movf	??_main+1,w
  3715  0740  00A3               	movwf	?_printf+3
  3716  0741  3183  230F  3183   	fcall	_printf
  3717                           
  3718                           ;main.c: 379: break;
  3719  0744  2FD0               	goto	l209
  3720  0745                     l2021:	
  3721                           ;main.c: 380: }
  3722                           
  3723                           
  3724                           ;main.c: 381: else if(userInput == 't' && !determine_omega_mode_active())
  3725  0745  3074               	movlw	116
  3726  0746  0020               	movlb	0	; select bank0
  3727  0747  0639               	xorwf	main@userInput,w
  3728  0748  1D03               	btfss	3,2
  3729  0749  2F5D               	goto	l2031
  3730  074A  3181  21D9  3183   	fcall	_determine_omega_mode_active
  3731  074D  3A00               	xorlw	0
  3732  074E  1D03               	skipz
  3733  074F  2F5D               	goto	l2031
  3734                           
  3735                           ;main.c: 382: {
  3736                           ;main.c: 383: stun_counter += 10;
  3737  0750  300A               	movlw	10
  3738  0751  0020               	movlb	0	; select bank0
  3739  0752  00B2               	movwf	??_main
  3740  0753  0832               	movf	??_main,w
  3741  0754  07BF               	addwf	_stun_counter,f
  3742                           
  3743                           ;main.c: 384: printf("The blade has been stunned.\n\r");
  3744  0755  30D4               	movlw	low (STR_31| (0+32768))
  3745  0756  00A0               	movwf	printf@f
  3746  0757  308A               	movlw	high (STR_31| (0+32768))
  3747  0758  00A1               	movwf	printf@f+1
  3748  0759  3183  230F  3183   	fcall	_printf
  3749                           
  3750                           ;main.c: 386: break;
  3751  075C  2FD0               	goto	l209
  3752  075D                     l2031:	
  3753                           ;main.c: 387: }
  3754                           
  3755                           
  3756                           ;main.c: 388: else if(userInput == 'o')
  3757  075D  306F               	movlw	111
  3758  075E  0020               	movlb	0	; select bank0
  3759  075F  0639               	xorwf	main@userInput,w
  3760  0760  1D03               	btfss	3,2
  3761  0761  2F7D               	goto	l2043
  3762                           
  3763                           ;main.c: 389: {
  3764                           ;main.c: 390: if(!determine_omega_mode_active())
  3765  0762  3181  21D9  3183   	fcall	_determine_omega_mode_active
  3766  0765  3A00               	xorlw	0
  3767  0766  1D03               	skipz
  3768  0767  2F73               	goto	l2039
  3769                           
  3770                           ;main.c: 391: {
  3771                           ;main.c: 392: omega_mode = 1;
  3772  0768  0020               	movlb	0	; select bank0
  3773  0769  01BE               	clrf	_omega_mode
  3774  076A  0ABE               	incf	_omega_mode,f
  3775                           
  3776                           ;main.c: 393: printf("Omega mode enabled.\n\r");
  3777  076B  3075               	movlw	low (STR_32| (0+32768))
  3778  076C  00A0               	movwf	printf@f
  3779  076D  308B               	movlw	high (STR_32| (0+32768))
  3780  076E  00A1               	movwf	printf@f+1
  3781  076F  3183  230F  3183   	fcall	_printf
  3782                           
  3783                           ;main.c: 394: }
  3784  0772  2FD0               	goto	l209
  3785  0773                     l2039:	
  3786                           
  3787                           ;main.c: 395: else
  3788                           ;main.c: 396: {
  3789                           ;main.c: 397: omega_mode = 0;
  3790  0773  0020               	movlb	0	; select bank0
  3791  0774  01BE               	clrf	_omega_mode
  3792                           
  3793                           ;main.c: 398: printf("Omega mode disabled.\n\r");
  3794  0775  305E               	movlw	low (STR_33| (0+32768))
  3795  0776  00A0               	movwf	printf@f
  3796  0777  308B               	movlw	high (STR_33| (0+32768))
  3797  0778  00A1               	movwf	printf@f+1
  3798  0779  3183  230F  3183   	fcall	_printf
  3799                           
  3800                           ;main.c: 399: }
  3801                           ;main.c: 400: break;
  3802  077C  2FD0               	goto	l209
  3803  077D                     l2043:	
  3804                           
  3805                           ;main.c: 401: }
  3806                           ;main.c: 403: userInput = ' ';
  3807  077D  3020               	movlw	32
  3808  077E  0020               	movlb	0	; select bank0
  3809  077F  00B2               	movwf	??_main
  3810  0780  0832               	movf	??_main,w
  3811  0781  00B9               	movwf	main@userInput
  3812  0782                     l1961:	
  3813                           ;main.c: 330: {
  3814                           ;main.c: 331: while( 1 )
  3815                           
  3816                           
  3817                           ;main.c: 332: {
  3818                           ;main.c: 333: display_health();
  3819  0782  3181  21D7  3183   	fcall	_display_health
  3820                           
  3821                           ;main.c: 334: userInput = determine_sword_was_swung();
  3822  0785  3182  221B  3183   	fcall	_determine_sword_was_swung
  3823  0788  0020               	movlb	0	; select bank0
  3824  0789  00B2               	movwf	??_main
  3825  078A  0832               	movf	??_main,w
  3826  078B  00B9               	movwf	main@userInput
  3827                           
  3828                           ;main.c: 335: if( ( userInput == 1 ) && ( ( health > 0) || determine_omega_mode_active()
      +                           ) )
  3829  078C  0339               	decf	main@userInput,w
  3830  078D  1D03               	btfss	3,2
  3831  078E  2F02               	goto	l1997
  3832  078F  0840               	movf	_health,w
  3833  0790  1D03               	btfss	3,2
  3834  0791  2F98               	goto	l1971
  3835  0792  3181  21D9  3183   	fcall	_determine_omega_mode_active
  3836  0795  3A00               	xorlw	0
  3837  0796  1903               	skipnz
  3838  0797  2F02               	goto	l1997
  3839  0798                     l1971:	
  3840                           
  3841                           ;main.c: 336: {
  3842                           ;main.c: 337: printf("Sword was swung\n\r");
  3843  0798  30B2               	movlw	low (STR_28| (0+32768))
  3844  0799  0020               	movlb	0	; select bank0
  3845  079A  00A0               	movwf	printf@f
  3846  079B  308B               	movlw	high (STR_28| (0+32768))
  3847  079C  00A1               	movwf	printf@f+1
  3848  079D  3183  230F  3183   	fcall	_printf
  3849                           
  3850                           ;main.c: 339: if(!determine_omega_mode_active())
  3851  07A0  3181  21D9  3183   	fcall	_determine_omega_mode_active
  3852  07A3  3A00               	xorlw	0
  3853  07A4  1D03               	skipz
  3854  07A5  2F00               	goto	l1993
  3855                           
  3856                           ;main.c: 340: {
  3857                           ;main.c: 341: determine_packets_to_send(&pkt_arr);
  3858  07A6  3035               	movlw	(low (main@pkt_arr| 0))& (0+255)
  3859  07A7  3182  2269  3183   	fcall	_determine_packets_to_send
  3860                           
  3861                           ;main.c: 343: for(i = 0; i < 3; ++i)
  3862  07AA  0020               	movlb	0	; select bank0
  3863  07AB  01B8               	clrf	main@i
  3864  07AC  3003               	movlw	3
  3865  07AD  0238               	subwf	main@i,w
  3866  07AE  1803               	btfsc	3,0
  3867  07AF  2FCC               	goto	l1991
  3868  07B0                     l1983:	
  3869                           
  3870                           ;main.c: 344: {
  3871                           ;main.c: 345: if(pkt_arr[i] > 0)
  3872  07B0  0838               	movf	main@i,w
  3873  07B1  3E35               	addlw	(low (main@pkt_arr| 0))& (0+255)
  3874  07B2  0086               	movwf	6
  3875  07B3  0187               	clrf	7
  3876  07B4  0801               	movf	1,w
  3877  07B5  1903               	btfsc	3,2
  3878  07B6  2FC3               	goto	l1987
  3879                           
  3880                           ;main.c: 346: {
  3881                           ;main.c: 347: output_ir(i, pkt_arr[i]);
  3882  07B7  0838               	movf	main@i,w
  3883  07B8  3E35               	addlw	(low (main@pkt_arr| 0))& (0+255)
  3884  07B9  0086               	movwf	6
  3885  07BA  0187               	clrf	7
  3886  07BB  0801               	movf	1,w
  3887  07BC  00B2               	movwf	??_main
  3888  07BD  0832               	movf	??_main,w
  3889  07BE  00AE               	movwf	output_ir@amount
  3890  07BF  0838               	movf	main@i,w
  3891  07C0  3182  22AD  3183   	fcall	_output_ir
  3892  07C3                     l1987:	
  3893  07C3  3001               	movlw	1
  3894  07C4  0020               	movlb	0	; select bank0
  3895  07C5  00B2               	movwf	??_main
  3896  07C6  0832               	movf	??_main,w
  3897  07C7  07B8               	addwf	main@i,f
  3898  07C8  3003               	movlw	3
  3899  07C9  0238               	subwf	main@i,w
  3900  07CA  1C03               	skipc
  3901  07CB  2FB0               	goto	l1983
  3902  07CC                     l1991:	
  3903                           
  3904                           ;main.c: 348: }
  3905                           ;main.c: 349: }
  3906                           ;main.c: 350: display_blade_lights(0);
  3907  07CC  3000               	movlw	0
  3908  07CD                     L8:	
  3909  07CD  3182  223B  3183   	fcall	_display_blade_lights
  3910  07D0                     l209:	
  3911                           
  3912                           ;main.c: 404: }
  3913                           ;main.c: 406: GIE = 0;
  3914  07D0  138B               	bcf	11,7	;volatile
  3915                           
  3916                           ;main.c: 407: while( ( stun_counter > 0 ) && !determine_omega_mode_active() )
  3917  07D1  2FE4               	goto	l2051
  3918  07D2                     l224:	
  3919                           
  3920                           ;main.c: 408: {
  3921                           ;main.c: 409: GIE = 1;
  3922  07D2  178B               	bsf	11,7	;volatile
  3923                           
  3924                           ;main.c: 410: _delay((unsigned long)((100)*(32000000/4000.0)));
  3925  07D3  3005               	movlw	5
  3926  07D4  0020               	movlb	0	; select bank0
  3927  07D5  00B4               	movwf	??_main+2
  3928  07D6  300F               	movlw	15
  3929  07D7  00B3               	movwf	??_main+1
  3930  07D8  30F4               	movlw	244
  3931  07D9  00B2               	movwf	??_main
  3932  07DA                     u2167:	
  3933  07DA  0BB2               	decfsz	??_main,f
  3934  07DB  2FDA               	goto	u2167
  3935  07DC  0BB3               	decfsz	??_main+1,f
  3936  07DD  2FDA               	goto	u2167
  3937  07DE  0BB4               	decfsz	??_main+2,f
  3938  07DF  2FDA               	goto	u2167
  3939                           
  3940                           ;main.c: 411: GIE = 0;
  3941  07E0  138B               	bcf	11,7	;volatile
  3942                           
  3943                           ;main.c: 412: --stun_counter;
  3944  07E1  3001               	movlw	1
  3945  07E2  0020               	movlb	0	; select bank0
  3946  07E3  02BF               	subwf	_stun_counter,f
  3947  07E4                     l2051:	
  3948  07E4  0020               	movlb	0	; select bank0
  3949  07E5  083F               	movf	_stun_counter,w
  3950  07E6  1903               	btfsc	3,2
  3951  07E7  2FEE               	goto	l227
  3952  07E8  3181  21D9  3183   	fcall	_determine_omega_mode_active
  3953  07EB  3A00               	xorlw	0
  3954  07EC  1903               	skipnz
  3955  07ED  2FD2               	goto	l224
  3956  07EE                     l227:	
  3957                           
  3958                           ;main.c: 413: }
  3959                           ;main.c: 414: GIE = 1;
  3960  07EE  178B               	bsf	11,7	;volatile
  3961  07EF                     l2055:	
  3962                           
  3963                           ;main.c: 415: }
  3964                           ;main.c: 430: printf("\n\r");
  3965  07EF  304B               	movlw	low ((STR_27+33)| (0+32768))
  3966  07F0  0020               	movlb	0	; select bank0
  3967  07F1  00A0               	movwf	printf@f
  3968  07F2  308A               	movlw	high ((STR_27+33)| (0+32768))
  3969  07F3  2C91               	goto	L5
  3970  07F4                     __end_of_main:	
  3971                           
  3972                           	psect	text1
  3973  01DC                     __ptext1:	
  3974 ;; *************** function _waitch *****************
  3975 ;; Defined at:
  3976 ;;		line 76 in file "../../source/uart.c"
  3977 ;; Parameters:    Size  Location     Type
  3978 ;;		None
  3979 ;; Auto vars:     Size  Location     Type
  3980 ;;		None
  3981 ;; Return value:  Size  Location     Type
  3982 ;;                  1    wreg      unsigned char 
  3983 ;; Registers used:
  3984 ;;		wreg
  3985 ;; Tracked objects:
  3986 ;;		On entry : 0/0
  3987 ;;		On exit  : 0/0
  3988 ;;		Unchanged: 0/0
  3989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3994 ;;Total ram usage:        0 bytes
  3995 ;; Hardware stack levels used:    1
  3996 ;; This function calls:
  3997 ;;		Nothing
  3998 ;; This function is called by:
  3999 ;;		_main
  4000 ;; This function uses a non-reentrant model
  4001 ;;
  4002                           
  4003                           
  4004                           ;psect for function _waitch
  4005  01DC                     _waitch:	
  4006  01DC                     l292:	
  4007                           ;uart.c: 79: {
  4008                           ;uart.c: 80: continue;
  4009                           
  4010                           ;uart.c: 78: while(!RCIF)
  4011                           
  4012                           ;incstack = 0
  4013                           ; Regs used in _waitch: [wreg]
  4014                           
  4015  01DC  0020               	movlb	0	; select bank0
  4016  01DD  1E91               	btfss	17,5	;volatile
  4017  01DE  29DC               	goto	l292
  4018                           
  4019                           ;uart.c: 81: }
  4020                           ;uart.c: 82: return RCREG;
  4021  01DF  0023               	movlb	3	; select bank3
  4022  01E0  0819               	movf	25,w	;volatile
  4023  01E1  0008               	return
  4024  01E2                     __end_of_waitch:	
  4025                           
  4026                           	psect	text2
  4027  0252                     __ptext2:	
  4028 ;; *************** function _play_sound *****************
  4029 ;; Defined at:
  4030 ;;		line 32 in file "../../source/function_stubs.c"
  4031 ;; Parameters:    Size  Location     Type
  4032 ;;  sound_select    1    wreg     unsigned char 
  4033 ;; Auto vars:     Size  Location     Type
  4034 ;;  sound_select    1   14[BANK0 ] unsigned char 
  4035 ;; Return value:  Size  Location     Type
  4036 ;;		None               void
  4037 ;; Registers used:
  4038 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4039 ;; Tracked objects:
  4040 ;;		On entry : 0/0
  4041 ;;		On exit  : 0/0
  4042 ;;		Unchanged: 0/0
  4043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4045 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4047 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4048 ;;Total ram usage:        1 bytes
  4049 ;; Hardware stack levels used:    1
  4050 ;; Hardware stack levels required when called:    2
  4051 ;; This function calls:
  4052 ;;		_printf
  4053 ;; This function is called by:
  4054 ;;		_main
  4055 ;; This function uses a non-reentrant model
  4056 ;;
  4057                           
  4058                           
  4059                           ;psect for function _play_sound
  4060  0252                     _play_sound:	
  4061                           
  4062                           ;incstack = 0
  4063                           ; Regs used in _play_sound: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4064                           ;play_sound@sound_selection stored from wreg
  4065  0252  0020               	movlb	0	; select bank0
  4066  0253  00AE               	movwf	play_sound@sound_selection
  4067                           
  4068                           ;function_stubs.c: 34: if(sound_selection == 0)
  4069  0254  082E               	movf	play_sound@sound_selection,w
  4070  0255  1D03               	btfss	3,2
  4071  0256  2A5E               	goto	l1565
  4072                           
  4073                           ;function_stubs.c: 35: {
  4074                           ;function_stubs.c: 36: printf("Played Beta blade swing sound.\n\r");
  4075  0257  3094               	movlw	low (STR_6| (0+32768))
  4076  0258  00A0               	movwf	printf@f
  4077  0259  308A               	movlw	high (STR_6| (0+32768))
  4078  025A  00A1               	movwf	printf@f+1
  4079  025B  3183  230F         	fcall	_printf
  4080                           
  4081                           ;function_stubs.c: 37: }
  4082  025D  0008               	return
  4083  025E                     l1565:	
  4084                           
  4085                           ;function_stubs.c: 38: else if(sound_selection == 1)
  4086  025E  0020               	movlb	0	; select bank0
  4087  025F  032E               	decf	play_sound@sound_selection,w
  4088  0260  1D03               	btfss	3,2
  4089  0261  0008               	return
  4090                           
  4091                           ;function_stubs.c: 39: {
  4092                           ;function_stubs.c: 40: printf("Played Omega blade swing sound.\n\r");
  4093  0262  3072               	movlw	low (STR_7| (0+32768))
  4094  0263  00A0               	movwf	printf@f
  4095  0264  308A               	movlw	high (STR_7| (0+32768))
  4096  0265  00A1               	movwf	printf@f+1
  4097  0266  3183  230F         	fcall	_printf
  4098  0268  0008               	return
  4099  0269                     __end_of_play_sound:	
  4100                           
  4101                           	psect	text3
  4102  02AD                     __ptext3:	
  4103 ;; *************** function _output_ir *****************
  4104 ;; Defined at:
  4105 ;;		line 15 in file "../../source/function_stubs.c"
  4106 ;; Parameters:    Size  Location     Type
  4107 ;;  pkt_type        1    wreg     unsigned char 
  4108 ;;  amount          1   14[BANK0 ] unsigned char 
  4109 ;; Auto vars:     Size  Location     Type
  4110 ;;  pkt_type        1   17[BANK0 ] unsigned char 
  4111 ;; Return value:  Size  Location     Type
  4112 ;;		None               void
  4113 ;; Registers used:
  4114 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4115 ;; Tracked objects:
  4116 ;;		On entry : 0/0
  4117 ;;		On exit  : 0/0
  4118 ;;		Unchanged: 0/0
  4119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4120 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4121 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4122 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4123 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4124 ;;Total ram usage:        4 bytes
  4125 ;; Hardware stack levels used:    1
  4126 ;; Hardware stack levels required when called:    2
  4127 ;; This function calls:
  4128 ;;		_printf
  4129 ;; This function is called by:
  4130 ;;		_main
  4131 ;; This function uses a non-reentrant model
  4132 ;;
  4133                           
  4134                           
  4135                           ;psect for function _output_ir
  4136  02AD                     _output_ir:	
  4137                           
  4138                           ;incstack = 0
  4139                           ; Regs used in _output_ir: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4140                           ;output_ir@pkt_type stored from wreg
  4141  02AD  0020               	movlb	0	; select bank0
  4142  02AE  00B1               	movwf	output_ir@pkt_type
  4143                           
  4144                           ;function_stubs.c: 17: printf("Sent %d ", amount);
  4145  02AF  30D8               	movlw	low (STR_2| (0+32768))
  4146  02B0  00A0               	movwf	printf@f
  4147  02B1  308B               	movlw	high (STR_2| (0+32768))
  4148  02B2  00A1               	movwf	printf@f+1
  4149  02B3  082E               	movf	output_ir@amount,w
  4150  02B4  00AF               	movwf	??_output_ir
  4151  02B5  01B0               	clrf	??_output_ir+1
  4152  02B6  082F               	movf	??_output_ir,w
  4153  02B7  00A2               	movwf	?_printf+2
  4154  02B8  0830               	movf	??_output_ir+1,w
  4155  02B9  00A3               	movwf	?_printf+3
  4156  02BA  3183  230F  3182   	fcall	_printf
  4157                           
  4158                           ;function_stubs.c: 18: if(pkt_type == 0)
  4159  02BD  0020               	movlb	0	; select bank0
  4160  02BE  0831               	movf	output_ir@pkt_type,w
  4161  02BF  1D03               	btfss	3,2
  4162  02C0  2AC8               	goto	l1555
  4163                           
  4164                           ;function_stubs.c: 19: {
  4165                           ;function_stubs.c: 20: printf("damage.\n\r");
  4166  02C1  30C4               	movlw	low (STR_3| (0+32768))
  4167  02C2  00A0               	movwf	printf@f
  4168  02C3  308B               	movlw	high (STR_3| (0+32768))
  4169  02C4  00A1               	movwf	printf@f+1
  4170  02C5  3183  230F         	fcall	_printf
  4171                           
  4172                           ;function_stubs.c: 21: }
  4173  02C7  0008               	return
  4174  02C8                     l1555:	
  4175                           
  4176                           ;function_stubs.c: 22: else if(pkt_type == 1)
  4177  02C8  0020               	movlb	0	; select bank0
  4178  02C9  0331               	decf	output_ir@pkt_type,w
  4179  02CA  1D03               	btfss	3,2
  4180  02CB  2AD3               	goto	l1559
  4181                           
  4182                           ;function_stubs.c: 23: {
  4183                           ;function_stubs.c: 24: printf("health.\n\r");
  4184  02CC  30CE               	movlw	low (STR_4| (0+32768))
  4185  02CD  00A0               	movwf	printf@f
  4186  02CE  308B               	movlw	high (STR_4| (0+32768))
  4187  02CF  00A1               	movwf	printf@f+1
  4188  02D0  3183  230F         	fcall	_printf
  4189                           
  4190                           ;function_stubs.c: 25: }
  4191  02D2  0008               	return
  4192  02D3                     l1559:	
  4193                           
  4194                           ;function_stubs.c: 26: else
  4195                           ;function_stubs.c: 27: {
  4196                           ;function_stubs.c: 28: printf("stun.\n\r");
  4197  02D3  30E1               	movlw	low (STR_5| (0+32768))
  4198  02D4  0020               	movlb	0	; select bank0
  4199  02D5  00A0               	movwf	printf@f
  4200  02D6  308B               	movlw	high (STR_5| (0+32768))
  4201  02D7  00A1               	movwf	printf@f+1
  4202  02D8  3183  230F         	fcall	_printf
  4203  02DA  0008               	return
  4204  02DB                     __end_of_output_ir:	
  4205                           
  4206                           	psect	text4
  4207  0229                     __ptext4:	
  4208 ;; *************** function _init_uart *****************
  4209 ;; Defined at:
  4210 ;;		line 11 in file "../../source/uart.c"
  4211 ;; Parameters:    Size  Location     Type
  4212 ;;		None
  4213 ;; Auto vars:     Size  Location     Type
  4214 ;;		None
  4215 ;; Return value:  Size  Location     Type
  4216 ;;		None               void
  4217 ;; Registers used:
  4218 ;;		wreg, status,2, status,0
  4219 ;; Tracked objects:
  4220 ;;		On entry : 0/0
  4221 ;;		On exit  : 0/0
  4222 ;;		Unchanged: 0/0
  4223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4226 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4227 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4228 ;;Total ram usage:        1 bytes
  4229 ;; Hardware stack levels used:    1
  4230 ;; This function calls:
  4231 ;;		Nothing
  4232 ;; This function is called by:
  4233 ;;		_main
  4234 ;; This function uses a non-reentrant model
  4235 ;;
  4236                           
  4237                           
  4238                           ;psect for function _init_uart
  4239  0229                     _init_uart:	
  4240                           
  4241                           ;uart.c: 14: TRISC &= 10111111;
  4242                           
  4243                           ;incstack = 0
  4244                           ; Regs used in _init_uart: [wreg+status,2+status,0]
  4245  0229  3087               	movlw	135
  4246  022A  00F0               	movwf	??_init_uart
  4247  022B  0870               	movf	??_init_uart,w
  4248  022C  0021               	movlb	1	; select bank1
  4249  022D  058E               	andwf	14,f	;volatile
  4250                           
  4251                           ;uart.c: 17: TRISC |= 10000000;
  4252  022E  178E               	bsf	14,7	;volatile
  4253                           
  4254                           ;uart.c: 20: SPBRG = 51;
  4255  022F  3033               	movlw	51
  4256  0230  0023               	movlb	3	; select bank3
  4257  0231  009B               	movwf	27	;volatile
  4258                           
  4259                           ;uart.c: 21: BRGH = 0;
  4260  0232  111E               	bcf	30,2	;volatile
  4261                           
  4262                           ;uart.c: 22: BRG16 = 0;
  4263  0233  119F               	bcf	31,3	;volatile
  4264                           
  4265                           ;uart.c: 27: SYNC = 0;
  4266  0234  121E               	bcf	30,4	;volatile
  4267                           
  4268                           ;uart.c: 28: SPEN = 1;
  4269  0235  179D               	bsf	29,7	;volatile
  4270                           
  4271                           ;uart.c: 29: TXEN = 1;
  4272  0236  169E               	bsf	30,5	;volatile
  4273                           
  4274                           ;uart.c: 30: CREN = 1;
  4275  0237  161D               	bsf	29,4	;volatile
  4276                           
  4277                           ;uart.c: 31: RCIE = 1;
  4278  0238  0021               	movlb	1	; select bank1
  4279  0239  1691               	bsf	17,5	;volatile
  4280  023A  0008               	return
  4281  023B                     __end_of_init_uart:	
  4282                           
  4283                           	psect	text5
  4284  0210                     __ptext5:	
  4285 ;; *************** function _init_pic *****************
  4286 ;; Defined at:
  4287 ;;		line 461 in file "../../source/main.c"
  4288 ;; Parameters:    Size  Location     Type
  4289 ;;		None
  4290 ;; Auto vars:     Size  Location     Type
  4291 ;;		None
  4292 ;; Return value:  Size  Location     Type
  4293 ;;		None               void
  4294 ;; Registers used:
  4295 ;;		wreg, status,2, status,0
  4296 ;; Tracked objects:
  4297 ;;		On entry : 0/0
  4298 ;;		On exit  : 0/0
  4299 ;;		Unchanged: 0/0
  4300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4303 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4304 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4305 ;;Total ram usage:        1 bytes
  4306 ;; Hardware stack levels used:    1
  4307 ;; This function calls:
  4308 ;;		Nothing
  4309 ;; This function is called by:
  4310 ;;		_main
  4311 ;; This function uses a non-reentrant model
  4312 ;;
  4313                           
  4314                           
  4315                           ;psect for function _init_pic
  4316  0210                     _init_pic:	
  4317                           
  4318                           ;main.c: 464: OSCCON |= 0b11111000;
  4319                           
  4320                           ;incstack = 0
  4321                           ; Regs used in _init_pic: [wreg+status,2+status,0]
  4322  0210  30F8               	movlw	248
  4323  0211  00F0               	movwf	??_init_pic
  4324  0212  0870               	movf	??_init_pic,w
  4325  0213  0021               	movlb	1	; select bank1
  4326  0214  0499               	iorwf	25,f	;volatile
  4327                           
  4328                           ;main.c: 467: TRISB &= 0b11110111;
  4329  0215  30F7               	movlw	247
  4330  0216  00F0               	movwf	??_init_pic
  4331  0217  0870               	movf	??_init_pic,w
  4332  0218  058D               	andwf	13,f	;volatile
  4333                           
  4334                           ;main.c: 470: GIE = 1;
  4335  0219  178B               	bsf	11,7	;volatile
  4336  021A  0008               	return
  4337  021B                     __end_of_init_pic:	
  4338                           
  4339                           	psect	text6
  4340  0208                     __ptext6:	
  4341 ;; *************** function _init_leds *****************
  4342 ;; Defined at:
  4343 ;;		line 76 in file "../../source/function_stubs.c"
  4344 ;; Parameters:    Size  Location     Type
  4345 ;;		None
  4346 ;; Auto vars:     Size  Location     Type
  4347 ;;		None
  4348 ;; Return value:  Size  Location     Type
  4349 ;;		None               void
  4350 ;; Registers used:
  4351 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4352 ;; Tracked objects:
  4353 ;;		On entry : 0/0
  4354 ;;		On exit  : 0/0
  4355 ;;		Unchanged: 0/0
  4356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4361 ;;Total ram usage:        0 bytes
  4362 ;; Hardware stack levels used:    1
  4363 ;; Hardware stack levels required when called:    2
  4364 ;; This function calls:
  4365 ;;		_printf
  4366 ;; This function is called by:
  4367 ;;		_main
  4368 ;; This function uses a non-reentrant model
  4369 ;;
  4370                           
  4371                           
  4372                           ;psect for function _init_leds
  4373  0208                     _init_leds:	
  4374                           
  4375                           ;function_stubs.c: 78: printf("Initialized LEDs.\n\r");
  4376                           
  4377                           ;incstack = 0
  4378                           ; Regs used in _init_leds: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4379  0208  308B               	movlw	low (STR_9| (0+32768))
  4380  0209  0020               	movlb	0	; select bank0
  4381  020A  00A0               	movwf	printf@f
  4382  020B  308B               	movlw	high (STR_9| (0+32768))
  4383  020C  00A1               	movwf	printf@f+1
  4384  020D  3183  230F         	fcall	_printf
  4385  020F  0008               	return
  4386  0210                     __end_of_init_leds:	
  4387                           
  4388                           	psect	text7
  4389  0200                     __ptext7:	
  4390 ;; *************** function _init_isr *****************
  4391 ;; Defined at:
  4392 ;;		line 93 in file "../../source/function_stubs.c"
  4393 ;; Parameters:    Size  Location     Type
  4394 ;;		None
  4395 ;; Auto vars:     Size  Location     Type
  4396 ;;		None
  4397 ;; Return value:  Size  Location     Type
  4398 ;;		None               void
  4399 ;; Registers used:
  4400 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4401 ;; Tracked objects:
  4402 ;;		On entry : 0/0
  4403 ;;		On exit  : 0/0
  4404 ;;		Unchanged: 0/0
  4405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4410 ;;Total ram usage:        0 bytes
  4411 ;; Hardware stack levels used:    1
  4412 ;; Hardware stack levels required when called:    2
  4413 ;; This function calls:
  4414 ;;		_printf
  4415 ;; This function is called by:
  4416 ;;		_main
  4417 ;; This function uses a non-reentrant model
  4418 ;;
  4419                           
  4420                           
  4421                           ;psect for function _init_isr
  4422  0200                     _init_isr:	
  4423                           
  4424                           ;function_stubs.c: 95: printf("Initialized ISR.\n\r");
  4425                           
  4426                           ;incstack = 0
  4427                           ; Regs used in _init_isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4428  0200  309F               	movlw	low (STR_12| (0+32768))
  4429  0201  0020               	movlb	0	; select bank0
  4430  0202  00A0               	movwf	printf@f
  4431  0203  308B               	movlw	high (STR_12| (0+32768))
  4432  0204  00A1               	movwf	printf@f+1
  4433  0205  3183  230F         	fcall	_printf
  4434  0207  0008               	return
  4435  0208                     __end_of_init_isr:	
  4436                           
  4437                           	psect	text8
  4438  01F8                     __ptext8:	
  4439 ;; *************** function _init_ir *****************
  4440 ;; Defined at:
  4441 ;;		line 10 in file "../../source/function_stubs.c"
  4442 ;; Parameters:    Size  Location     Type
  4443 ;;		None
  4444 ;; Auto vars:     Size  Location     Type
  4445 ;;		None
  4446 ;; Return value:  Size  Location     Type
  4447 ;;		None               void
  4448 ;; Registers used:
  4449 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4450 ;; Tracked objects:
  4451 ;;		On entry : 0/0
  4452 ;;		On exit  : 0/0
  4453 ;;		Unchanged: 0/0
  4454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4459 ;;Total ram usage:        0 bytes
  4460 ;; Hardware stack levels used:    1
  4461 ;; Hardware stack levels required when called:    2
  4462 ;; This function calls:
  4463 ;;		_printf
  4464 ;; This function is called by:
  4465 ;;		_main
  4466 ;; This function uses a non-reentrant model
  4467 ;;
  4468                           
  4469                           
  4470                           ;psect for function _init_ir
  4471  01F8                     _init_ir:	
  4472                           
  4473                           ;function_stubs.c: 12: printf("Initialized IR send/receive code.\n\r");
  4474                           
  4475                           ;incstack = 0
  4476                           ; Regs used in _init_ir: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4477  01F8  304E               	movlw	low (STR_1| (0+32768))
  4478  01F9  0020               	movlb	0	; select bank0
  4479  01FA  00A0               	movwf	printf@f
  4480  01FB  308A               	movlw	high (STR_1| (0+32768))
  4481  01FC  00A1               	movwf	printf@f+1
  4482  01FD  3183  230F         	fcall	_printf
  4483  01FF  0008               	return
  4484  0200                     __end_of_init_ir:	
  4485                           
  4486                           	psect	text9
  4487  01F0                     __ptext9:	
  4488 ;; *************** function _init_accel *****************
  4489 ;; Defined at:
  4490 ;;		line 44 in file "../../source/function_stubs.c"
  4491 ;; Parameters:    Size  Location     Type
  4492 ;;		None
  4493 ;; Auto vars:     Size  Location     Type
  4494 ;;		None
  4495 ;; Return value:  Size  Location     Type
  4496 ;;		None               void
  4497 ;; Registers used:
  4498 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4499 ;; Tracked objects:
  4500 ;;		On entry : 0/0
  4501 ;;		On exit  : 0/0
  4502 ;;		Unchanged: 0/0
  4503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4508 ;;Total ram usage:        0 bytes
  4509 ;; Hardware stack levels used:    1
  4510 ;; Hardware stack levels required when called:    2
  4511 ;; This function calls:
  4512 ;;		_printf
  4513 ;; This function is called by:
  4514 ;;		_main
  4515 ;; This function uses a non-reentrant model
  4516 ;;
  4517                           
  4518                           
  4519                           ;psect for function _init_accel
  4520  01F0                     _init_accel:	
  4521                           
  4522                           ;function_stubs.c: 46: printf("Initialized accelerometer.\n\r");
  4523                           
  4524                           ;incstack = 0
  4525                           ; Regs used in _init_accel: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4526  01F0  30F2               	movlw	low (STR_8| (0+32768))
  4527  01F1  0020               	movlb	0	; select bank0
  4528  01F2  00A0               	movwf	printf@f
  4529  01F3  308A               	movlw	high (STR_8| (0+32768))
  4530  01F4  00A1               	movwf	printf@f+1
  4531  01F5  3183  230F         	fcall	_printf
  4532  01F7  0008               	return
  4533  01F8                     __end_of_init_accel:	
  4534                           
  4535                           	psect	text10
  4536  01D7                     __ptext10:	
  4537 ;; *************** function _display_health *****************
  4538 ;; Defined at:
  4539 ;;		line 74 in file "../../source/function_stubs.c"
  4540 ;; Parameters:    Size  Location     Type
  4541 ;;		None
  4542 ;; Auto vars:     Size  Location     Type
  4543 ;;		None
  4544 ;; Return value:  Size  Location     Type
  4545 ;;		None               void
  4546 ;; Registers used:
  4547 ;;		None
  4548 ;; Tracked objects:
  4549 ;;		On entry : 0/0
  4550 ;;		On exit  : 0/0
  4551 ;;		Unchanged: 0/0
  4552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4557 ;;Total ram usage:        0 bytes
  4558 ;; Hardware stack levels used:    1
  4559 ;; This function calls:
  4560 ;;		Nothing
  4561 ;; This function is called by:
  4562 ;;		_main
  4563 ;; This function uses a non-reentrant model
  4564 ;;
  4565                           
  4566                           
  4567                           ;psect for function _display_health
  4568  01D7                     _display_health:	
  4569                           
  4570                           ;incstack = 0
  4571                           ; Regs used in _display_health: []
  4572  01D7  0008               	return
  4573  01D8                     __end_of_display_health:	
  4574                           
  4575                           	psect	text11
  4576  023B                     __ptext11:	
  4577 ;; *************** function _display_blade_lights *****************
  4578 ;; Defined at:
  4579 ;;		line 81 in file "../../source/function_stubs.c"
  4580 ;; Parameters:    Size  Location     Type
  4581 ;;  mode            1    wreg     unsigned char 
  4582 ;; Auto vars:     Size  Location     Type
  4583 ;;  mode            1   14[BANK0 ] unsigned char 
  4584 ;; Return value:  Size  Location     Type
  4585 ;;		None               void
  4586 ;; Registers used:
  4587 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4588 ;; Tracked objects:
  4589 ;;		On entry : 0/0
  4590 ;;		On exit  : 0/0
  4591 ;;		Unchanged: 0/0
  4592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4594 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4596 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4597 ;;Total ram usage:        1 bytes
  4598 ;; Hardware stack levels used:    1
  4599 ;; Hardware stack levels required when called:    2
  4600 ;; This function calls:
  4601 ;;		_printf
  4602 ;; This function is called by:
  4603 ;;		_main
  4604 ;; This function uses a non-reentrant model
  4605 ;;
  4606                           
  4607                           
  4608                           ;psect for function _display_blade_lights
  4609  023B                     _display_blade_lights:	
  4610                           
  4611                           ;incstack = 0
  4612                           ; Regs used in _display_blade_lights: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4613                           ;display_blade_lights@mode stored from wreg
  4614  023B  0020               	movlb	0	; select bank0
  4615  023C  00AE               	movwf	display_blade_lights@mode
  4616                           
  4617                           ;function_stubs.c: 83: if(mode == 0)
  4618  023D  082E               	movf	display_blade_lights@mode,w
  4619  023E  1D03               	btfss	3,2
  4620  023F  2A47               	goto	l1601
  4621                           
  4622                           ;function_stubs.c: 84: {
  4623                           ;function_stubs.c: 85: printf("Displayed individual sword swing light show.\n\r");
  4624  0240  3031               	movlw	low (STR_10| (0+32768))
  4625  0241  00A0               	movwf	printf@f
  4626  0242  3089               	movlw	high (STR_10| (0+32768))
  4627  0243  00A1               	movwf	printf@f+1
  4628  0244  3183  230F         	fcall	_printf
  4629                           
  4630                           ;function_stubs.c: 86: }
  4631  0246  0008               	return
  4632  0247                     l1601:	
  4633                           
  4634                           ;function_stubs.c: 87: else if(mode == 1)
  4635  0247  0020               	movlb	0	; select bank0
  4636  0248  032E               	decf	display_blade_lights@mode,w
  4637  0249  1D03               	btfss	3,2
  4638  024A  0008               	return
  4639                           
  4640                           ;function_stubs.c: 88: {
  4641                           ;function_stubs.c: 89: printf("Displayed Omega blade swing light show.\n\r");
  4642  024B  30B5               	movlw	low (STR_11| (0+32768))
  4643  024C  00A0               	movwf	printf@f
  4644  024D  3089               	movlw	high (STR_11| (0+32768))
  4645  024E  00A1               	movwf	printf@f+1
  4646  024F  3183  230F         	fcall	_printf
  4647  0251  0008               	return
  4648  0252                     __end_of_display_blade_lights:	
  4649                           
  4650                           	psect	text12
  4651  030F                     __ptext12:	
  4652 ;; *************** function _printf *****************
  4653 ;; Defined at:
  4654 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  4655 ;; Parameters:    Size  Location     Type
  4656 ;;  f               2    0[BANK0 ] PTR const unsigned char 
  4657 ;;		 -> STR_53(26), STR_52(49), STR_51(31), STR_50(25), 
  4658 ;;		 -> STR_49(3), STR_48(23), STR_47(22), STR_46(30), 
  4659 ;;		 -> STR_45(42), STR_44(43), STR_43(18), STR_42(23), 
  4660 ;;		 -> STR_41(22), STR_40(30), STR_39(42), STR_38(43), 
  4661 ;;		 -> STR_37(18), STR_36(23), STR_35(22), STR_34(18), 
  4662 ;;		 -> STR_33(23), STR_32(22), STR_31(30), STR_30(42), 
  4663 ;;		 -> STR_29(43), STR_28(18), STR_27(36), STR_26(66), 
  4664 ;;		 -> STR_25(53), STR_24(28), STR_23(4), STR_22(4), 
  4665 ;;		 -> STR_21(38), STR_20(28), STR_19(4), STR_18(4), 
  4666 ;;		 -> STR_17(4), STR_16(4), STR_15(37), STR_14(65), 
  4667 ;;		 -> STR_13(62), STR_12(19), STR_11(42), STR_10(47), 
  4668 ;;		 -> STR_9(20), STR_8(29), STR_7(34), STR_6(33), 
  4669 ;;		 -> STR_5(8), STR_4(10), STR_3(10), STR_2(9), 
  4670 ;;		 -> STR_1(36), 
  4671 ;; Auto vars:     Size  Location     Type
  4672 ;;  tmpval          4    0        struct .
  4673 ;;  val             2   11[BANK0 ] unsigned int 
  4674 ;;  cp              2    0        PTR const unsigned char 
  4675 ;;  len             2    0        unsigned int 
  4676 ;;  c               1   13[BANK0 ] char 
  4677 ;;  prec            1   10[BANK0 ] char 
  4678 ;;  flag            1    9[BANK0 ] unsigned char 
  4679 ;;  ap              1    8[BANK0 ] PTR void [1]
  4680 ;;		 -> ?_printf(2), 
  4681 ;; Return value:  Size  Location     Type
  4682 ;;                  2    0[BANK0 ] int 
  4683 ;; Registers used:
  4684 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4685 ;; Tracked objects:
  4686 ;;		On entry : 0/0
  4687 ;;		On exit  : 0/0
  4688 ;;		Unchanged: 0/0
  4689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4690 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4691 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4692 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4693 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4694 ;;Total ram usage:       14 bytes
  4695 ;; Hardware stack levels used:    1
  4696 ;; Hardware stack levels required when called:    1
  4697 ;; This function calls:
  4698 ;;		___lwdiv
  4699 ;;		___lwmod
  4700 ;;		_putch
  4701 ;; This function is called by:
  4702 ;;		_init_ir
  4703 ;;		_output_ir
  4704 ;;		_play_sound
  4705 ;;		_init_accel
  4706 ;;		_init_leds
  4707 ;;		_display_blade_lights
  4708 ;;		_init_isr
  4709 ;;		_main
  4710 ;;		_uart_test
  4711 ;; This function uses a non-reentrant model
  4712 ;;
  4713                           
  4714                           
  4715                           ;psect for function _printf
  4716  030F                     _printf:	
  4717                           
  4718                           ;doprnt.c: 466: va_list ap;
  4719                           ;doprnt.c: 499: signed char c;
  4720                           ;doprnt.c: 506: signed char prec;
  4721                           ;doprnt.c: 508: unsigned char flag;
  4722                           ;doprnt.c: 523: union {
  4723                           ;doprnt.c: 524: unsigned long vd;
  4724                           ;doprnt.c: 525: double integ;
  4725                           ;doprnt.c: 526: } tmpval;
  4726                           ;doprnt.c: 528: unsigned int val;
  4727                           ;doprnt.c: 529: unsigned len;
  4728                           ;doprnt.c: 530: const char * cp;
  4729                           ;doprnt.c: 533: *ap = __va_start();
  4730                           
  4731                           ;incstack = 0
  4732                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4733  030F  3022               	movlw	(low ((?_printf| 0+2)))& (0+255)
  4734  0310  0020               	movlb	0	; select bank0
  4735  0311  00A4               	movwf	??_printf
  4736  0312  0824               	movf	??_printf,w
  4737  0313  00A8               	movwf	printf@ap
  4738  0314                     l1539:	
  4739                           ;doprnt.c: 536: while(c = *f++) {
  4740                           
  4741  0314  0020               	movlb	0	; select bank0
  4742  0315  0821               	movf	printf@f+1,w
  4743  0316  00A5               	movwf	??_printf+1
  4744  0317  0820               	movf	printf@f,w
  4745  0318  00A4               	movwf	??_printf
  4746  0319  0AA0               	incf	printf@f,f
  4747  031A  1903               	skipnz
  4748  031B  0AA1               	incf	printf@f+1,f
  4749  031C  0824               	movf	??_printf,w
  4750  031D  0084               	movwf	4
  4751  031E  0825               	movf	??_printf+1,w
  4752  031F  0085               	movwf	5
  4753  0320  0800               	movf	0,w	;code access
  4754  0321  00A6               	movwf	??_printf+2
  4755  0322  0826               	movf	??_printf+2,w
  4756  0323  00AD               	movwf	printf@c
  4757  0324  082D               	movf	printf@c,w
  4758  0325  1903               	btfsc	3,2
  4759  0326  0008               	return
  4760                           
  4761                           ;doprnt.c: 538: if(c != '%')
  4762  0327  3025               	movlw	37
  4763  0328  062D               	xorwf	printf@c,w
  4764  0329  1903               	btfsc	3,2
  4765  032A  2B30               	goto	l1499
  4766                           
  4767                           ;doprnt.c: 540: {
  4768                           ;doprnt.c: 541: (putch(c) );
  4769  032B  082D               	movf	printf@c,w
  4770  032C  3181  21E9  3183   	fcall	_putch
  4771                           
  4772                           ;doprnt.c: 542: continue;
  4773  032F  2B14               	goto	l1539
  4774  0330                     l1499:	
  4775                           
  4776                           ;doprnt.c: 543: }
  4777                           ;doprnt.c: 548: flag = 0;
  4778  0330  0020               	movlb	0	; select bank0
  4779  0331  01A9               	clrf	printf@flag
  4780                           
  4781                           ;doprnt.c: 822: }
  4782                           
  4783                           ;doprnt.c: 813: continue;
  4784                           
  4785                           ;doprnt.c: 802: default:
  4786                           
  4787                           ;doprnt.c: 698: case 'i':
  4788                           ;doprnt.c: 699: break;
  4789                           
  4790                           ;doprnt.c: 697: case 'd':
  4791                           
  4792                           ;doprnt.c: 638: goto alldone;
  4793                           
  4794                           ;doprnt.c: 637: case 0:
  4795                           
  4796                           ;doprnt.c: 635: switch(c = *f++) {
  4797  0332  0821               	movf	printf@f+1,w
  4798  0333  00A5               	movwf	??_printf+1
  4799  0334  0820               	movf	printf@f,w
  4800  0335  00A4               	movwf	??_printf
  4801  0336  0AA0               	incf	printf@f,f
  4802  0337  1903               	skipnz
  4803  0338  0AA1               	incf	printf@f+1,f
  4804  0339  0824               	movf	??_printf,w
  4805  033A  0084               	movwf	4
  4806  033B  0825               	movf	??_printf+1,w
  4807  033C  0085               	movwf	5
  4808  033D  0800               	movf	0,w	;code access
  4809  033E  00AD               	movwf	printf@c
  4810                           
  4811                           ; Switch size 1, requested type "space"
  4812                           ; Number of cases is 3, Range of values is 0 to 105
  4813                           ; switch strategies available:
  4814                           ; Name         Instructions Cycles
  4815                           ; simple_byte           10     6 (average)
  4816                           ; direct_byte          218     6 (fixed)
  4817                           ; jumptable            260     6 (fixed)
  4818                           ;	Chosen strategy is simple_byte
  4819  033F  3A00               	xorlw	0	; case 0
  4820  0340  1903               	skipnz
  4821  0341  2BC5               	goto	l333
  4822  0342  3A64               	xorlw	100	; case 100
  4823  0343  1903               	skipnz
  4824  0344  2B49               	goto	l1505
  4825  0345  3A0D               	xorlw	13	; case 105
  4826  0346  1903               	skipnz
  4827  0347  2B49               	goto	l1505
  4828  0348  2B14               	goto	l1539
  4829  0349                     l1505:	
  4830                           
  4831                           ;doprnt.c: 1253: {
  4832                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  4833  0349  0828               	movf	printf@ap,w
  4834  034A  0086               	movwf	6
  4835  034B  0187               	clrf	7
  4836  034C  3F40               	moviw [0]fsr1
  4837  034D  00AB               	movwf	printf@val
  4838  034E  3F41               	moviw [1]fsr1
  4839  034F  00AC               	movwf	printf@val+1
  4840  0350  3002               	movlw	2
  4841  0351  00A4               	movwf	??_printf
  4842  0352  0824               	movf	??_printf,w
  4843  0353  07A8               	addwf	printf@ap,f
  4844                           
  4845                           ;doprnt.c: 1261: if((int)val < 0) {
  4846  0354  1FAC               	btfss	printf@val+1,7
  4847  0355  2B5F               	goto	l1515
  4848                           
  4849                           ;doprnt.c: 1262: flag |= 0x03;
  4850  0356  3003               	movlw	3
  4851  0357  00A4               	movwf	??_printf
  4852  0358  0824               	movf	??_printf,w
  4853  0359  04A9               	iorwf	printf@flag,f
  4854                           
  4855                           ;doprnt.c: 1263: val = -val;
  4856  035A  09AB               	comf	printf@val,f
  4857  035B  09AC               	comf	printf@val+1,f
  4858  035C  0AAB               	incf	printf@val,f
  4859  035D  1903               	skipnz
  4860  035E  0AAC               	incf	printf@val+1,f
  4861  035F                     l1515:	
  4862                           
  4863                           ;doprnt.c: 1264: }
  4864                           ;doprnt.c: 1266: }
  4865                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4866  035F  01AD               	clrf	printf@c
  4867  0360  0AAD               	incf	printf@c,f
  4868  0361  3005               	movlw	5
  4869  0362  062D               	xorwf	printf@c,w
  4870  0363  1903               	btfsc	3,2
  4871  0364  2B84               	goto	l1527
  4872  0365                     l1521:	
  4873                           
  4874                           ;doprnt.c: 1306: if(val < dpowers[c])
  4875  0365  082D               	movf	printf@c,w
  4876  0366  00A4               	movwf	??_printf
  4877  0367  01A5               	clrf	??_printf+1
  4878  0368  35A4               	lslf	??_printf,f
  4879  0369  0DA5               	rlf	??_printf+1,f
  4880  036A  3000               	movlw	low (_dpowers| (0+32768))
  4881  036B  0724               	addwf	??_printf,w
  4882  036C  0084               	movwf	4
  4883  036D  3088               	movlw	high (_dpowers| (0+32768))
  4884  036E  3D25               	addwfc	??_printf+1,w
  4885  036F  0085               	movwf	5
  4886  0370  3F00               	moviw [0]fsr0
  4887  0371  00A6               	movwf	??_printf+2
  4888  0372  3F01               	moviw [1]fsr0
  4889  0373  00A7               	movwf	??_printf+3
  4890  0374  0827               	movf	??_printf+3,w
  4891  0375  022C               	subwf	printf@val+1,w
  4892  0376  1D03               	skipz
  4893  0377  2B7A               	goto	u1245
  4894  0378  0826               	movf	??_printf+2,w
  4895  0379  022B               	subwf	printf@val,w
  4896  037A                     u1245:	
  4897  037A  1C03               	btfss	3,0
  4898  037B  2B84               	goto	l1527
  4899                           
  4900                           ;doprnt.c: 1307: break;
  4901  037C  3001               	movlw	1
  4902  037D  00A4               	movwf	??_printf
  4903  037E  0824               	movf	??_printf,w
  4904  037F  07AD               	addwf	printf@c,f
  4905  0380  3005               	movlw	5
  4906  0381  062D               	xorwf	printf@c,w
  4907  0382  1D03               	btfss	3,2
  4908  0383  2B65               	goto	l1521
  4909  0384                     l1527:	
  4910                           
  4911                           ;doprnt.c: 1422: {
  4912                           ;doprnt.c: 1438: if(flag & 0x03)
  4913  0384  0829               	movf	printf@flag,w
  4914  0385  3903               	andlw	3
  4915  0386  1903               	btfsc	3,2
  4916  0387  2B8C               	goto	l1531
  4917                           
  4918                           ;doprnt.c: 1439: (putch('-') );
  4919  0388  302D               	movlw	45
  4920  0389  3181  21E9  3183   	fcall	_putch
  4921  038C                     l1531:	
  4922                           
  4923                           ;doprnt.c: 1469: }
  4924                           ;doprnt.c: 1472: prec = c;
  4925  038C  0020               	movlb	0	; select bank0
  4926  038D  082D               	movf	printf@c,w
  4927  038E  00A4               	movwf	??_printf
  4928  038F  0824               	movf	??_printf,w
  4929  0390  00AA               	movwf	printf@prec
  4930  0391                     l1537:	
  4931                           ;doprnt.c: 1474: while(prec--) {
  4932                           
  4933  0391  30FF               	movlw	255
  4934  0392  0020               	movlb	0	; select bank0
  4935  0393  00A4               	movwf	??_printf
  4936  0394  0824               	movf	??_printf,w
  4937  0395  07AA               	addwf	printf@prec,f
  4938  0396  0A2A               	incf	printf@prec,w
  4939  0397  1903               	btfsc	3,2
  4940  0398  2B14               	goto	l1539
  4941                           
  4942                           ;doprnt.c: 1478: {
  4943                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  4944  0399  300A               	movlw	10
  4945  039A  00F8               	movwf	___lwmod@divisor
  4946  039B  3000               	movlw	0
  4947  039C  00F9               	movwf	___lwmod@divisor+1
  4948  039D  082A               	movf	printf@prec,w
  4949  039E  00A4               	movwf	??_printf
  4950  039F  01A5               	clrf	??_printf+1
  4951  03A0  35A4               	lslf	??_printf,f
  4952  03A1  0DA5               	rlf	??_printf+1,f
  4953  03A2  3000               	movlw	low (_dpowers| (0+32768))
  4954  03A3  0724               	addwf	??_printf,w
  4955  03A4  0084               	movwf	4
  4956  03A5  3088               	movlw	high (_dpowers| (0+32768))
  4957  03A6  3D25               	addwfc	??_printf+1,w
  4958  03A7  0085               	movwf	5
  4959  03A8  3F00               	moviw [0]fsr0
  4960  03A9  00F0               	movwf	___lwdiv@divisor
  4961  03AA  3F01               	moviw [1]fsr0
  4962  03AB  00F1               	movwf	___lwdiv@divisor+1
  4963  03AC  082C               	movf	printf@val+1,w
  4964  03AD  00F3               	movwf	___lwdiv@dividend+1
  4965  03AE  082B               	movf	printf@val,w
  4966  03AF  00F2               	movwf	___lwdiv@dividend
  4967  03B0  3182  22DB  3183   	fcall	___lwdiv
  4968  03B3  0871               	movf	?___lwdiv+1,w
  4969  03B4  00FB               	movwf	___lwmod@dividend+1
  4970  03B5  0870               	movf	?___lwdiv,w
  4971  03B6  00FA               	movwf	___lwmod@dividend
  4972  03B7  3182  2281  3183   	fcall	___lwmod
  4973  03BA  0878               	movf	?___lwmod,w
  4974  03BB  3E30               	addlw	48
  4975  03BC  0020               	movlb	0	; select bank0
  4976  03BD  00A6               	movwf	??_printf+2
  4977  03BE  0826               	movf	??_printf+2,w
  4978  03BF  00AD               	movwf	printf@c
  4979                           
  4980                           ;doprnt.c: 1523: }
  4981                           ;doprnt.c: 1524: (putch(c) );
  4982  03C0  082D               	movf	printf@c,w
  4983  03C1  3181  21E9  3183   	fcall	_putch
  4984  03C4  2B91               	goto	l1537
  4985  03C5                     l333:	
  4986                           ;doprnt.c: 1540: return 0;
  4987                           ;	Return value of _printf is never used
  4988                           
  4989                           ;doprnt.c: 1525: }
  4990                           ;doprnt.c: 1533: }
  4991                           ;doprnt.c: 1535: alldone:
  4992                           
  4993  03C5  0008               	return
  4994  03C6                     __end_of_printf:	
  4995                           
  4996                           	psect	text13
  4997  01E9                     __ptext13:	
  4998 ;; *************** function _putch *****************
  4999 ;; Defined at:
  5000 ;;		line 41 in file "../../source/uart.c"
  5001 ;; Parameters:    Size  Location     Type
  5002 ;;  input           1    wreg     unsigned char 
  5003 ;; Auto vars:     Size  Location     Type
  5004 ;;  input           1    0[COMMON] unsigned char 
  5005 ;; Return value:  Size  Location     Type
  5006 ;;		None               void
  5007 ;; Registers used:
  5008 ;;		wreg
  5009 ;; Tracked objects:
  5010 ;;		On entry : 0/0
  5011 ;;		On exit  : 0/0
  5012 ;;		Unchanged: 0/0
  5013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5015 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5017 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5018 ;;Total ram usage:        1 bytes
  5019 ;; Hardware stack levels used:    1
  5020 ;; This function calls:
  5021 ;;		Nothing
  5022 ;; This function is called by:
  5023 ;;		_printf
  5024 ;;		_getche
  5025 ;; This function uses a non-reentrant model
  5026 ;;
  5027                           
  5028                           
  5029                           ;psect for function _putch
  5030  01E9                     _putch:	
  5031                           
  5032                           ;incstack = 0
  5033                           ; Regs used in _putch: [wreg]
  5034                           ;putch@input stored from wreg
  5035  01E9  00F0               	movwf	putch@input
  5036  01EA                     l277:	
  5037                           ;uart.c: 44: {
  5038                           ;uart.c: 45: continue;
  5039                           
  5040                           ;uart.c: 43: while(!TRMT)
  5041                           
  5042  01EA  0023               	movlb	3	; select bank3
  5043  01EB  1C9E               	btfss	30,1	;volatile
  5044  01EC  29EA               	goto	l277
  5045                           
  5046                           ;uart.c: 46: }
  5047                           ;uart.c: 47: TXREG = input;
  5048  01ED  0870               	movf	putch@input,w
  5049  01EE  009A               	movwf	26	;volatile
  5050  01EF  0008               	return
  5051  01F0                     __end_of_putch:	
  5052                           
  5053                           	psect	text14
  5054  0281                     __ptext14:	
  5055 ;; *************** function ___lwmod *****************
  5056 ;; Defined at:
  5057 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  5058 ;; Parameters:    Size  Location     Type
  5059 ;;  divisor         2    8[COMMON] unsigned int 
  5060 ;;  dividend        2   10[COMMON] unsigned int 
  5061 ;; Auto vars:     Size  Location     Type
  5062 ;;  counter         1   13[COMMON] unsigned char 
  5063 ;; Return value:  Size  Location     Type
  5064 ;;                  2    8[COMMON] unsigned int 
  5065 ;; Registers used:
  5066 ;;		wreg, status,2, status,0
  5067 ;; Tracked objects:
  5068 ;;		On entry : 0/0
  5069 ;;		On exit  : 0/0
  5070 ;;		Unchanged: 0/0
  5071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5072 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5073 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5074 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5075 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5076 ;;Total ram usage:        6 bytes
  5077 ;; Hardware stack levels used:    1
  5078 ;; This function calls:
  5079 ;;		Nothing
  5080 ;; This function is called by:
  5081 ;;		_printf
  5082 ;; This function uses a non-reentrant model
  5083 ;;
  5084                           
  5085                           
  5086                           ;psect for function ___lwmod
  5087  0281                     ___lwmod:	
  5088                           
  5089                           ;incstack = 0
  5090                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5091  0281  0878               	movf	___lwmod@divisor,w
  5092  0282  0479               	iorwf	___lwmod@divisor+1,w
  5093  0283  1903               	btfsc	3,2
  5094  0284  2AA8               	goto	l1489
  5095  0285  01FD               	clrf	___lwmod@counter
  5096  0286  0AFD               	incf	___lwmod@counter,f
  5097  0287                     l1479:	
  5098  0287  1BF9               	btfsc	___lwmod@divisor+1,7
  5099  0288  2A93               	goto	l1481
  5100  0289  3001               	movlw	1
  5101  028A                     u1165:	
  5102  028A  35F8               	lslf	___lwmod@divisor,f
  5103  028B  0DF9               	rlf	___lwmod@divisor+1,f
  5104  028C  0B89               	decfsz	9,f
  5105  028D  2A8A               	goto	u1165
  5106  028E  3001               	movlw	1
  5107  028F  00FC               	movwf	??___lwmod
  5108  0290  087C               	movf	??___lwmod,w
  5109  0291  07FD               	addwf	___lwmod@counter,f
  5110  0292  2A87               	goto	l1479
  5111  0293                     l1481:	
  5112  0293  0879               	movf	___lwmod@divisor+1,w
  5113  0294  027B               	subwf	___lwmod@dividend+1,w
  5114  0295  1D03               	skipz
  5115  0296  2A99               	goto	u1185
  5116  0297  0878               	movf	___lwmod@divisor,w
  5117  0298  027A               	subwf	___lwmod@dividend,w
  5118  0299                     u1185:	
  5119  0299  1C03               	skipc
  5120  029A  2A9F               	goto	l1485
  5121  029B  0878               	movf	___lwmod@divisor,w
  5122  029C  02FA               	subwf	___lwmod@dividend,f
  5123  029D  0879               	movf	___lwmod@divisor+1,w
  5124  029E  3BFB               	subwfb	___lwmod@dividend+1,f
  5125  029F                     l1485:	
  5126  029F  3001               	movlw	1
  5127  02A0                     u1195:	
  5128  02A0  36F9               	lsrf	___lwmod@divisor+1,f
  5129  02A1  0CF8               	rrf	___lwmod@divisor,f
  5130  02A2  0B89               	decfsz	9,f
  5131  02A3  2AA0               	goto	u1195
  5132  02A4  3001               	movlw	1
  5133  02A5  02FD               	subwf	___lwmod@counter,f
  5134  02A6  1D03               	btfss	3,2
  5135  02A7  2A93               	goto	l1481
  5136  02A8                     l1489:	
  5137  02A8  087B               	movf	___lwmod@dividend+1,w
  5138  02A9  00F9               	movwf	?___lwmod+1
  5139  02AA  087A               	movf	___lwmod@dividend,w
  5140  02AB  00F8               	movwf	?___lwmod
  5141  02AC  0008               	return
  5142  02AD                     __end_of___lwmod:	
  5143                           
  5144                           	psect	text15
  5145  02DB                     __ptext15:	
  5146 ;; *************** function ___lwdiv *****************
  5147 ;; Defined at:
  5148 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  5149 ;; Parameters:    Size  Location     Type
  5150 ;;  divisor         2    0[COMMON] unsigned int 
  5151 ;;  dividend        2    2[COMMON] unsigned int 
  5152 ;; Auto vars:     Size  Location     Type
  5153 ;;  quotient        2    5[COMMON] unsigned int 
  5154 ;;  counter         1    7[COMMON] unsigned char 
  5155 ;; Return value:  Size  Location     Type
  5156 ;;                  2    0[COMMON] unsigned int 
  5157 ;; Registers used:
  5158 ;;		wreg, status,2, status,0
  5159 ;; Tracked objects:
  5160 ;;		On entry : 0/0
  5161 ;;		On exit  : 0/0
  5162 ;;		Unchanged: 0/0
  5163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5164 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5165 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5166 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5167 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5168 ;;Total ram usage:        8 bytes
  5169 ;; Hardware stack levels used:    1
  5170 ;; This function calls:
  5171 ;;		Nothing
  5172 ;; This function is called by:
  5173 ;;		_printf
  5174 ;; This function uses a non-reentrant model
  5175 ;;
  5176                           
  5177                           
  5178                           ;psect for function ___lwdiv
  5179  02DB                     ___lwdiv:	
  5180                           
  5181                           ;incstack = 0
  5182                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5183  02DB  01F5               	clrf	___lwdiv@quotient
  5184  02DC  01F6               	clrf	___lwdiv@quotient+1
  5185  02DD  0870               	movf	___lwdiv@divisor,w
  5186  02DE  0471               	iorwf	___lwdiv@divisor+1,w
  5187  02DF  1903               	btfsc	3,2
  5188  02E0  2B0A               	goto	l1467
  5189  02E1  01F7               	clrf	___lwdiv@counter
  5190  02E2  0AF7               	incf	___lwdiv@counter,f
  5191  02E3                     l1455:	
  5192  02E3  1BF1               	btfsc	___lwdiv@divisor+1,7
  5193  02E4  2AEF               	goto	l1457
  5194  02E5  3001               	movlw	1
  5195  02E6                     u1095:	
  5196  02E6  35F0               	lslf	___lwdiv@divisor,f
  5197  02E7  0DF1               	rlf	___lwdiv@divisor+1,f
  5198  02E8  0B89               	decfsz	9,f
  5199  02E9  2AE6               	goto	u1095
  5200  02EA  3001               	movlw	1
  5201  02EB  00F4               	movwf	??___lwdiv
  5202  02EC  0874               	movf	??___lwdiv,w
  5203  02ED  07F7               	addwf	___lwdiv@counter,f
  5204  02EE  2AE3               	goto	l1455
  5205  02EF                     l1457:	
  5206  02EF  3001               	movlw	1
  5207  02F0                     u1115:	
  5208  02F0  35F5               	lslf	___lwdiv@quotient,f
  5209  02F1  0DF6               	rlf	___lwdiv@quotient+1,f
  5210  02F2  0B89               	decfsz	9,f
  5211  02F3  2AF0               	goto	u1115
  5212  02F4  0871               	movf	___lwdiv@divisor+1,w
  5213  02F5  0273               	subwf	___lwdiv@dividend+1,w
  5214  02F6  1D03               	skipz
  5215  02F7  2AFA               	goto	u1125
  5216  02F8  0870               	movf	___lwdiv@divisor,w
  5217  02F9  0272               	subwf	___lwdiv@dividend,w
  5218  02FA                     u1125:	
  5219  02FA  1C03               	skipc
  5220  02FB  2B01               	goto	l1463
  5221  02FC  0870               	movf	___lwdiv@divisor,w
  5222  02FD  02F2               	subwf	___lwdiv@dividend,f
  5223  02FE  0871               	movf	___lwdiv@divisor+1,w
  5224  02FF  3BF3               	subwfb	___lwdiv@dividend+1,f
  5225  0300  1475               	bsf	___lwdiv@quotient,0
  5226  0301                     l1463:	
  5227  0301  3001               	movlw	1
  5228  0302                     u1135:	
  5229  0302  36F1               	lsrf	___lwdiv@divisor+1,f
  5230  0303  0CF0               	rrf	___lwdiv@divisor,f
  5231  0304  0B89               	decfsz	9,f
  5232  0305  2B02               	goto	u1135
  5233  0306  3001               	movlw	1
  5234  0307  02F7               	subwf	___lwdiv@counter,f
  5235  0308  1D03               	btfss	3,2
  5236  0309  2AEF               	goto	l1457
  5237  030A                     l1467:	
  5238  030A  0876               	movf	___lwdiv@quotient+1,w
  5239  030B  00F1               	movwf	?___lwdiv+1
  5240  030C  0875               	movf	___lwdiv@quotient,w
  5241  030D  00F0               	movwf	?___lwdiv
  5242  030E  0008               	return
  5243  030F                     __end_of___lwdiv:	
  5244                           
  5245                           	psect	text16
  5246  021B                     __ptext16:	
  5247 ;; *************** function _determine_sword_was_swung *****************
  5248 ;; Defined at:
  5249 ;;		line 49 in file "../../source/function_stubs.c"
  5250 ;; Parameters:    Size  Location     Type
  5251 ;;		None
  5252 ;; Auto vars:     Size  Location     Type
  5253 ;;  input           1    2[COMMON] unsigned char 
  5254 ;; Return value:  Size  Location     Type
  5255 ;;                  1    wreg      unsigned char 
  5256 ;; Registers used:
  5257 ;;		wreg, status,2, status,0, pclath, cstack
  5258 ;; Tracked objects:
  5259 ;;		On entry : 0/0
  5260 ;;		On exit  : 0/0
  5261 ;;		Unchanged: 0/0
  5262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5264 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5265 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5266 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5267 ;;Total ram usage:        2 bytes
  5268 ;; Hardware stack levels used:    1
  5269 ;; Hardware stack levels required when called:    1
  5270 ;; This function calls:
  5271 ;;		_getch
  5272 ;; This function is called by:
  5273 ;;		_main
  5274 ;; This function uses a non-reentrant model
  5275 ;;
  5276                           
  5277                           
  5278                           ;psect for function _determine_sword_was_swung
  5279  021B                     _determine_sword_was_swung:	
  5280                           
  5281                           ;function_stubs.c: 51: char input = getch();
  5282                           
  5283                           ;incstack = 0
  5284                           ; Regs used in _determine_sword_was_swung: [wreg+status,2+status,0+pclath+cstack]
  5285  021B  3181  21E2  3182   	fcall	_getch
  5286  021E  00F1               	movwf	??_determine_sword_was_swung
  5287  021F  0871               	movf	??_determine_sword_was_swung,w
  5288  0220  00F2               	movwf	determine_sword_was_swung@input
  5289                           
  5290                           ;function_stubs.c: 52: if( input == 's' )
  5291  0221  3073               	movlw	115
  5292  0222  0672               	xorwf	determine_sword_was_swung@input,w
  5293  0223  1D03               	btfss	3,2
  5294  0224  2A27               	goto	l1581
  5295                           
  5296                           ;function_stubs.c: 53: {
  5297                           ;function_stubs.c: 54: return 1;
  5298  0225  3001               	movlw	1
  5299                           
  5300                           ;function_stubs.c: 55: }
  5301  0226  0008               	return
  5302  0227                     l1581:	
  5303                           
  5304                           ;function_stubs.c: 56: else
  5305                           ;function_stubs.c: 57: {
  5306                           ;function_stubs.c: 58: return input;
  5307  0227  0872               	movf	determine_sword_was_swung@input,w
  5308  0228  0008               	return
  5309  0229                     __end_of_determine_sword_was_swung:	
  5310                           
  5311                           	psect	text17
  5312  01E2                     __ptext17:	
  5313 ;; *************** function _getch *****************
  5314 ;; Defined at:
  5315 ;;		line 51 in file "../../source/uart.c"
  5316 ;; Parameters:    Size  Location     Type
  5317 ;;		None
  5318 ;; Auto vars:     Size  Location     Type
  5319 ;;  counter         1    0[COMMON] unsigned char 
  5320 ;; Return value:  Size  Location     Type
  5321 ;;                  1    wreg      unsigned char 
  5322 ;; Registers used:
  5323 ;;		wreg, status,2
  5324 ;; Tracked objects:
  5325 ;;		On entry : 0/0
  5326 ;;		On exit  : 0/0
  5327 ;;		Unchanged: 0/0
  5328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5330 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5332 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5333 ;;Total ram usage:        1 bytes
  5334 ;; Hardware stack levels used:    1
  5335 ;; This function calls:
  5336 ;;		Nothing
  5337 ;; This function is called by:
  5338 ;;		_determine_sword_was_swung
  5339 ;;		_getche
  5340 ;;		_uart_test
  5341 ;; This function uses a non-reentrant model
  5342 ;;
  5343                           
  5344                           
  5345                           ;psect for function _getch
  5346  01E2                     _getch:	
  5347                           
  5348                           ;uart.c: 53: unsigned char counter = 0;
  5349                           
  5350                           ;incstack = 0
  5351                           ; Regs used in _getch: [wreg+status,2]
  5352  01E2  01F0               	clrf	getch@counter
  5353  01E3                     l283:	
  5354                           ;uart.c: 56: {
  5355                           ;uart.c: 57: continue;
  5356                           
  5357                           ;uart.c: 55: while( !RCIF )
  5358                           
  5359  01E3  0020               	movlb	0	; select bank0
  5360  01E4  1E91               	btfss	17,5	;volatile
  5361  01E5  29E3               	goto	l283
  5362                           
  5363                           ;uart.c: 63: }
  5364                           ;uart.c: 64: return RCREG;
  5365  01E6  0023               	movlb	3	; select bank3
  5366  01E7  0819               	movf	25,w	;volatile
  5367  01E8  0008               	return
  5368  01E9                     __end_of_getch:	
  5369                           
  5370                           	psect	text18
  5371  0269                     __ptext18:	
  5372 ;; *************** function _determine_packets_to_send *****************
  5373 ;; Defined at:
  5374 ;;		line 67 in file "../../source/function_stubs.c"
  5375 ;; Parameters:    Size  Location     Type
  5376 ;;  packets         1    wreg     PTR unsigned char 
  5377 ;;		 -> main@pkt_arr(3), 
  5378 ;; Auto vars:     Size  Location     Type
  5379 ;;  packets         1    1[COMMON] PTR unsigned char 
  5380 ;;		 -> main@pkt_arr(3), 
  5381 ;; Return value:  Size  Location     Type
  5382 ;;		None               void
  5383 ;; Registers used:
  5384 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5385 ;; Tracked objects:
  5386 ;;		On entry : 0/0
  5387 ;;		On exit  : 0/0
  5388 ;;		Unchanged: 0/0
  5389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5391 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5392 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5393 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5394 ;;Total ram usage:        2 bytes
  5395 ;; Hardware stack levels used:    1
  5396 ;; This function calls:
  5397 ;;		Nothing
  5398 ;; This function is called by:
  5399 ;;		_main
  5400 ;; This function uses a non-reentrant model
  5401 ;;
  5402                           
  5403                           
  5404                           ;psect for function _determine_packets_to_send
  5405  0269                     _determine_packets_to_send:	
  5406                           
  5407                           ;incstack = 0
  5408                           ; Regs used in _determine_packets_to_send: [wreg+fsr1l+fsr1h+status,2+status,0]
  5409                           ;determine_packets_to_send@packets stored from wreg
  5410  0269  00F1               	movwf	determine_packets_to_send@packets
  5411                           
  5412                           ;function_stubs.c: 69: packets[0] = 5;
  5413  026A  3005               	movlw	5
  5414  026B  00F0               	movwf	??_determine_packets_to_send
  5415  026C  0871               	movf	determine_packets_to_send@packets,w
  5416  026D  0086               	movwf	6
  5417  026E  0187               	clrf	7
  5418  026F  0870               	movf	??_determine_packets_to_send,w
  5419  0270  0081               	movwf	1
  5420                           
  5421                           ;function_stubs.c: 70: packets[1] = 10;
  5422  0271  300A               	movlw	10
  5423  0272  00F0               	movwf	??_determine_packets_to_send
  5424  0273  0A71               	incf	determine_packets_to_send@packets,w
  5425  0274  0086               	movwf	6
  5426  0275  0187               	clrf	7
  5427  0276  0870               	movf	??_determine_packets_to_send,w
  5428  0277  0081               	movwf	1
  5429                           
  5430                           ;function_stubs.c: 71: packets[2] = 15;
  5431  0278  300F               	movlw	15
  5432  0279  00F0               	movwf	??_determine_packets_to_send
  5433  027A  0871               	movf	determine_packets_to_send@packets,w
  5434  027B  3E02               	addlw	2
  5435  027C  0086               	movwf	6
  5436  027D  0187               	clrf	7
  5437  027E  0870               	movf	??_determine_packets_to_send,w
  5438  027F  0081               	movwf	1
  5439  0280  0008               	return
  5440  0281                     __end_of_determine_packets_to_send:	
  5441                           
  5442                           	psect	text19
  5443  01D9                     __ptext19:	
  5444 ;; *************** function _determine_omega_mode_active *****************
  5445 ;; Defined at:
  5446 ;;		line 62 in file "../../source/function_stubs.c"
  5447 ;; Parameters:    Size  Location     Type
  5448 ;;		None
  5449 ;; Auto vars:     Size  Location     Type
  5450 ;;		None
  5451 ;; Return value:  Size  Location     Type
  5452 ;;                  1    wreg      unsigned char 
  5453 ;; Registers used:
  5454 ;;		wreg
  5455 ;; Tracked objects:
  5456 ;;		On entry : 0/0
  5457 ;;		On exit  : 0/0
  5458 ;;		Unchanged: 0/0
  5459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5464 ;;Total ram usage:        0 bytes
  5465 ;; Hardware stack levels used:    1
  5466 ;; This function calls:
  5467 ;;		Nothing
  5468 ;; This function is called by:
  5469 ;;		_main
  5470 ;; This function uses a non-reentrant model
  5471 ;;
  5472                           
  5473                           
  5474                           ;psect for function _determine_omega_mode_active
  5475  01D9                     _determine_omega_mode_active:	
  5476                           
  5477                           ;function_stubs.c: 64: return omega_mode;
  5478                           
  5479                           ;incstack = 0
  5480                           ; Regs used in _determine_omega_mode_active: [wreg]
  5481  01D9  0020               	movlb	0	; select bank0
  5482  01DA  083E               	movf	_omega_mode,w
  5483  01DB  0008               	return
  5484  01DC                     __end_of_determine_omega_mode_active:	
  5485  007E                     btemp	set	126	;btemp
  5486  007E                     wtemp	set	126
  5487  007E                     wtemp0	set	126
  5488  0080                     wtemp1	set	128
  5489  0082                     wtemp2	set	130
  5490  0084                     wtemp3	set	132
  5491  0086                     wtemp4	set	134
  5492  0088                     wtemp5	set	136
  5493  007F                     wtemp6	set	127
  5494  007E                     ttemp	set	126
  5495  007E                     ttemp0	set	126
  5496  0081                     ttemp1	set	129
  5497  0084                     ttemp2	set	132
  5498  0087                     ttemp3	set	135
  5499  007F                     ttemp4	set	127
  5500  007E                     ltemp	set	126
  5501  007E                     ltemp0	set	126
  5502  0082                     ltemp1	set	130
  5503  0086                     ltemp2	set	134
  5504  0080                     ltemp3	set	128


Data Sizes:
    Strings     1015
    Constant    10
    Data        1
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     26      33
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 66
		 -> STR_53(CODE[26]), STR_52(CODE[49]), STR_51(CODE[31]), STR_50(CODE[25]), 
		 -> STR_49(CODE[3]), STR_48(CODE[23]), STR_47(CODE[22]), STR_46(CODE[30]), 
		 -> STR_45(CODE[42]), STR_44(CODE[43]), STR_43(CODE[18]), STR_42(CODE[23]), 
		 -> STR_41(CODE[22]), STR_40(CODE[30]), STR_39(CODE[42]), STR_38(CODE[43]), 
		 -> STR_37(CODE[18]), STR_36(CODE[23]), STR_35(CODE[22]), STR_34(CODE[18]), 
		 -> STR_33(CODE[23]), STR_32(CODE[22]), STR_31(CODE[30]), STR_30(CODE[42]), 
		 -> STR_29(CODE[43]), STR_28(CODE[18]), STR_27(CODE[36]), STR_26(CODE[66]), 
		 -> STR_25(CODE[53]), STR_24(CODE[28]), STR_23(CODE[4]), STR_22(CODE[4]), 
		 -> STR_21(CODE[38]), STR_20(CODE[28]), STR_19(CODE[4]), STR_18(CODE[4]), 
		 -> STR_17(CODE[4]), STR_16(CODE[4]), STR_15(CODE[37]), STR_14(CODE[65]), 
		 -> STR_13(CODE[62]), STR_12(CODE[19]), STR_11(CODE[42]), STR_10(CODE[47]), 
		 -> STR_9(CODE[20]), STR_8(CODE[29]), STR_7(CODE[34]), STR_6(CODE[33]), 
		 -> STR_5(CODE[8]), STR_4(CODE[10]), STR_3(CODE[10]), STR_2(CODE[9]), 
		 -> STR_1(CODE[36]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    determine_packets_to_send@packets	PTR unsigned char  size(1) Largest target is 3
		 -> main@pkt_arr(BANK0[3]), 


Critical Paths under _main in COMMON

    _printf->___lwmod
    ___lwmod->___lwdiv
    _determine_sword_was_swung->_getch

Critical Paths under _main in BANK0

    _main->_output_ir
    _play_sound->_printf
    _output_ir->_printf
    _init_leds->_printf
    _init_isr->_printf
    _init_ir->_printf
    _init_accel->_printf
    _display_blade_lights->_printf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0   31831
                                             18 BANK0      8     8      0
        _determine_omega_mode_active
          _determine_packets_to_send
          _determine_sword_was_swung
               _display_blade_lights
                     _display_health
                         _init_accel
                            _init_ir
                           _init_isr
                          _init_leds
                           _init_pic
                          _init_uart
                          _output_ir
                         _play_sound
                             _printf
                             _waitch
 ---------------------------------------------------------------------------------
 (1) _waitch                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _play_sound                                           1     1      0    3794
                                             14 BANK0      1     1      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _output_ir                                            4     3      1    4028
                                             14 BANK0      4     3      1
                             _printf
 ---------------------------------------------------------------------------------
 (1) _init_uart                                            1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_pic                                             1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_leds                                            0     0      0    3750
                             _printf
 ---------------------------------------------------------------------------------
 (1) _init_isr                                             0     0      0    3750
                             _printf
 ---------------------------------------------------------------------------------
 (1) _init_ir                                              0     0      0    3750
                             _printf
 ---------------------------------------------------------------------------------
 (1) _init_accel                                           0     0      0    3750
                             _printf
 ---------------------------------------------------------------------------------
 (1) _display_health                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display_blade_lights                                 1     1      0    3794
                                             14 BANK0      1     1      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              22    18      4    3750
                                              0 BANK0     14    10      4
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     265
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     268
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _determine_sword_was_swung                            2     2      0      46
                                              1 COMMON     2     2      0
                              _getch
 ---------------------------------------------------------------------------------
 (2) _getch                                                1     1      0       1
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _determine_packets_to_send                            2     2      0     174
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _determine_omega_mode_active                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _determine_omega_mode_active
   _determine_packets_to_send
   _determine_sword_was_swung
     _getch
   _display_blade_lights
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _putch
   _display_health
   _init_accel
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _putch
   _init_ir
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _putch
   _init_isr
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _putch
   _init_leds
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _putch
   _init_pic
   _init_uart
   _output_ir
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _putch
   _play_sound
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _putch
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch
   _waitch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1A      21       5       41.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0      2F      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0      2F      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              50      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24              50      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25              20      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Tue Oct 20 00:40:03 2015

                         __CFG_CP$OFF 0000                __end_of_display_health 01D8  
                                 l134 056A                                   l224 07D2  
                                 l209 07D0                                   l227 07EE  
                                 l333 03C5                                   l149 056C  
                                 l194 06DD                                   l283 01E3  
                                 l179 06DB                                   l292 01DC  
                                 l277 01EA                                   _GIE 005F  
                                 _RB3 006B                          __CFG_CPD$OFF 0000  
                        __CFG_BORV$LO 0000                                   wreg 0009  
                        __CFG_IESO$ON 0000                          __CFG_LVP$OFF 0000  
           play_sound@sound_selection 002E                                  l2021 0745  
                                l2005 0713                                  l2031 075D  
                                l2017 0736                                  l2009 0722  
                                l2051 07E4                                  l2043 077D  
                                l2039 0773                                  l2055 07EF  
                                l1521 0365                                  l1505 0349  
                                l1601 0247                                  l1531 038C  
                                l1515 035F                                  l1463 0301  
                                l1455 02E3                                  l1527 0384  
                                l1457 02EF                                  l1481 0293  
                                l1537 0391                                  l1721 051C  
                                l1467 030A                                  l1539 0314  
                                l1555 02C8                                  l1811 057E  
                                l1803 0517                                  l1731 0532  
                                l1715 0461                                  l1581 0227  
                                l1485 029F                                  l1565 025E  
                                l1901 060D                                  l1717 047D  
                                l1709 0453                                  l1479 0287  
                                l1559 02D3                                  l1751 0566  
                                l1743 054A                                  l1815 0589  
                                l1489 02A8                                  l1921 0641  
                                l1913 062D                                  l1817 058E  
                                l1753 049A                                  l1681 0414  
                                l1673 0407                                  l1499 0330  
                                l1843 05CE                                  l1835 05B2  
                                l1747 055D                                  l1925 0650  
                                l1909 061E                                  l1861 0600  
                                l1845 05D7                                  l1781 04DF  
                                l1765 04AD                                  l1757 049C  
                                l1943 067E                                  l1935 0668  
                                l1839 05C5                                  l1863 0606  
                                l1791 04F7                                  l1695 0432  
                                l1961 0782                                  l1865 068D  
                                l1857 05F6                                  l1849 05E0  
                                l1777 04D0                                  l1769 04BC  
                                l1689 0421                                  l1697 044E  
                                l1971 0798                                  l1955 06EF  
                                l1947 0688                                  l1875 06A3  
                                l1893 06D1                                  l1885 06B5  
                                l1991 07CC                                  l1983 07B0  
                                l1959 06FA                                  l1799 050D  
                                l1993 0700                                  l1897 060B  
                                l1889 06C8                                  l1987 07C3  
                                l1997 0702                                  STR_1 0A4E  
                                STR_2 0BD8                                  STR_3 0BC4  
                                STR_4 0BCE                                  STR_5 0BE1  
                                STR_6 0A94                                  STR_7 0A72  
                                STR_8 0AF2                                  STR_9 0B8B  
                                _BRGH 0CF2                                  _CREN 0CEC  
                                u1115 02F0                                  u1125 02FA  
                                u1135 0302                                  u1165 028A  
                                u1245 037A                                  u1095 02E6  
                                u1185 0299                                  u2137 03DF  
                                u1195 02A0                                  u2147 0574  
                                u2157 06E5                                  u2167 07DA  
                                _RCIE 048D                                  _RCIF 008D  
   __end_of_determine_sword_was_swung 0229                                  _SPEN 0CEF  
                                _TRMT 0CF1                                  _TXEN 0CF5  
                                _SYNC 0CF4                          __CFG_WRT$OFF 0000  
                       __CFG_FCMEN$ON 0000                                  _main 03C6  
                         main@pkt_arr 0035                                  fsr0h 0005  
                                fsr1h 0007                                  fsr0l 0004  
                                indf0 0000                                  indf1 0001  
                                fsr1l 0006                                  btemp 007E  
                                ltemp 007E                                  start 0002  
                                ttemp 007E                                  wtemp 007E  
                       __CFG_MCLRE$ON 0000             _determine_packets_to_send 0269  
                               ?_main 0070                       ?_display_health 0070  
                               STR_10 0931                                 STR_11 09B5  
                               STR_12 0B9F                                 STR_20 0B0F  
                               STR_21 09DF                                 STR_13 088D  
                               STR_22 0BFD                                 STR_30 098B  
                               STR_14 084C                                 STR_23 0BF9  
                               STR_31 0AD4                                 STR_15 0A05  
                               STR_40 0AD4                                 STR_24 0B0F  
                               STR_16 0BE9                                 STR_32 0B75  
                               _BRG16 0CFB                                 STR_41 0B75  
                               STR_17 0BED                                 STR_33 0B5E  
                               STR_25 08CB                         __CFG_WDTE$OFF 0000  
                               STR_42 0B5E                                 STR_34 0BB2  
                               STR_18 0BF1                                 STR_50 0B45  
                               STR_26 080A                                 STR_35 0B75  
                               STR_43 0BB2                                 STR_19 0BF5  
                               STR_51 0AB5                                 STR_27 0A2A  
                               STR_44 0960                                 STR_36 0B5E  
                               STR_28 0BB2                                 STR_52 0900  
                               STR_45 098B                                 STR_37 0BB2  
                               STR_53 0B2B                                 STR_29 0960  
                               STR_38 0960                                 STR_46 0AD4  
                               STR_39 098B                                 STR_47 0B75  
                               STR_48 0B5E                                 STR_49 0A4B  
                     __end_of___lwdiv 030F                       __end_of___lwmod 02AD  
                               _RCREG 0199                                 _SPBRG 019B  
                               _TRISB 008D                                 _TRISC 008E  
                               _TXREG 019A                                 _blade 003D  
                               _getch 01E2                       __end_of_dpowers 080A  
                     __end_of_init_ir 0200                                 _putch 01E9  
                               main@i 0038                        __CFG_BOREN$OFF 0000  
                               ltemp0 007E                                 ltemp1 0082  
                               ltemp2 0086                                 ltemp3 0080  
                               ttemp0 007E                                 ttemp1 0081  
                               ttemp2 0084                                 ttemp3 0087  
                               ttemp4 007F                                 status 0003  
                               wtemp0 007E                                 wtemp1 0080  
                               wtemp2 0082                                 wtemp3 0084  
                               wtemp4 0086                                 wtemp5 0088  
                               wtemp6 007F                       __initialization 07F4  
                        __end_of_main 07F4                        __CFG_LPBOR$OFF 0000  
                              ??_main 0032                        __CFG_PLLEN$OFF 0000  
        __end_of_display_blade_lights 0252                          _stun_counter 003F  
                              ?_getch 0070                                ?_putch 0070  
                              _OSCCON 0099                        __CFG_PWRTE$OFF 0000  
                      __CFG_STVREN$ON 0000                                _health 0040  
                           ??___lwdiv 0074                             ??___lwmod 007C  
                    __end_of_init_pic 021B                      __end_of_init_isr 0208  
                              _waitch 01DC                                _printf 030F  
                           ??_init_ir 007E                         main@userInput 0039  
             __end_of__initialization 07FD                        __pcstackCOMMON 0070  
                        __pidataBANK0 01D8                         __end_of_getch 01E9  
                       __end_of_putch 01F0                               ??_getch 0070  
  __size_of_determine_packets_to_send 0018                               ??_putch 0070  
                          __pbssBANK0 003A                       __CFG_VCAPEN$OFF 0000  
                  __size_of_init_leds 0008                    __size_of_init_uart 0012  
                          __pmaintext 03C6                      ??_display_health 0070  
                _display_blade_lights 023B                               ?_waitch 0070  
                             ?_printf 0020     __end_of_determine_packets_to_send 0281  
                  __size_of_output_ir 002E            ?_determine_sword_was_swung 0070  
                           ?_init_pic 0070                             ?_init_isr 0070  
      determine_sword_was_swung@input 0072                 ?_display_blade_lights 0070  
                          _init_accel 01F0                               ___lwdiv 02DB  
                             ___lwmod 0281                               __ptext1 01DC  
                             __ptext2 0252                               __ptext3 02AD  
                             __ptext4 0229                               __ptext5 0210  
                             __ptext6 0208                               __ptext7 0200  
                             __ptext8 01F8                               __ptext9 01F0  
                     __size_of_waitch 0006                       __size_of_printf 00B7  
                             _dpowers 0800                               _init_ir 01F8  
                   __end_of_init_leds 0210                     __end_of_init_uart 023B  
        ?_determine_omega_mode_active 0070                            _omega_mode 003E  
                end_of_initialization 07FD                            ??_init_pic 0070  
                          ??_init_isr 007E                            _play_sound 0252  
                             printf@c 002D                               printf@f 0020  
                        __pstringtext 0800                     __end_of_output_ir 02DB  
                    __CFG_FOSC$INTOSC 0000                ??_display_blade_lights 007E  
                         ?_init_accel 0070                        __end_of_waitch 01E2  
                      __end_of_printf 03C6                   start_initialization 07F4  
                         ?_play_sound 0070  __size_of_determine_omega_mode_active 0003  
                         __pdataBANK0 0040                              ??_waitch 0070  
                            ??_printf 0024                             ___latbits 0003  
                       __pcstackBANK0 0020                   __size_of_init_accel 0008  
         ??_determine_sword_was_swung 0071                     __size_of_init_pic 000B  
                   __size_of_init_isr 0008                      ___lwdiv@dividend 0072  
                            ?___lwdiv 0070                              ?___lwmod 0078  
                            ?_init_ir 0070                   __size_of_play_sound 0017  
                     output_ir@amount 002E                      ___lwdiv@quotient 0075  
                      __size_of_getch 0007                             _init_leds 0208  
                           _init_uart 0229                        __size_of_putch 0007  
          ?_determine_packets_to_send 0070                             main@F7229 003A  
           _determine_sword_was_swung 021B                            printf@flag 0029  
                          printf@prec 002A                             _output_ir 02AD  
             __size_of_display_health 0001                            ?_init_leds 0070  
                          ?_init_uart 0070                            putch@input 0070  
                        ??_init_accel 007E                      __size_of___lwdiv 0034  
                    __size_of___lwmod 002C                     output_ir@pkt_type 0031  
                          ?_output_ir 002E                      __size_of_init_ir 0008  
                     ___lwdiv@divisor 0070                       ___lwdiv@counter 0077  
                            __ptext10 01D7                              __ptext11 023B  
                            __ptext12 030F                              __ptext13 01E9  
                            __ptext14 0281                              __ptext15 02DB  
                            __ptext16 021B                              __ptext17 01E2  
                            __ptext18 0269                              __ptext19 01D9  
                  __end_of_init_accel 01F8                         __size_of_main 042E  
                            _init_pic 0210                              _init_isr 0200  
                        ??_play_sound 007E      determine_packets_to_send@packets 0071  
       __size_of_display_blade_lights 0017                             printf@val 002B  
 __end_of_determine_omega_mode_active 01DC           _determine_omega_mode_active 01D9  
                  __end_of_play_sound 0269                           ??_init_leds 007E  
                         ??_init_uart 0070         ??_determine_omega_mode_active 0070  
                    ___lwmod@dividend 007A                     __CFG_CLKOUTEN$OFF 0000  
                            printf@ap 0028                       ___lwmod@divisor 0078  
                      _display_health 01D7                           ??_output_ir 002F  
                     ___lwmod@counter 007D    __size_of_determine_sword_was_swung 000E  
         ??_determine_packets_to_send 0070              display_blade_lights@mode 002E  
                        getch@counter 0070  
