

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Wed Nov 04 17:47:45 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F1788
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	stringtext,global,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	intentry,global,class=CODE,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	dabs	1,0x7E,2
    37  0000                     	;# 
    38  0001                     	;# 
    39  0002                     	;# 
    40  0003                     	;# 
    41  0004                     	;# 
    42  0005                     	;# 
    43  0006                     	;# 
    44  0007                     	;# 
    45  0008                     	;# 
    46  0009                     	;# 
    47  000A                     	;# 
    48  000B                     	;# 
    49  000C                     	;# 
    50  000D                     	;# 
    51  000E                     	;# 
    52  0010                     	;# 
    53  0011                     	;# 
    54  0012                     	;# 
    55  0013                     	;# 
    56  0014                     	;# 
    57  0015                     	;# 
    58  0016                     	;# 
    59  0016                     	;# 
    60  0017                     	;# 
    61  0018                     	;# 
    62  0019                     	;# 
    63  001A                     	;# 
    64  001B                     	;# 
    65  001C                     	;# 
    66  008C                     	;# 
    67  008D                     	;# 
    68  008E                     	;# 
    69  0090                     	;# 
    70  0091                     	;# 
    71  0092                     	;# 
    72  0093                     	;# 
    73  0094                     	;# 
    74  0095                     	;# 
    75  0096                     	;# 
    76  0097                     	;# 
    77  0098                     	;# 
    78  0099                     	;# 
    79  009A                     	;# 
    80  009B                     	;# 
    81  009B                     	;# 
    82  009C                     	;# 
    83  009D                     	;# 
    84  009E                     	;# 
    85  009F                     	;# 
    86  010C                     	;# 
    87  010D                     	;# 
    88  010E                     	;# 
    89  0111                     	;# 
    90  0112                     	;# 
    91  0113                     	;# 
    92  0114                     	;# 
    93  0115                     	;# 
    94  0116                     	;# 
    95  0117                     	;# 
    96  0118                     	;# 
    97  0119                     	;# 
    98  011A                     	;# 
    99  011B                     	;# 
   100  011C                     	;# 
   101  011D                     	;# 
   102  011D                     	;# 
   103  011D                     	;# 
   104  011E                     	;# 
   105  011F                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108  018E                     	;# 
   109  0191                     	;# 
   110  0191                     	;# 
   111  0192                     	;# 
   112  0193                     	;# 
   113  0193                     	;# 
   114  0193                     	;# 
   115  0194                     	;# 
   116  0195                     	;# 
   117  0196                     	;# 
   118  0197                     	;# 
   119  0199                     	;# 
   120  0199                     	;# 
   121  0199                     	;# 
   122  019A                     	;# 
   123  019A                     	;# 
   124  019A                     	;# 
   125  019B                     	;# 
   126  019B                     	;# 
   127  019B                     	;# 
   128  019B                     	;# 
   129  019B                     	;# 
   130  019C                     	;# 
   131  019C                     	;# 
   132  019C                     	;# 
   133  019D                     	;# 
   134  019D                     	;# 
   135  019D                     	;# 
   136  019E                     	;# 
   137  019E                     	;# 
   138  019E                     	;# 
   139  019F                     	;# 
   140  019F                     	;# 
   141  019F                     	;# 
   142  019F                     	;# 
   143  019F                     	;# 
   144  020C                     	;# 
   145  020D                     	;# 
   146  020E                     	;# 
   147  0210                     	;# 
   148  0211                     	;# 
   149  0211                     	;# 
   150  0212                     	;# 
   151  0212                     	;# 
   152  0213                     	;# 
   153  0213                     	;# 
   154  0214                     	;# 
   155  0214                     	;# 
   156  0215                     	;# 
   157  0215                     	;# 
   158  0215                     	;# 
   159  0215                     	;# 
   160  0216                     	;# 
   161  0216                     	;# 
   162  0217                     	;# 
   163  0217                     	;# 
   164  028C                     	;# 
   165  028D                     	;# 
   166  028E                     	;# 
   167  0291                     	;# 
   168  0291                     	;# 
   169  0292                     	;# 
   170  0293                     	;# 
   171  0298                     	;# 
   172  0298                     	;# 
   173  0299                     	;# 
   174  029A                     	;# 
   175  030C                     	;# 
   176  030D                     	;# 
   177  030E                     	;# 
   178  0311                     	;# 
   179  0311                     	;# 
   180  0312                     	;# 
   181  0313                     	;# 
   182  038C                     	;# 
   183  038D                     	;# 
   184  038E                     	;# 
   185  0390                     	;# 
   186  0391                     	;# 
   187  0392                     	;# 
   188  0393                     	;# 
   189  0394                     	;# 
   190  0395                     	;# 
   191  0396                     	;# 
   192  0397                     	;# 
   193  0398                     	;# 
   194  0399                     	;# 
   195  039D                     	;# 
   196  039E                     	;# 
   197  039F                     	;# 
   198  0511                     	;# 
   199  0513                     	;# 
   200  051A                     	;# 
   201  0591                     	;# 
   202  0592                     	;# 
   203  0592                     	;# 
   204  0593                     	;# 
   205  0594                     	;# 
   206  0594                     	;# 
   207  0595                     	;# 
   208  0596                     	;# 
   209  0596                     	;# 
   210  0E91                     	;# 
   211  0E92                     	;# 
   212  0E93                     	;# 
   213  0E94                     	;# 
   214  0E95                     	;# 
   215  0E96                     	;# 
   216  0E97                     	;# 
   217  0E98                     	;# 
   218  0E99                     	;# 
   219  0E9A                     	;# 
   220  0E9B                     	;# 
   221  0E9C                     	;# 
   222  0E9D                     	;# 
   223  0E9E                     	;# 
   224  0E9F                     	;# 
   225  0EA0                     	;# 
   226  0EA1                     	;# 
   227  0EA1                     	;# 
   228  0EA2                     	;# 
   229  0EA3                     	;# 
   230  0EA3                     	;# 
   231  0EA4                     	;# 
   232  0EA5                     	;# 
   233  0EA5                     	;# 
   234  0EA6                     	;# 
   235  0EA7                     	;# 
   236  0EA7                     	;# 
   237  0EA8                     	;# 
   238  0EA9                     	;# 
   239  0EAA                     	;# 
   240  0EAB                     	;# 
   241  0EAC                     	;# 
   242  0EAD                     	;# 
   243  0EAE                     	;# 
   244  0EAF                     	;# 
   245  0EB1                     	;# 
   246  0EB2                     	;# 
   247  0EB3                     	;# 
   248  0EB4                     	;# 
   249  0EB5                     	;# 
   250  0EB6                     	;# 
   251  0EB7                     	;# 
   252  0EB8                     	;# 
   253  0EB9                     	;# 
   254  0EBA                     	;# 
   255  0EBB                     	;# 
   256  0EBC                     	;# 
   257  0EBD                     	;# 
   258  0EBE                     	;# 
   259  0EBF                     	;# 
   260  0EC0                     	;# 
   261  0EC1                     	;# 
   262  0EC1                     	;# 
   263  0EC2                     	;# 
   264  0EC3                     	;# 
   265  0EC3                     	;# 
   266  0EC4                     	;# 
   267  0EC5                     	;# 
   268  0EC5                     	;# 
   269  0EC6                     	;# 
   270  0EC7                     	;# 
   271  0EC7                     	;# 
   272  0EC8                     	;# 
   273  0EC9                     	;# 
   274  0ECA                     	;# 
   275  0ECB                     	;# 
   276  0ECC                     	;# 
   277  0ECD                     	;# 
   278  0ECE                     	;# 
   279  0ECF                     	;# 
   280  0ED1                     	;# 
   281  0ED2                     	;# 
   282  0ED3                     	;# 
   283  0ED4                     	;# 
   284  0ED5                     	;# 
   285  0ED6                     	;# 
   286  0ED7                     	;# 
   287  0ED8                     	;# 
   288  0ED9                     	;# 
   289  0EDA                     	;# 
   290  0EDB                     	;# 
   291  0EDC                     	;# 
   292  0EDD                     	;# 
   293  0EDE                     	;# 
   294  0EDF                     	;# 
   295  0EE0                     	;# 
   296  0EE1                     	;# 
   297  0EE1                     	;# 
   298  0EE2                     	;# 
   299  0EE3                     	;# 
   300  0EE3                     	;# 
   301  0EE4                     	;# 
   302  0EE5                     	;# 
   303  0EE5                     	;# 
   304  0EE6                     	;# 
   305  0EE7                     	;# 
   306  0EE7                     	;# 
   307  0EE8                     	;# 
   308  0EE9                     	;# 
   309  0EEA                     	;# 
   310  0EEB                     	;# 
   311  0EEC                     	;# 
   312  0EED                     	;# 
   313  0EEE                     	;# 
   314  0EEF                     	;# 
   315  0F11                     	;# 
   316  0F12                     	;# 
   317  0F13                     	;# 
   318  0F14                     	;# 
   319  0F15                     	;# 
   320  0F16                     	;# 
   321  0F17                     	;# 
   322  0F18                     	;# 
   323  0F19                     	;# 
   324  0F1A                     	;# 
   325  0F1B                     	;# 
   326  0F1C                     	;# 
   327  0F1D                     	;# 
   328  0F1E                     	;# 
   329  0F1F                     	;# 
   330  0F20                     	;# 
   331  0F21                     	;# 
   332  0F21                     	;# 
   333  0F22                     	;# 
   334  0F23                     	;# 
   335  0F23                     	;# 
   336  0F24                     	;# 
   337  0F25                     	;# 
   338  0F25                     	;# 
   339  0F26                     	;# 
   340  0F27                     	;# 
   341  0F27                     	;# 
   342  0F28                     	;# 
   343  0F29                     	;# 
   344  0F2A                     	;# 
   345  0F2B                     	;# 
   346  0F2C                     	;# 
   347  0F2D                     	;# 
   348  0F2E                     	;# 
   349  0F2F                     	;# 
   350  0FE4                     	;# 
   351  0FE5                     	;# 
   352  0FE6                     	;# 
   353  0FE7                     	;# 
   354  0FE8                     	;# 
   355  0FE9                     	;# 
   356  0FEA                     	;# 
   357  0FEB                     	;# 
   358  0FED                     	;# 
   359  0FEE                     	;# 
   360  0FEF                     	;# 
   361  0000                     	;# 
   362  0001                     	;# 
   363  0002                     	;# 
   364  0003                     	;# 
   365  0004                     	;# 
   366  0005                     	;# 
   367  0006                     	;# 
   368  0007                     	;# 
   369  0008                     	;# 
   370  0009                     	;# 
   371  000A                     	;# 
   372  000B                     	;# 
   373  000C                     	;# 
   374  000D                     	;# 
   375  000E                     	;# 
   376  0010                     	;# 
   377  0011                     	;# 
   378  0012                     	;# 
   379  0013                     	;# 
   380  0014                     	;# 
   381  0015                     	;# 
   382  0016                     	;# 
   383  0016                     	;# 
   384  0017                     	;# 
   385  0018                     	;# 
   386  0019                     	;# 
   387  001A                     	;# 
   388  001B                     	;# 
   389  001C                     	;# 
   390  008C                     	;# 
   391  008D                     	;# 
   392  008E                     	;# 
   393  0090                     	;# 
   394  0091                     	;# 
   395  0092                     	;# 
   396  0093                     	;# 
   397  0094                     	;# 
   398  0095                     	;# 
   399  0096                     	;# 
   400  0097                     	;# 
   401  0098                     	;# 
   402  0099                     	;# 
   403  009A                     	;# 
   404  009B                     	;# 
   405  009B                     	;# 
   406  009C                     	;# 
   407  009D                     	;# 
   408  009E                     	;# 
   409  009F                     	;# 
   410  010C                     	;# 
   411  010D                     	;# 
   412  010E                     	;# 
   413  0111                     	;# 
   414  0112                     	;# 
   415  0113                     	;# 
   416  0114                     	;# 
   417  0115                     	;# 
   418  0116                     	;# 
   419  0117                     	;# 
   420  0118                     	;# 
   421  0119                     	;# 
   422  011A                     	;# 
   423  011B                     	;# 
   424  011C                     	;# 
   425  011D                     	;# 
   426  011D                     	;# 
   427  011D                     	;# 
   428  011E                     	;# 
   429  011F                     	;# 
   430  018C                     	;# 
   431  018D                     	;# 
   432  018E                     	;# 
   433  0191                     	;# 
   434  0191                     	;# 
   435  0192                     	;# 
   436  0193                     	;# 
   437  0193                     	;# 
   438  0193                     	;# 
   439  0194                     	;# 
   440  0195                     	;# 
   441  0196                     	;# 
   442  0197                     	;# 
   443  0199                     	;# 
   444  0199                     	;# 
   445  0199                     	;# 
   446  019A                     	;# 
   447  019A                     	;# 
   448  019A                     	;# 
   449  019B                     	;# 
   450  019B                     	;# 
   451  019B                     	;# 
   452  019B                     	;# 
   453  019B                     	;# 
   454  019C                     	;# 
   455  019C                     	;# 
   456  019C                     	;# 
   457  019D                     	;# 
   458  019D                     	;# 
   459  019D                     	;# 
   460  019E                     	;# 
   461  019E                     	;# 
   462  019E                     	;# 
   463  019F                     	;# 
   464  019F                     	;# 
   465  019F                     	;# 
   466  019F                     	;# 
   467  019F                     	;# 
   468  020C                     	;# 
   469  020D                     	;# 
   470  020E                     	;# 
   471  0210                     	;# 
   472  0211                     	;# 
   473  0211                     	;# 
   474  0212                     	;# 
   475  0212                     	;# 
   476  0213                     	;# 
   477  0213                     	;# 
   478  0214                     	;# 
   479  0214                     	;# 
   480  0215                     	;# 
   481  0215                     	;# 
   482  0215                     	;# 
   483  0215                     	;# 
   484  0216                     	;# 
   485  0216                     	;# 
   486  0217                     	;# 
   487  0217                     	;# 
   488  028C                     	;# 
   489  028D                     	;# 
   490  028E                     	;# 
   491  0291                     	;# 
   492  0291                     	;# 
   493  0292                     	;# 
   494  0293                     	;# 
   495  0298                     	;# 
   496  0298                     	;# 
   497  0299                     	;# 
   498  029A                     	;# 
   499  030C                     	;# 
   500  030D                     	;# 
   501  030E                     	;# 
   502  0311                     	;# 
   503  0311                     	;# 
   504  0312                     	;# 
   505  0313                     	;# 
   506  038C                     	;# 
   507  038D                     	;# 
   508  038E                     	;# 
   509  0390                     	;# 
   510  0391                     	;# 
   511  0392                     	;# 
   512  0393                     	;# 
   513  0394                     	;# 
   514  0395                     	;# 
   515  0396                     	;# 
   516  0397                     	;# 
   517  0398                     	;# 
   518  0399                     	;# 
   519  039D                     	;# 
   520  039E                     	;# 
   521  039F                     	;# 
   522  0511                     	;# 
   523  0513                     	;# 
   524  051A                     	;# 
   525  0591                     	;# 
   526  0592                     	;# 
   527  0592                     	;# 
   528  0593                     	;# 
   529  0594                     	;# 
   530  0594                     	;# 
   531  0595                     	;# 
   532  0596                     	;# 
   533  0596                     	;# 
   534  0E91                     	;# 
   535  0E92                     	;# 
   536  0E93                     	;# 
   537  0E94                     	;# 
   538  0E95                     	;# 
   539  0E96                     	;# 
   540  0E97                     	;# 
   541  0E98                     	;# 
   542  0E99                     	;# 
   543  0E9A                     	;# 
   544  0E9B                     	;# 
   545  0E9C                     	;# 
   546  0E9D                     	;# 
   547  0E9E                     	;# 
   548  0E9F                     	;# 
   549  0EA0                     	;# 
   550  0EA1                     	;# 
   551  0EA1                     	;# 
   552  0EA2                     	;# 
   553  0EA3                     	;# 
   554  0EA3                     	;# 
   555  0EA4                     	;# 
   556  0EA5                     	;# 
   557  0EA5                     	;# 
   558  0EA6                     	;# 
   559  0EA7                     	;# 
   560  0EA7                     	;# 
   561  0EA8                     	;# 
   562  0EA9                     	;# 
   563  0EAA                     	;# 
   564  0EAB                     	;# 
   565  0EAC                     	;# 
   566  0EAD                     	;# 
   567  0EAE                     	;# 
   568  0EAF                     	;# 
   569  0EB1                     	;# 
   570  0EB2                     	;# 
   571  0EB3                     	;# 
   572  0EB4                     	;# 
   573  0EB5                     	;# 
   574  0EB6                     	;# 
   575  0EB7                     	;# 
   576  0EB8                     	;# 
   577  0EB9                     	;# 
   578  0EBA                     	;# 
   579  0EBB                     	;# 
   580  0EBC                     	;# 
   581  0EBD                     	;# 
   582  0EBE                     	;# 
   583  0EBF                     	;# 
   584  0EC0                     	;# 
   585  0EC1                     	;# 
   586  0EC1                     	;# 
   587  0EC2                     	;# 
   588  0EC3                     	;# 
   589  0EC3                     	;# 
   590  0EC4                     	;# 
   591  0EC5                     	;# 
   592  0EC5                     	;# 
   593  0EC6                     	;# 
   594  0EC7                     	;# 
   595  0EC7                     	;# 
   596  0EC8                     	;# 
   597  0EC9                     	;# 
   598  0ECA                     	;# 
   599  0ECB                     	;# 
   600  0ECC                     	;# 
   601  0ECD                     	;# 
   602  0ECE                     	;# 
   603  0ECF                     	;# 
   604  0ED1                     	;# 
   605  0ED2                     	;# 
   606  0ED3                     	;# 
   607  0ED4                     	;# 
   608  0ED5                     	;# 
   609  0ED6                     	;# 
   610  0ED7                     	;# 
   611  0ED8                     	;# 
   612  0ED9                     	;# 
   613  0EDA                     	;# 
   614  0EDB                     	;# 
   615  0EDC                     	;# 
   616  0EDD                     	;# 
   617  0EDE                     	;# 
   618  0EDF                     	;# 
   619  0EE0                     	;# 
   620  0EE1                     	;# 
   621  0EE1                     	;# 
   622  0EE2                     	;# 
   623  0EE3                     	;# 
   624  0EE3                     	;# 
   625  0EE4                     	;# 
   626  0EE5                     	;# 
   627  0EE5                     	;# 
   628  0EE6                     	;# 
   629  0EE7                     	;# 
   630  0EE7                     	;# 
   631  0EE8                     	;# 
   632  0EE9                     	;# 
   633  0EEA                     	;# 
   634  0EEB                     	;# 
   635  0EEC                     	;# 
   636  0EED                     	;# 
   637  0EEE                     	;# 
   638  0EEF                     	;# 
   639  0F11                     	;# 
   640  0F12                     	;# 
   641  0F13                     	;# 
   642  0F14                     	;# 
   643  0F15                     	;# 
   644  0F16                     	;# 
   645  0F17                     	;# 
   646  0F18                     	;# 
   647  0F19                     	;# 
   648  0F1A                     	;# 
   649  0F1B                     	;# 
   650  0F1C                     	;# 
   651  0F1D                     	;# 
   652  0F1E                     	;# 
   653  0F1F                     	;# 
   654  0F20                     	;# 
   655  0F21                     	;# 
   656  0F21                     	;# 
   657  0F22                     	;# 
   658  0F23                     	;# 
   659  0F23                     	;# 
   660  0F24                     	;# 
   661  0F25                     	;# 
   662  0F25                     	;# 
   663  0F26                     	;# 
   664  0F27                     	;# 
   665  0F27                     	;# 
   666  0F28                     	;# 
   667  0F29                     	;# 
   668  0F2A                     	;# 
   669  0F2B                     	;# 
   670  0F2C                     	;# 
   671  0F2D                     	;# 
   672  0F2E                     	;# 
   673  0F2F                     	;# 
   674  0FE4                     	;# 
   675  0FE5                     	;# 
   676  0FE6                     	;# 
   677  0FE7                     	;# 
   678  0FE8                     	;# 
   679  0FE9                     	;# 
   680  0FEA                     	;# 
   681  0FEB                     	;# 
   682  0FED                     	;# 
   683  0FEE                     	;# 
   684  0FEF                     	;# 
   685  0000                     	;# 
   686  0001                     	;# 
   687  0002                     	;# 
   688  0003                     	;# 
   689  0004                     	;# 
   690  0005                     	;# 
   691  0006                     	;# 
   692  0007                     	;# 
   693  0008                     	;# 
   694  0009                     	;# 
   695  000A                     	;# 
   696  000B                     	;# 
   697  000C                     	;# 
   698  000D                     	;# 
   699  000E                     	;# 
   700  0010                     	;# 
   701  0011                     	;# 
   702  0012                     	;# 
   703  0013                     	;# 
   704  0014                     	;# 
   705  0015                     	;# 
   706  0016                     	;# 
   707  0016                     	;# 
   708  0017                     	;# 
   709  0018                     	;# 
   710  0019                     	;# 
   711  001A                     	;# 
   712  001B                     	;# 
   713  001C                     	;# 
   714  008C                     	;# 
   715  008D                     	;# 
   716  008E                     	;# 
   717  0090                     	;# 
   718  0091                     	;# 
   719  0092                     	;# 
   720  0093                     	;# 
   721  0094                     	;# 
   722  0095                     	;# 
   723  0096                     	;# 
   724  0097                     	;# 
   725  0098                     	;# 
   726  0099                     	;# 
   727  009A                     	;# 
   728  009B                     	;# 
   729  009B                     	;# 
   730  009C                     	;# 
   731  009D                     	;# 
   732  009E                     	;# 
   733  009F                     	;# 
   734  010C                     	;# 
   735  010D                     	;# 
   736  010E                     	;# 
   737  0111                     	;# 
   738  0112                     	;# 
   739  0113                     	;# 
   740  0114                     	;# 
   741  0115                     	;# 
   742  0116                     	;# 
   743  0117                     	;# 
   744  0118                     	;# 
   745  0119                     	;# 
   746  011A                     	;# 
   747  011B                     	;# 
   748  011C                     	;# 
   749  011D                     	;# 
   750  011D                     	;# 
   751  011D                     	;# 
   752  011E                     	;# 
   753  011F                     	;# 
   754  018C                     	;# 
   755  018D                     	;# 
   756  018E                     	;# 
   757  0191                     	;# 
   758  0191                     	;# 
   759  0192                     	;# 
   760  0193                     	;# 
   761  0193                     	;# 
   762  0193                     	;# 
   763  0194                     	;# 
   764  0195                     	;# 
   765  0196                     	;# 
   766  0197                     	;# 
   767  0199                     	;# 
   768  0199                     	;# 
   769  0199                     	;# 
   770  019A                     	;# 
   771  019A                     	;# 
   772  019A                     	;# 
   773  019B                     	;# 
   774  019B                     	;# 
   775  019B                     	;# 
   776  019B                     	;# 
   777  019B                     	;# 
   778  019C                     	;# 
   779  019C                     	;# 
   780  019C                     	;# 
   781  019D                     	;# 
   782  019D                     	;# 
   783  019D                     	;# 
   784  019E                     	;# 
   785  019E                     	;# 
   786  019E                     	;# 
   787  019F                     	;# 
   788  019F                     	;# 
   789  019F                     	;# 
   790  019F                     	;# 
   791  019F                     	;# 
   792  020C                     	;# 
   793  020D                     	;# 
   794  020E                     	;# 
   795  0210                     	;# 
   796  0211                     	;# 
   797  0211                     	;# 
   798  0212                     	;# 
   799  0212                     	;# 
   800  0213                     	;# 
   801  0213                     	;# 
   802  0214                     	;# 
   803  0214                     	;# 
   804  0215                     	;# 
   805  0215                     	;# 
   806  0215                     	;# 
   807  0215                     	;# 
   808  0216                     	;# 
   809  0216                     	;# 
   810  0217                     	;# 
   811  0217                     	;# 
   812  028C                     	;# 
   813  028D                     	;# 
   814  028E                     	;# 
   815  0291                     	;# 
   816  0291                     	;# 
   817  0292                     	;# 
   818  0293                     	;# 
   819  0298                     	;# 
   820  0298                     	;# 
   821  0299                     	;# 
   822  029A                     	;# 
   823  030C                     	;# 
   824  030D                     	;# 
   825  030E                     	;# 
   826  0311                     	;# 
   827  0311                     	;# 
   828  0312                     	;# 
   829  0313                     	;# 
   830  038C                     	;# 
   831  038D                     	;# 
   832  038E                     	;# 
   833  0390                     	;# 
   834  0391                     	;# 
   835  0392                     	;# 
   836  0393                     	;# 
   837  0394                     	;# 
   838  0395                     	;# 
   839  0396                     	;# 
   840  0397                     	;# 
   841  0398                     	;# 
   842  0399                     	;# 
   843  039D                     	;# 
   844  039E                     	;# 
   845  039F                     	;# 
   846  0511                     	;# 
   847  0513                     	;# 
   848  051A                     	;# 
   849  0591                     	;# 
   850  0592                     	;# 
   851  0592                     	;# 
   852  0593                     	;# 
   853  0594                     	;# 
   854  0594                     	;# 
   855  0595                     	;# 
   856  0596                     	;# 
   857  0596                     	;# 
   858  0E91                     	;# 
   859  0E92                     	;# 
   860  0E93                     	;# 
   861  0E94                     	;# 
   862  0E95                     	;# 
   863  0E96                     	;# 
   864  0E97                     	;# 
   865  0E98                     	;# 
   866  0E99                     	;# 
   867  0E9A                     	;# 
   868  0E9B                     	;# 
   869  0E9C                     	;# 
   870  0E9D                     	;# 
   871  0E9E                     	;# 
   872  0E9F                     	;# 
   873  0EA0                     	;# 
   874  0EA1                     	;# 
   875  0EA1                     	;# 
   876  0EA2                     	;# 
   877  0EA3                     	;# 
   878  0EA3                     	;# 
   879  0EA4                     	;# 
   880  0EA5                     	;# 
   881  0EA5                     	;# 
   882  0EA6                     	;# 
   883  0EA7                     	;# 
   884  0EA7                     	;# 
   885  0EA8                     	;# 
   886  0EA9                     	;# 
   887  0EAA                     	;# 
   888  0EAB                     	;# 
   889  0EAC                     	;# 
   890  0EAD                     	;# 
   891  0EAE                     	;# 
   892  0EAF                     	;# 
   893  0EB1                     	;# 
   894  0EB2                     	;# 
   895  0EB3                     	;# 
   896  0EB4                     	;# 
   897  0EB5                     	;# 
   898  0EB6                     	;# 
   899  0EB7                     	;# 
   900  0EB8                     	;# 
   901  0EB9                     	;# 
   902  0EBA                     	;# 
   903  0EBB                     	;# 
   904  0EBC                     	;# 
   905  0EBD                     	;# 
   906  0EBE                     	;# 
   907  0EBF                     	;# 
   908  0EC0                     	;# 
   909  0EC1                     	;# 
   910  0EC1                     	;# 
   911  0EC2                     	;# 
   912  0EC3                     	;# 
   913  0EC3                     	;# 
   914  0EC4                     	;# 
   915  0EC5                     	;# 
   916  0EC5                     	;# 
   917  0EC6                     	;# 
   918  0EC7                     	;# 
   919  0EC7                     	;# 
   920  0EC8                     	;# 
   921  0EC9                     	;# 
   922  0ECA                     	;# 
   923  0ECB                     	;# 
   924  0ECC                     	;# 
   925  0ECD                     	;# 
   926  0ECE                     	;# 
   927  0ECF                     	;# 
   928  0ED1                     	;# 
   929  0ED2                     	;# 
   930  0ED3                     	;# 
   931  0ED4                     	;# 
   932  0ED5                     	;# 
   933  0ED6                     	;# 
   934  0ED7                     	;# 
   935  0ED8                     	;# 
   936  0ED9                     	;# 
   937  0EDA                     	;# 
   938  0EDB                     	;# 
   939  0EDC                     	;# 
   940  0EDD                     	;# 
   941  0EDE                     	;# 
   942  0EDF                     	;# 
   943  0EE0                     	;# 
   944  0EE1                     	;# 
   945  0EE1                     	;# 
   946  0EE2                     	;# 
   947  0EE3                     	;# 
   948  0EE3                     	;# 
   949  0EE4                     	;# 
   950  0EE5                     	;# 
   951  0EE5                     	;# 
   952  0EE6                     	;# 
   953  0EE7                     	;# 
   954  0EE7                     	;# 
   955  0EE8                     	;# 
   956  0EE9                     	;# 
   957  0EEA                     	;# 
   958  0EEB                     	;# 
   959  0EEC                     	;# 
   960  0EED                     	;# 
   961  0EEE                     	;# 
   962  0EEF                     	;# 
   963  0F11                     	;# 
   964  0F12                     	;# 
   965  0F13                     	;# 
   966  0F14                     	;# 
   967  0F15                     	;# 
   968  0F16                     	;# 
   969  0F17                     	;# 
   970  0F18                     	;# 
   971  0F19                     	;# 
   972  0F1A                     	;# 
   973  0F1B                     	;# 
   974  0F1C                     	;# 
   975  0F1D                     	;# 
   976  0F1E                     	;# 
   977  0F1F                     	;# 
   978  0F20                     	;# 
   979  0F21                     	;# 
   980  0F21                     	;# 
   981  0F22                     	;# 
   982  0F23                     	;# 
   983  0F23                     	;# 
   984  0F24                     	;# 
   985  0F25                     	;# 
   986  0F25                     	;# 
   987  0F26                     	;# 
   988  0F27                     	;# 
   989  0F27                     	;# 
   990  0F28                     	;# 
   991  0F29                     	;# 
   992  0F2A                     	;# 
   993  0F2B                     	;# 
   994  0F2C                     	;# 
   995  0F2D                     	;# 
   996  0F2E                     	;# 
   997  0F2F                     	;# 
   998  0FE4                     	;# 
   999  0FE5                     	;# 
  1000  0FE6                     	;# 
  1001  0FE7                     	;# 
  1002  0FE8                     	;# 
  1003  0FE9                     	;# 
  1004  0FEA                     	;# 
  1005  0FEB                     	;# 
  1006  0FED                     	;# 
  1007  0FEE                     	;# 
  1008  0FEF                     	;# 
  1009  0000                     	;# 
  1010  0001                     	;# 
  1011  0002                     	;# 
  1012  0003                     	;# 
  1013  0004                     	;# 
  1014  0005                     	;# 
  1015  0006                     	;# 
  1016  0007                     	;# 
  1017  0008                     	;# 
  1018  0009                     	;# 
  1019  000A                     	;# 
  1020  000B                     	;# 
  1021  000C                     	;# 
  1022  000D                     	;# 
  1023  000E                     	;# 
  1024  0010                     	;# 
  1025  0011                     	;# 
  1026  0012                     	;# 
  1027  0013                     	;# 
  1028  0014                     	;# 
  1029  0015                     	;# 
  1030  0016                     	;# 
  1031  0016                     	;# 
  1032  0017                     	;# 
  1033  0018                     	;# 
  1034  0019                     	;# 
  1035  001A                     	;# 
  1036  001B                     	;# 
  1037  001C                     	;# 
  1038  008C                     	;# 
  1039  008D                     	;# 
  1040  008E                     	;# 
  1041  0090                     	;# 
  1042  0091                     	;# 
  1043  0092                     	;# 
  1044  0093                     	;# 
  1045  0094                     	;# 
  1046  0095                     	;# 
  1047  0096                     	;# 
  1048  0097                     	;# 
  1049  0098                     	;# 
  1050  0099                     	;# 
  1051  009A                     	;# 
  1052  009B                     	;# 
  1053  009B                     	;# 
  1054  009C                     	;# 
  1055  009D                     	;# 
  1056  009E                     	;# 
  1057  009F                     	;# 
  1058  010C                     	;# 
  1059  010D                     	;# 
  1060  010E                     	;# 
  1061  0111                     	;# 
  1062  0112                     	;# 
  1063  0113                     	;# 
  1064  0114                     	;# 
  1065  0115                     	;# 
  1066  0116                     	;# 
  1067  0117                     	;# 
  1068  0118                     	;# 
  1069  0119                     	;# 
  1070  011A                     	;# 
  1071  011B                     	;# 
  1072  011C                     	;# 
  1073  011D                     	;# 
  1074  011D                     	;# 
  1075  011D                     	;# 
  1076  011E                     	;# 
  1077  011F                     	;# 
  1078  018C                     	;# 
  1079  018D                     	;# 
  1080  018E                     	;# 
  1081  0191                     	;# 
  1082  0191                     	;# 
  1083  0192                     	;# 
  1084  0193                     	;# 
  1085  0193                     	;# 
  1086  0193                     	;# 
  1087  0194                     	;# 
  1088  0195                     	;# 
  1089  0196                     	;# 
  1090  0197                     	;# 
  1091  0199                     	;# 
  1092  0199                     	;# 
  1093  0199                     	;# 
  1094  019A                     	;# 
  1095  019A                     	;# 
  1096  019A                     	;# 
  1097  019B                     	;# 
  1098  019B                     	;# 
  1099  019B                     	;# 
  1100  019B                     	;# 
  1101  019B                     	;# 
  1102  019C                     	;# 
  1103  019C                     	;# 
  1104  019C                     	;# 
  1105  019D                     	;# 
  1106  019D                     	;# 
  1107  019D                     	;# 
  1108  019E                     	;# 
  1109  019E                     	;# 
  1110  019E                     	;# 
  1111  019F                     	;# 
  1112  019F                     	;# 
  1113  019F                     	;# 
  1114  019F                     	;# 
  1115  019F                     	;# 
  1116  020C                     	;# 
  1117  020D                     	;# 
  1118  020E                     	;# 
  1119  0210                     	;# 
  1120  0211                     	;# 
  1121  0211                     	;# 
  1122  0212                     	;# 
  1123  0212                     	;# 
  1124  0213                     	;# 
  1125  0213                     	;# 
  1126  0214                     	;# 
  1127  0214                     	;# 
  1128  0215                     	;# 
  1129  0215                     	;# 
  1130  0215                     	;# 
  1131  0215                     	;# 
  1132  0216                     	;# 
  1133  0216                     	;# 
  1134  0217                     	;# 
  1135  0217                     	;# 
  1136  028C                     	;# 
  1137  028D                     	;# 
  1138  028E                     	;# 
  1139  0291                     	;# 
  1140  0291                     	;# 
  1141  0292                     	;# 
  1142  0293                     	;# 
  1143  0298                     	;# 
  1144  0298                     	;# 
  1145  0299                     	;# 
  1146  029A                     	;# 
  1147  030C                     	;# 
  1148  030D                     	;# 
  1149  030E                     	;# 
  1150  0311                     	;# 
  1151  0311                     	;# 
  1152  0312                     	;# 
  1153  0313                     	;# 
  1154  038C                     	;# 
  1155  038D                     	;# 
  1156  038E                     	;# 
  1157  0390                     	;# 
  1158  0391                     	;# 
  1159  0392                     	;# 
  1160  0393                     	;# 
  1161  0394                     	;# 
  1162  0395                     	;# 
  1163  0396                     	;# 
  1164  0397                     	;# 
  1165  0398                     	;# 
  1166  0399                     	;# 
  1167  039D                     	;# 
  1168  039E                     	;# 
  1169  039F                     	;# 
  1170  0511                     	;# 
  1171  0513                     	;# 
  1172  051A                     	;# 
  1173  0591                     	;# 
  1174  0592                     	;# 
  1175  0592                     	;# 
  1176  0593                     	;# 
  1177  0594                     	;# 
  1178  0594                     	;# 
  1179  0595                     	;# 
  1180  0596                     	;# 
  1181  0596                     	;# 
  1182  0E91                     	;# 
  1183  0E92                     	;# 
  1184  0E93                     	;# 
  1185  0E94                     	;# 
  1186  0E95                     	;# 
  1187  0E96                     	;# 
  1188  0E97                     	;# 
  1189  0E98                     	;# 
  1190  0E99                     	;# 
  1191  0E9A                     	;# 
  1192  0E9B                     	;# 
  1193  0E9C                     	;# 
  1194  0E9D                     	;# 
  1195  0E9E                     	;# 
  1196  0E9F                     	;# 
  1197  0EA0                     	;# 
  1198  0EA1                     	;# 
  1199  0EA1                     	;# 
  1200  0EA2                     	;# 
  1201  0EA3                     	;# 
  1202  0EA3                     	;# 
  1203  0EA4                     	;# 
  1204  0EA5                     	;# 
  1205  0EA5                     	;# 
  1206  0EA6                     	;# 
  1207  0EA7                     	;# 
  1208  0EA7                     	;# 
  1209  0EA8                     	;# 
  1210  0EA9                     	;# 
  1211  0EAA                     	;# 
  1212  0EAB                     	;# 
  1213  0EAC                     	;# 
  1214  0EAD                     	;# 
  1215  0EAE                     	;# 
  1216  0EAF                     	;# 
  1217  0EB1                     	;# 
  1218  0EB2                     	;# 
  1219  0EB3                     	;# 
  1220  0EB4                     	;# 
  1221  0EB5                     	;# 
  1222  0EB6                     	;# 
  1223  0EB7                     	;# 
  1224  0EB8                     	;# 
  1225  0EB9                     	;# 
  1226  0EBA                     	;# 
  1227  0EBB                     	;# 
  1228  0EBC                     	;# 
  1229  0EBD                     	;# 
  1230  0EBE                     	;# 
  1231  0EBF                     	;# 
  1232  0EC0                     	;# 
  1233  0EC1                     	;# 
  1234  0EC1                     	;# 
  1235  0EC2                     	;# 
  1236  0EC3                     	;# 
  1237  0EC3                     	;# 
  1238  0EC4                     	;# 
  1239  0EC5                     	;# 
  1240  0EC5                     	;# 
  1241  0EC6                     	;# 
  1242  0EC7                     	;# 
  1243  0EC7                     	;# 
  1244  0EC8                     	;# 
  1245  0EC9                     	;# 
  1246  0ECA                     	;# 
  1247  0ECB                     	;# 
  1248  0ECC                     	;# 
  1249  0ECD                     	;# 
  1250  0ECE                     	;# 
  1251  0ECF                     	;# 
  1252  0ED1                     	;# 
  1253  0ED2                     	;# 
  1254  0ED3                     	;# 
  1255  0ED4                     	;# 
  1256  0ED5                     	;# 
  1257  0ED6                     	;# 
  1258  0ED7                     	;# 
  1259  0ED8                     	;# 
  1260  0ED9                     	;# 
  1261  0EDA                     	;# 
  1262  0EDB                     	;# 
  1263  0EDC                     	;# 
  1264  0EDD                     	;# 
  1265  0EDE                     	;# 
  1266  0EDF                     	;# 
  1267  0EE0                     	;# 
  1268  0EE1                     	;# 
  1269  0EE1                     	;# 
  1270  0EE2                     	;# 
  1271  0EE3                     	;# 
  1272  0EE3                     	;# 
  1273  0EE4                     	;# 
  1274  0EE5                     	;# 
  1275  0EE5                     	;# 
  1276  0EE6                     	;# 
  1277  0EE7                     	;# 
  1278  0EE7                     	;# 
  1279  0EE8                     	;# 
  1280  0EE9                     	;# 
  1281  0EEA                     	;# 
  1282  0EEB                     	;# 
  1283  0EEC                     	;# 
  1284  0EED                     	;# 
  1285  0EEE                     	;# 
  1286  0EEF                     	;# 
  1287  0F11                     	;# 
  1288  0F12                     	;# 
  1289  0F13                     	;# 
  1290  0F14                     	;# 
  1291  0F15                     	;# 
  1292  0F16                     	;# 
  1293  0F17                     	;# 
  1294  0F18                     	;# 
  1295  0F19                     	;# 
  1296  0F1A                     	;# 
  1297  0F1B                     	;# 
  1298  0F1C                     	;# 
  1299  0F1D                     	;# 
  1300  0F1E                     	;# 
  1301  0F1F                     	;# 
  1302  0F20                     	;# 
  1303  0F21                     	;# 
  1304  0F21                     	;# 
  1305  0F22                     	;# 
  1306  0F23                     	;# 
  1307  0F23                     	;# 
  1308  0F24                     	;# 
  1309  0F25                     	;# 
  1310  0F25                     	;# 
  1311  0F26                     	;# 
  1312  0F27                     	;# 
  1313  0F27                     	;# 
  1314  0F28                     	;# 
  1315  0F29                     	;# 
  1316  0F2A                     	;# 
  1317  0F2B                     	;# 
  1318  0F2C                     	;# 
  1319  0F2D                     	;# 
  1320  0F2E                     	;# 
  1321  0F2F                     	;# 
  1322  0FE4                     	;# 
  1323  0FE5                     	;# 
  1324  0FE6                     	;# 
  1325  0FE7                     	;# 
  1326  0FE8                     	;# 
  1327  0FE9                     	;# 
  1328  0FEA                     	;# 
  1329  0FEB                     	;# 
  1330  0FED                     	;# 
  1331  0FEE                     	;# 
  1332  0FEF                     	;# 
  1333  0000                     	;# 
  1334  0001                     	;# 
  1335  0002                     	;# 
  1336  0003                     	;# 
  1337  0004                     	;# 
  1338  0005                     	;# 
  1339  0006                     	;# 
  1340  0007                     	;# 
  1341  0008                     	;# 
  1342  0009                     	;# 
  1343  000A                     	;# 
  1344  000B                     	;# 
  1345  000C                     	;# 
  1346  000D                     	;# 
  1347  000E                     	;# 
  1348  0010                     	;# 
  1349  0011                     	;# 
  1350  0012                     	;# 
  1351  0013                     	;# 
  1352  0014                     	;# 
  1353  0015                     	;# 
  1354  0016                     	;# 
  1355  0016                     	;# 
  1356  0017                     	;# 
  1357  0018                     	;# 
  1358  0019                     	;# 
  1359  001A                     	;# 
  1360  001B                     	;# 
  1361  001C                     	;# 
  1362  008C                     	;# 
  1363  008D                     	;# 
  1364  008E                     	;# 
  1365  0090                     	;# 
  1366  0091                     	;# 
  1367  0092                     	;# 
  1368  0093                     	;# 
  1369  0094                     	;# 
  1370  0095                     	;# 
  1371  0096                     	;# 
  1372  0097                     	;# 
  1373  0098                     	;# 
  1374  0099                     	;# 
  1375  009A                     	;# 
  1376  009B                     	;# 
  1377  009B                     	;# 
  1378  009C                     	;# 
  1379  009D                     	;# 
  1380  009E                     	;# 
  1381  009F                     	;# 
  1382  010C                     	;# 
  1383  010D                     	;# 
  1384  010E                     	;# 
  1385  0111                     	;# 
  1386  0112                     	;# 
  1387  0113                     	;# 
  1388  0114                     	;# 
  1389  0115                     	;# 
  1390  0116                     	;# 
  1391  0117                     	;# 
  1392  0118                     	;# 
  1393  0119                     	;# 
  1394  011A                     	;# 
  1395  011B                     	;# 
  1396  011C                     	;# 
  1397  011D                     	;# 
  1398  011D                     	;# 
  1399  011D                     	;# 
  1400  011E                     	;# 
  1401  011F                     	;# 
  1402  018C                     	;# 
  1403  018D                     	;# 
  1404  018E                     	;# 
  1405  0191                     	;# 
  1406  0191                     	;# 
  1407  0192                     	;# 
  1408  0193                     	;# 
  1409  0193                     	;# 
  1410  0193                     	;# 
  1411  0194                     	;# 
  1412  0195                     	;# 
  1413  0196                     	;# 
  1414  0197                     	;# 
  1415  0199                     	;# 
  1416  0199                     	;# 
  1417  0199                     	;# 
  1418  019A                     	;# 
  1419  019A                     	;# 
  1420  019A                     	;# 
  1421  019B                     	;# 
  1422  019B                     	;# 
  1423  019B                     	;# 
  1424  019B                     	;# 
  1425  019B                     	;# 
  1426  019C                     	;# 
  1427  019C                     	;# 
  1428  019C                     	;# 
  1429  019D                     	;# 
  1430  019D                     	;# 
  1431  019D                     	;# 
  1432  019E                     	;# 
  1433  019E                     	;# 
  1434  019E                     	;# 
  1435  019F                     	;# 
  1436  019F                     	;# 
  1437  019F                     	;# 
  1438  019F                     	;# 
  1439  019F                     	;# 
  1440  020C                     	;# 
  1441  020D                     	;# 
  1442  020E                     	;# 
  1443  0210                     	;# 
  1444  0211                     	;# 
  1445  0211                     	;# 
  1446  0212                     	;# 
  1447  0212                     	;# 
  1448  0213                     	;# 
  1449  0213                     	;# 
  1450  0214                     	;# 
  1451  0214                     	;# 
  1452  0215                     	;# 
  1453  0215                     	;# 
  1454  0215                     	;# 
  1455  0215                     	;# 
  1456  0216                     	;# 
  1457  0216                     	;# 
  1458  0217                     	;# 
  1459  0217                     	;# 
  1460  028C                     	;# 
  1461  028D                     	;# 
  1462  028E                     	;# 
  1463  0291                     	;# 
  1464  0291                     	;# 
  1465  0292                     	;# 
  1466  0293                     	;# 
  1467  0298                     	;# 
  1468  0298                     	;# 
  1469  0299                     	;# 
  1470  029A                     	;# 
  1471  030C                     	;# 
  1472  030D                     	;# 
  1473  030E                     	;# 
  1474  0311                     	;# 
  1475  0311                     	;# 
  1476  0312                     	;# 
  1477  0313                     	;# 
  1478  038C                     	;# 
  1479  038D                     	;# 
  1480  038E                     	;# 
  1481  0390                     	;# 
  1482  0391                     	;# 
  1483  0392                     	;# 
  1484  0393                     	;# 
  1485  0394                     	;# 
  1486  0395                     	;# 
  1487  0396                     	;# 
  1488  0397                     	;# 
  1489  0398                     	;# 
  1490  0399                     	;# 
  1491  039D                     	;# 
  1492  039E                     	;# 
  1493  039F                     	;# 
  1494  0511                     	;# 
  1495  0513                     	;# 
  1496  051A                     	;# 
  1497  0591                     	;# 
  1498  0592                     	;# 
  1499  0592                     	;# 
  1500  0593                     	;# 
  1501  0594                     	;# 
  1502  0594                     	;# 
  1503  0595                     	;# 
  1504  0596                     	;# 
  1505  0596                     	;# 
  1506  0E91                     	;# 
  1507  0E92                     	;# 
  1508  0E93                     	;# 
  1509  0E94                     	;# 
  1510  0E95                     	;# 
  1511  0E96                     	;# 
  1512  0E97                     	;# 
  1513  0E98                     	;# 
  1514  0E99                     	;# 
  1515  0E9A                     	;# 
  1516  0E9B                     	;# 
  1517  0E9C                     	;# 
  1518  0E9D                     	;# 
  1519  0E9E                     	;# 
  1520  0E9F                     	;# 
  1521  0EA0                     	;# 
  1522  0EA1                     	;# 
  1523  0EA1                     	;# 
  1524  0EA2                     	;# 
  1525  0EA3                     	;# 
  1526  0EA3                     	;# 
  1527  0EA4                     	;# 
  1528  0EA5                     	;# 
  1529  0EA5                     	;# 
  1530  0EA6                     	;# 
  1531  0EA7                     	;# 
  1532  0EA7                     	;# 
  1533  0EA8                     	;# 
  1534  0EA9                     	;# 
  1535  0EAA                     	;# 
  1536  0EAB                     	;# 
  1537  0EAC                     	;# 
  1538  0EAD                     	;# 
  1539  0EAE                     	;# 
  1540  0EAF                     	;# 
  1541  0EB1                     	;# 
  1542  0EB2                     	;# 
  1543  0EB3                     	;# 
  1544  0EB4                     	;# 
  1545  0EB5                     	;# 
  1546  0EB6                     	;# 
  1547  0EB7                     	;# 
  1548  0EB8                     	;# 
  1549  0EB9                     	;# 
  1550  0EBA                     	;# 
  1551  0EBB                     	;# 
  1552  0EBC                     	;# 
  1553  0EBD                     	;# 
  1554  0EBE                     	;# 
  1555  0EBF                     	;# 
  1556  0EC0                     	;# 
  1557  0EC1                     	;# 
  1558  0EC1                     	;# 
  1559  0EC2                     	;# 
  1560  0EC3                     	;# 
  1561  0EC3                     	;# 
  1562  0EC4                     	;# 
  1563  0EC5                     	;# 
  1564  0EC5                     	;# 
  1565  0EC6                     	;# 
  1566  0EC7                     	;# 
  1567  0EC7                     	;# 
  1568  0EC8                     	;# 
  1569  0EC9                     	;# 
  1570  0ECA                     	;# 
  1571  0ECB                     	;# 
  1572  0ECC                     	;# 
  1573  0ECD                     	;# 
  1574  0ECE                     	;# 
  1575  0ECF                     	;# 
  1576  0ED1                     	;# 
  1577  0ED2                     	;# 
  1578  0ED3                     	;# 
  1579  0ED4                     	;# 
  1580  0ED5                     	;# 
  1581  0ED6                     	;# 
  1582  0ED7                     	;# 
  1583  0ED8                     	;# 
  1584  0ED9                     	;# 
  1585  0EDA                     	;# 
  1586  0EDB                     	;# 
  1587  0EDC                     	;# 
  1588  0EDD                     	;# 
  1589  0EDE                     	;# 
  1590  0EDF                     	;# 
  1591  0EE0                     	;# 
  1592  0EE1                     	;# 
  1593  0EE1                     	;# 
  1594  0EE2                     	;# 
  1595  0EE3                     	;# 
  1596  0EE3                     	;# 
  1597  0EE4                     	;# 
  1598  0EE5                     	;# 
  1599  0EE5                     	;# 
  1600  0EE6                     	;# 
  1601  0EE7                     	;# 
  1602  0EE7                     	;# 
  1603  0EE8                     	;# 
  1604  0EE9                     	;# 
  1605  0EEA                     	;# 
  1606  0EEB                     	;# 
  1607  0EEC                     	;# 
  1608  0EED                     	;# 
  1609  0EEE                     	;# 
  1610  0EEF                     	;# 
  1611  0F11                     	;# 
  1612  0F12                     	;# 
  1613  0F13                     	;# 
  1614  0F14                     	;# 
  1615  0F15                     	;# 
  1616  0F16                     	;# 
  1617  0F17                     	;# 
  1618  0F18                     	;# 
  1619  0F19                     	;# 
  1620  0F1A                     	;# 
  1621  0F1B                     	;# 
  1622  0F1C                     	;# 
  1623  0F1D                     	;# 
  1624  0F1E                     	;# 
  1625  0F1F                     	;# 
  1626  0F20                     	;# 
  1627  0F21                     	;# 
  1628  0F21                     	;# 
  1629  0F22                     	;# 
  1630  0F23                     	;# 
  1631  0F23                     	;# 
  1632  0F24                     	;# 
  1633  0F25                     	;# 
  1634  0F25                     	;# 
  1635  0F26                     	;# 
  1636  0F27                     	;# 
  1637  0F27                     	;# 
  1638  0F28                     	;# 
  1639  0F29                     	;# 
  1640  0F2A                     	;# 
  1641  0F2B                     	;# 
  1642  0F2C                     	;# 
  1643  0F2D                     	;# 
  1644  0F2E                     	;# 
  1645  0F2F                     	;# 
  1646  0FE4                     	;# 
  1647  0FE5                     	;# 
  1648  0FE6                     	;# 
  1649  0FE7                     	;# 
  1650  0FE8                     	;# 
  1651  0FE9                     	;# 
  1652  0FEA                     	;# 
  1653  0FEB                     	;# 
  1654  0FED                     	;# 
  1655  0FEE                     	;# 
  1656  0FEF                     	;# 
  1657  0000                     	;# 
  1658  0001                     	;# 
  1659  0002                     	;# 
  1660  0003                     	;# 
  1661  0004                     	;# 
  1662  0005                     	;# 
  1663  0006                     	;# 
  1664  0007                     	;# 
  1665  0008                     	;# 
  1666  0009                     	;# 
  1667  000A                     	;# 
  1668  000B                     	;# 
  1669  000C                     	;# 
  1670  000D                     	;# 
  1671  000E                     	;# 
  1672  0010                     	;# 
  1673  0011                     	;# 
  1674  0012                     	;# 
  1675  0013                     	;# 
  1676  0014                     	;# 
  1677  0015                     	;# 
  1678  0016                     	;# 
  1679  0016                     	;# 
  1680  0017                     	;# 
  1681  0018                     	;# 
  1682  0019                     	;# 
  1683  001A                     	;# 
  1684  001B                     	;# 
  1685  001C                     	;# 
  1686  008C                     	;# 
  1687  008D                     	;# 
  1688  008E                     	;# 
  1689  0090                     	;# 
  1690  0091                     	;# 
  1691  0092                     	;# 
  1692  0093                     	;# 
  1693  0094                     	;# 
  1694  0095                     	;# 
  1695  0096                     	;# 
  1696  0097                     	;# 
  1697  0098                     	;# 
  1698  0099                     	;# 
  1699  009A                     	;# 
  1700  009B                     	;# 
  1701  009B                     	;# 
  1702  009C                     	;# 
  1703  009D                     	;# 
  1704  009E                     	;# 
  1705  009F                     	;# 
  1706  010C                     	;# 
  1707  010D                     	;# 
  1708  010E                     	;# 
  1709  0111                     	;# 
  1710  0112                     	;# 
  1711  0113                     	;# 
  1712  0114                     	;# 
  1713  0115                     	;# 
  1714  0116                     	;# 
  1715  0117                     	;# 
  1716  0118                     	;# 
  1717  0119                     	;# 
  1718  011A                     	;# 
  1719  011B                     	;# 
  1720  011C                     	;# 
  1721  011D                     	;# 
  1722  011D                     	;# 
  1723  011D                     	;# 
  1724  011E                     	;# 
  1725  011F                     	;# 
  1726  018C                     	;# 
  1727  018D                     	;# 
  1728  018E                     	;# 
  1729  0191                     	;# 
  1730  0191                     	;# 
  1731  0192                     	;# 
  1732  0193                     	;# 
  1733  0193                     	;# 
  1734  0193                     	;# 
  1735  0194                     	;# 
  1736  0195                     	;# 
  1737  0196                     	;# 
  1738  0197                     	;# 
  1739  0199                     	;# 
  1740  0199                     	;# 
  1741  0199                     	;# 
  1742  019A                     	;# 
  1743  019A                     	;# 
  1744  019A                     	;# 
  1745  019B                     	;# 
  1746  019B                     	;# 
  1747  019B                     	;# 
  1748  019B                     	;# 
  1749  019B                     	;# 
  1750  019C                     	;# 
  1751  019C                     	;# 
  1752  019C                     	;# 
  1753  019D                     	;# 
  1754  019D                     	;# 
  1755  019D                     	;# 
  1756  019E                     	;# 
  1757  019E                     	;# 
  1758  019E                     	;# 
  1759  019F                     	;# 
  1760  019F                     	;# 
  1761  019F                     	;# 
  1762  019F                     	;# 
  1763  019F                     	;# 
  1764  020C                     	;# 
  1765  020D                     	;# 
  1766  020E                     	;# 
  1767  0210                     	;# 
  1768  0211                     	;# 
  1769  0211                     	;# 
  1770  0212                     	;# 
  1771  0212                     	;# 
  1772  0213                     	;# 
  1773  0213                     	;# 
  1774  0214                     	;# 
  1775  0214                     	;# 
  1776  0215                     	;# 
  1777  0215                     	;# 
  1778  0215                     	;# 
  1779  0215                     	;# 
  1780  0216                     	;# 
  1781  0216                     	;# 
  1782  0217                     	;# 
  1783  0217                     	;# 
  1784  028C                     	;# 
  1785  028D                     	;# 
  1786  028E                     	;# 
  1787  0291                     	;# 
  1788  0291                     	;# 
  1789  0292                     	;# 
  1790  0293                     	;# 
  1791  0298                     	;# 
  1792  0298                     	;# 
  1793  0299                     	;# 
  1794  029A                     	;# 
  1795  030C                     	;# 
  1796  030D                     	;# 
  1797  030E                     	;# 
  1798  0311                     	;# 
  1799  0311                     	;# 
  1800  0312                     	;# 
  1801  0313                     	;# 
  1802  038C                     	;# 
  1803  038D                     	;# 
  1804  038E                     	;# 
  1805  0390                     	;# 
  1806  0391                     	;# 
  1807  0392                     	;# 
  1808  0393                     	;# 
  1809  0394                     	;# 
  1810  0395                     	;# 
  1811  0396                     	;# 
  1812  0397                     	;# 
  1813  0398                     	;# 
  1814  0399                     	;# 
  1815  039D                     	;# 
  1816  039E                     	;# 
  1817  039F                     	;# 
  1818  0511                     	;# 
  1819  0513                     	;# 
  1820  051A                     	;# 
  1821  0591                     	;# 
  1822  0592                     	;# 
  1823  0592                     	;# 
  1824  0593                     	;# 
  1825  0594                     	;# 
  1826  0594                     	;# 
  1827  0595                     	;# 
  1828  0596                     	;# 
  1829  0596                     	;# 
  1830  0E91                     	;# 
  1831  0E92                     	;# 
  1832  0E93                     	;# 
  1833  0E94                     	;# 
  1834  0E95                     	;# 
  1835  0E96                     	;# 
  1836  0E97                     	;# 
  1837  0E98                     	;# 
  1838  0E99                     	;# 
  1839  0E9A                     	;# 
  1840  0E9B                     	;# 
  1841  0E9C                     	;# 
  1842  0E9D                     	;# 
  1843  0E9E                     	;# 
  1844  0E9F                     	;# 
  1845  0EA0                     	;# 
  1846  0EA1                     	;# 
  1847  0EA1                     	;# 
  1848  0EA2                     	;# 
  1849  0EA3                     	;# 
  1850  0EA3                     	;# 
  1851  0EA4                     	;# 
  1852  0EA5                     	;# 
  1853  0EA5                     	;# 
  1854  0EA6                     	;# 
  1855  0EA7                     	;# 
  1856  0EA7                     	;# 
  1857  0EA8                     	;# 
  1858  0EA9                     	;# 
  1859  0EAA                     	;# 
  1860  0EAB                     	;# 
  1861  0EAC                     	;# 
  1862  0EAD                     	;# 
  1863  0EAE                     	;# 
  1864  0EAF                     	;# 
  1865  0EB1                     	;# 
  1866  0EB2                     	;# 
  1867  0EB3                     	;# 
  1868  0EB4                     	;# 
  1869  0EB5                     	;# 
  1870  0EB6                     	;# 
  1871  0EB7                     	;# 
  1872  0EB8                     	;# 
  1873  0EB9                     	;# 
  1874  0EBA                     	;# 
  1875  0EBB                     	;# 
  1876  0EBC                     	;# 
  1877  0EBD                     	;# 
  1878  0EBE                     	;# 
  1879  0EBF                     	;# 
  1880  0EC0                     	;# 
  1881  0EC1                     	;# 
  1882  0EC1                     	;# 
  1883  0EC2                     	;# 
  1884  0EC3                     	;# 
  1885  0EC3                     	;# 
  1886  0EC4                     	;# 
  1887  0EC5                     	;# 
  1888  0EC5                     	;# 
  1889  0EC6                     	;# 
  1890  0EC7                     	;# 
  1891  0EC7                     	;# 
  1892  0EC8                     	;# 
  1893  0EC9                     	;# 
  1894  0ECA                     	;# 
  1895  0ECB                     	;# 
  1896  0ECC                     	;# 
  1897  0ECD                     	;# 
  1898  0ECE                     	;# 
  1899  0ECF                     	;# 
  1900  0ED1                     	;# 
  1901  0ED2                     	;# 
  1902  0ED3                     	;# 
  1903  0ED4                     	;# 
  1904  0ED5                     	;# 
  1905  0ED6                     	;# 
  1906  0ED7                     	;# 
  1907  0ED8                     	;# 
  1908  0ED9                     	;# 
  1909  0EDA                     	;# 
  1910  0EDB                     	;# 
  1911  0EDC                     	;# 
  1912  0EDD                     	;# 
  1913  0EDE                     	;# 
  1914  0EDF                     	;# 
  1915  0EE0                     	;# 
  1916  0EE1                     	;# 
  1917  0EE1                     	;# 
  1918  0EE2                     	;# 
  1919  0EE3                     	;# 
  1920  0EE3                     	;# 
  1921  0EE4                     	;# 
  1922  0EE5                     	;# 
  1923  0EE5                     	;# 
  1924  0EE6                     	;# 
  1925  0EE7                     	;# 
  1926  0EE7                     	;# 
  1927  0EE8                     	;# 
  1928  0EE9                     	;# 
  1929  0EEA                     	;# 
  1930  0EEB                     	;# 
  1931  0EEC                     	;# 
  1932  0EED                     	;# 
  1933  0EEE                     	;# 
  1934  0EEF                     	;# 
  1935  0F11                     	;# 
  1936  0F12                     	;# 
  1937  0F13                     	;# 
  1938  0F14                     	;# 
  1939  0F15                     	;# 
  1940  0F16                     	;# 
  1941  0F17                     	;# 
  1942  0F18                     	;# 
  1943  0F19                     	;# 
  1944  0F1A                     	;# 
  1945  0F1B                     	;# 
  1946  0F1C                     	;# 
  1947  0F1D                     	;# 
  1948  0F1E                     	;# 
  1949  0F1F                     	;# 
  1950  0F20                     	;# 
  1951  0F21                     	;# 
  1952  0F21                     	;# 
  1953  0F22                     	;# 
  1954  0F23                     	;# 
  1955  0F23                     	;# 
  1956  0F24                     	;# 
  1957  0F25                     	;# 
  1958  0F25                     	;# 
  1959  0F26                     	;# 
  1960  0F27                     	;# 
  1961  0F27                     	;# 
  1962  0F28                     	;# 
  1963  0F29                     	;# 
  1964  0F2A                     	;# 
  1965  0F2B                     	;# 
  1966  0F2C                     	;# 
  1967  0F2D                     	;# 
  1968  0F2E                     	;# 
  1969  0F2F                     	;# 
  1970  0FE4                     	;# 
  1971  0FE5                     	;# 
  1972  0FE6                     	;# 
  1973  0FE7                     	;# 
  1974  0FE8                     	;# 
  1975  0FE9                     	;# 
  1976  0FEA                     	;# 
  1977  0FEB                     	;# 
  1978  0FED                     	;# 
  1979  0FEE                     	;# 
  1980  0FEF                     	;# 
  1981  0000                     	;# 
  1982  0001                     	;# 
  1983  0002                     	;# 
  1984  0003                     	;# 
  1985  0004                     	;# 
  1986  0005                     	;# 
  1987  0006                     	;# 
  1988  0007                     	;# 
  1989  0008                     	;# 
  1990  0009                     	;# 
  1991  000A                     	;# 
  1992  000B                     	;# 
  1993  000C                     	;# 
  1994  000D                     	;# 
  1995  000E                     	;# 
  1996  0010                     	;# 
  1997  0011                     	;# 
  1998  0012                     	;# 
  1999  0013                     	;# 
  2000  0014                     	;# 
  2001  0015                     	;# 
  2002  0016                     	;# 
  2003  0016                     	;# 
  2004  0017                     	;# 
  2005  0018                     	;# 
  2006  0019                     	;# 
  2007  001A                     	;# 
  2008  001B                     	;# 
  2009  001C                     	;# 
  2010  008C                     	;# 
  2011  008D                     	;# 
  2012  008E                     	;# 
  2013  0090                     	;# 
  2014  0091                     	;# 
  2015  0092                     	;# 
  2016  0093                     	;# 
  2017  0094                     	;# 
  2018  0095                     	;# 
  2019  0096                     	;# 
  2020  0097                     	;# 
  2021  0098                     	;# 
  2022  0099                     	;# 
  2023  009A                     	;# 
  2024  009B                     	;# 
  2025  009B                     	;# 
  2026  009C                     	;# 
  2027  009D                     	;# 
  2028  009E                     	;# 
  2029  009F                     	;# 
  2030  010C                     	;# 
  2031  010D                     	;# 
  2032  010E                     	;# 
  2033  0111                     	;# 
  2034  0112                     	;# 
  2035  0113                     	;# 
  2036  0114                     	;# 
  2037  0115                     	;# 
  2038  0116                     	;# 
  2039  0117                     	;# 
  2040  0118                     	;# 
  2041  0119                     	;# 
  2042  011A                     	;# 
  2043  011B                     	;# 
  2044  011C                     	;# 
  2045  011D                     	;# 
  2046  011D                     	;# 
  2047  011D                     	;# 
  2048  011E                     	;# 
  2049  011F                     	;# 
  2050  018C                     	;# 
  2051  018D                     	;# 
  2052  018E                     	;# 
  2053  0191                     	;# 
  2054  0191                     	;# 
  2055  0192                     	;# 
  2056  0193                     	;# 
  2057  0193                     	;# 
  2058  0193                     	;# 
  2059  0194                     	;# 
  2060  0195                     	;# 
  2061  0196                     	;# 
  2062  0197                     	;# 
  2063  0199                     	;# 
  2064  0199                     	;# 
  2065  0199                     	;# 
  2066  019A                     	;# 
  2067  019A                     	;# 
  2068  019A                     	;# 
  2069  019B                     	;# 
  2070  019B                     	;# 
  2071  019B                     	;# 
  2072  019B                     	;# 
  2073  019B                     	;# 
  2074  019C                     	;# 
  2075  019C                     	;# 
  2076  019C                     	;# 
  2077  019D                     	;# 
  2078  019D                     	;# 
  2079  019D                     	;# 
  2080  019E                     	;# 
  2081  019E                     	;# 
  2082  019E                     	;# 
  2083  019F                     	;# 
  2084  019F                     	;# 
  2085  019F                     	;# 
  2086  019F                     	;# 
  2087  019F                     	;# 
  2088  020C                     	;# 
  2089  020D                     	;# 
  2090  020E                     	;# 
  2091  0210                     	;# 
  2092  0211                     	;# 
  2093  0211                     	;# 
  2094  0212                     	;# 
  2095  0212                     	;# 
  2096  0213                     	;# 
  2097  0213                     	;# 
  2098  0214                     	;# 
  2099  0214                     	;# 
  2100  0215                     	;# 
  2101  0215                     	;# 
  2102  0215                     	;# 
  2103  0215                     	;# 
  2104  0216                     	;# 
  2105  0216                     	;# 
  2106  0217                     	;# 
  2107  0217                     	;# 
  2108  028C                     	;# 
  2109  028D                     	;# 
  2110  028E                     	;# 
  2111  0291                     	;# 
  2112  0291                     	;# 
  2113  0292                     	;# 
  2114  0293                     	;# 
  2115  0298                     	;# 
  2116  0298                     	;# 
  2117  0299                     	;# 
  2118  029A                     	;# 
  2119  030C                     	;# 
  2120  030D                     	;# 
  2121  030E                     	;# 
  2122  0311                     	;# 
  2123  0311                     	;# 
  2124  0312                     	;# 
  2125  0313                     	;# 
  2126  038C                     	;# 
  2127  038D                     	;# 
  2128  038E                     	;# 
  2129  0390                     	;# 
  2130  0391                     	;# 
  2131  0392                     	;# 
  2132  0393                     	;# 
  2133  0394                     	;# 
  2134  0395                     	;# 
  2135  0396                     	;# 
  2136  0397                     	;# 
  2137  0398                     	;# 
  2138  0399                     	;# 
  2139  039D                     	;# 
  2140  039E                     	;# 
  2141  039F                     	;# 
  2142  0511                     	;# 
  2143  0513                     	;# 
  2144  051A                     	;# 
  2145  0591                     	;# 
  2146  0592                     	;# 
  2147  0592                     	;# 
  2148  0593                     	;# 
  2149  0594                     	;# 
  2150  0594                     	;# 
  2151  0595                     	;# 
  2152  0596                     	;# 
  2153  0596                     	;# 
  2154  0E91                     	;# 
  2155  0E92                     	;# 
  2156  0E93                     	;# 
  2157  0E94                     	;# 
  2158  0E95                     	;# 
  2159  0E96                     	;# 
  2160  0E97                     	;# 
  2161  0E98                     	;# 
  2162  0E99                     	;# 
  2163  0E9A                     	;# 
  2164  0E9B                     	;# 
  2165  0E9C                     	;# 
  2166  0E9D                     	;# 
  2167  0E9E                     	;# 
  2168  0E9F                     	;# 
  2169  0EA0                     	;# 
  2170  0EA1                     	;# 
  2171  0EA1                     	;# 
  2172  0EA2                     	;# 
  2173  0EA3                     	;# 
  2174  0EA3                     	;# 
  2175  0EA4                     	;# 
  2176  0EA5                     	;# 
  2177  0EA5                     	;# 
  2178  0EA6                     	;# 
  2179  0EA7                     	;# 
  2180  0EA7                     	;# 
  2181  0EA8                     	;# 
  2182  0EA9                     	;# 
  2183  0EAA                     	;# 
  2184  0EAB                     	;# 
  2185  0EAC                     	;# 
  2186  0EAD                     	;# 
  2187  0EAE                     	;# 
  2188  0EAF                     	;# 
  2189  0EB1                     	;# 
  2190  0EB2                     	;# 
  2191  0EB3                     	;# 
  2192  0EB4                     	;# 
  2193  0EB5                     	;# 
  2194  0EB6                     	;# 
  2195  0EB7                     	;# 
  2196  0EB8                     	;# 
  2197  0EB9                     	;# 
  2198  0EBA                     	;# 
  2199  0EBB                     	;# 
  2200  0EBC                     	;# 
  2201  0EBD                     	;# 
  2202  0EBE                     	;# 
  2203  0EBF                     	;# 
  2204  0EC0                     	;# 
  2205  0EC1                     	;# 
  2206  0EC1                     	;# 
  2207  0EC2                     	;# 
  2208  0EC3                     	;# 
  2209  0EC3                     	;# 
  2210  0EC4                     	;# 
  2211  0EC5                     	;# 
  2212  0EC5                     	;# 
  2213  0EC6                     	;# 
  2214  0EC7                     	;# 
  2215  0EC7                     	;# 
  2216  0EC8                     	;# 
  2217  0EC9                     	;# 
  2218  0ECA                     	;# 
  2219  0ECB                     	;# 
  2220  0ECC                     	;# 
  2221  0ECD                     	;# 
  2222  0ECE                     	;# 
  2223  0ECF                     	;# 
  2224  0ED1                     	;# 
  2225  0ED2                     	;# 
  2226  0ED3                     	;# 
  2227  0ED4                     	;# 
  2228  0ED5                     	;# 
  2229  0ED6                     	;# 
  2230  0ED7                     	;# 
  2231  0ED8                     	;# 
  2232  0ED9                     	;# 
  2233  0EDA                     	;# 
  2234  0EDB                     	;# 
  2235  0EDC                     	;# 
  2236  0EDD                     	;# 
  2237  0EDE                     	;# 
  2238  0EDF                     	;# 
  2239  0EE0                     	;# 
  2240  0EE1                     	;# 
  2241  0EE1                     	;# 
  2242  0EE2                     	;# 
  2243  0EE3                     	;# 
  2244  0EE3                     	;# 
  2245  0EE4                     	;# 
  2246  0EE5                     	;# 
  2247  0EE5                     	;# 
  2248  0EE6                     	;# 
  2249  0EE7                     	;# 
  2250  0EE7                     	;# 
  2251  0EE8                     	;# 
  2252  0EE9                     	;# 
  2253  0EEA                     	;# 
  2254  0EEB                     	;# 
  2255  0EEC                     	;# 
  2256  0EED                     	;# 
  2257  0EEE                     	;# 
  2258  0EEF                     	;# 
  2259  0F11                     	;# 
  2260  0F12                     	;# 
  2261  0F13                     	;# 
  2262  0F14                     	;# 
  2263  0F15                     	;# 
  2264  0F16                     	;# 
  2265  0F17                     	;# 
  2266  0F18                     	;# 
  2267  0F19                     	;# 
  2268  0F1A                     	;# 
  2269  0F1B                     	;# 
  2270  0F1C                     	;# 
  2271  0F1D                     	;# 
  2272  0F1E                     	;# 
  2273  0F1F                     	;# 
  2274  0F20                     	;# 
  2275  0F21                     	;# 
  2276  0F21                     	;# 
  2277  0F22                     	;# 
  2278  0F23                     	;# 
  2279  0F23                     	;# 
  2280  0F24                     	;# 
  2281  0F25                     	;# 
  2282  0F25                     	;# 
  2283  0F26                     	;# 
  2284  0F27                     	;# 
  2285  0F27                     	;# 
  2286  0F28                     	;# 
  2287  0F29                     	;# 
  2288  0F2A                     	;# 
  2289  0F2B                     	;# 
  2290  0F2C                     	;# 
  2291  0F2D                     	;# 
  2292  0F2E                     	;# 
  2293  0F2F                     	;# 
  2294  0FE4                     	;# 
  2295  0FE5                     	;# 
  2296  0FE6                     	;# 
  2297  0FE7                     	;# 
  2298  0FE8                     	;# 
  2299  0FE9                     	;# 
  2300  0FEA                     	;# 
  2301  0FEB                     	;# 
  2302  0FED                     	;# 
  2303  0FEE                     	;# 
  2304  0FEF                     	;# 
  2305  0000                     	;# 
  2306  0001                     	;# 
  2307  0002                     	;# 
  2308  0003                     	;# 
  2309  0004                     	;# 
  2310  0005                     	;# 
  2311  0006                     	;# 
  2312  0007                     	;# 
  2313  0008                     	;# 
  2314  0009                     	;# 
  2315  000A                     	;# 
  2316  000B                     	;# 
  2317  000C                     	;# 
  2318  000D                     	;# 
  2319  000E                     	;# 
  2320  0010                     	;# 
  2321  0011                     	;# 
  2322  0012                     	;# 
  2323  0013                     	;# 
  2324  0014                     	;# 
  2325  0015                     	;# 
  2326  0016                     	;# 
  2327  0016                     	;# 
  2328  0017                     	;# 
  2329  0018                     	;# 
  2330  0019                     	;# 
  2331  001A                     	;# 
  2332  001B                     	;# 
  2333  001C                     	;# 
  2334  008C                     	;# 
  2335  008D                     	;# 
  2336  008E                     	;# 
  2337  0090                     	;# 
  2338  0091                     	;# 
  2339  0092                     	;# 
  2340  0093                     	;# 
  2341  0094                     	;# 
  2342  0095                     	;# 
  2343  0096                     	;# 
  2344  0097                     	;# 
  2345  0098                     	;# 
  2346  0099                     	;# 
  2347  009A                     	;# 
  2348  009B                     	;# 
  2349  009B                     	;# 
  2350  009C                     	;# 
  2351  009D                     	;# 
  2352  009E                     	;# 
  2353  009F                     	;# 
  2354  010C                     	;# 
  2355  010D                     	;# 
  2356  010E                     	;# 
  2357  0111                     	;# 
  2358  0112                     	;# 
  2359  0113                     	;# 
  2360  0114                     	;# 
  2361  0115                     	;# 
  2362  0116                     	;# 
  2363  0117                     	;# 
  2364  0118                     	;# 
  2365  0119                     	;# 
  2366  011A                     	;# 
  2367  011B                     	;# 
  2368  011C                     	;# 
  2369  011D                     	;# 
  2370  011D                     	;# 
  2371  011D                     	;# 
  2372  011E                     	;# 
  2373  011F                     	;# 
  2374  018C                     	;# 
  2375  018D                     	;# 
  2376  018E                     	;# 
  2377  0191                     	;# 
  2378  0191                     	;# 
  2379  0192                     	;# 
  2380  0193                     	;# 
  2381  0193                     	;# 
  2382  0193                     	;# 
  2383  0194                     	;# 
  2384  0195                     	;# 
  2385  0196                     	;# 
  2386  0197                     	;# 
  2387  0199                     	;# 
  2388  0199                     	;# 
  2389  0199                     	;# 
  2390  019A                     	;# 
  2391  019A                     	;# 
  2392  019A                     	;# 
  2393  019B                     	;# 
  2394  019B                     	;# 
  2395  019B                     	;# 
  2396  019B                     	;# 
  2397  019B                     	;# 
  2398  019C                     	;# 
  2399  019C                     	;# 
  2400  019C                     	;# 
  2401  019D                     	;# 
  2402  019D                     	;# 
  2403  019D                     	;# 
  2404  019E                     	;# 
  2405  019E                     	;# 
  2406  019E                     	;# 
  2407  019F                     	;# 
  2408  019F                     	;# 
  2409  019F                     	;# 
  2410  019F                     	;# 
  2411  019F                     	;# 
  2412  020C                     	;# 
  2413  020D                     	;# 
  2414  020E                     	;# 
  2415  0210                     	;# 
  2416  0211                     	;# 
  2417  0211                     	;# 
  2418  0212                     	;# 
  2419  0212                     	;# 
  2420  0213                     	;# 
  2421  0213                     	;# 
  2422  0214                     	;# 
  2423  0214                     	;# 
  2424  0215                     	;# 
  2425  0215                     	;# 
  2426  0215                     	;# 
  2427  0215                     	;# 
  2428  0216                     	;# 
  2429  0216                     	;# 
  2430  0217                     	;# 
  2431  0217                     	;# 
  2432  028C                     	;# 
  2433  028D                     	;# 
  2434  028E                     	;# 
  2435  0291                     	;# 
  2436  0291                     	;# 
  2437  0292                     	;# 
  2438  0293                     	;# 
  2439  0298                     	;# 
  2440  0298                     	;# 
  2441  0299                     	;# 
  2442  029A                     	;# 
  2443  030C                     	;# 
  2444  030D                     	;# 
  2445  030E                     	;# 
  2446  0311                     	;# 
  2447  0311                     	;# 
  2448  0312                     	;# 
  2449  0313                     	;# 
  2450  038C                     	;# 
  2451  038D                     	;# 
  2452  038E                     	;# 
  2453  0390                     	;# 
  2454  0391                     	;# 
  2455  0392                     	;# 
  2456  0393                     	;# 
  2457  0394                     	;# 
  2458  0395                     	;# 
  2459  0396                     	;# 
  2460  0397                     	;# 
  2461  0398                     	;# 
  2462  0399                     	;# 
  2463  039D                     	;# 
  2464  039E                     	;# 
  2465  039F                     	;# 
  2466  0511                     	;# 
  2467  0513                     	;# 
  2468  051A                     	;# 
  2469  0591                     	;# 
  2470  0592                     	;# 
  2471  0592                     	;# 
  2472  0593                     	;# 
  2473  0594                     	;# 
  2474  0594                     	;# 
  2475  0595                     	;# 
  2476  0596                     	;# 
  2477  0596                     	;# 
  2478  0E91                     	;# 
  2479  0E92                     	;# 
  2480  0E93                     	;# 
  2481  0E94                     	;# 
  2482  0E95                     	;# 
  2483  0E96                     	;# 
  2484  0E97                     	;# 
  2485  0E98                     	;# 
  2486  0E99                     	;# 
  2487  0E9A                     	;# 
  2488  0E9B                     	;# 
  2489  0E9C                     	;# 
  2490  0E9D                     	;# 
  2491  0E9E                     	;# 
  2492  0E9F                     	;# 
  2493  0EA0                     	;# 
  2494  0EA1                     	;# 
  2495  0EA1                     	;# 
  2496  0EA2                     	;# 
  2497  0EA3                     	;# 
  2498  0EA3                     	;# 
  2499  0EA4                     	;# 
  2500  0EA5                     	;# 
  2501  0EA5                     	;# 
  2502  0EA6                     	;# 
  2503  0EA7                     	;# 
  2504  0EA7                     	;# 
  2505  0EA8                     	;# 
  2506  0EA9                     	;# 
  2507  0EAA                     	;# 
  2508  0EAB                     	;# 
  2509  0EAC                     	;# 
  2510  0EAD                     	;# 
  2511  0EAE                     	;# 
  2512  0EAF                     	;# 
  2513  0EB1                     	;# 
  2514  0EB2                     	;# 
  2515  0EB3                     	;# 
  2516  0EB4                     	;# 
  2517  0EB5                     	;# 
  2518  0EB6                     	;# 
  2519  0EB7                     	;# 
  2520  0EB8                     	;# 
  2521  0EB9                     	;# 
  2522  0EBA                     	;# 
  2523  0EBB                     	;# 
  2524  0EBC                     	;# 
  2525  0EBD                     	;# 
  2526  0EBE                     	;# 
  2527  0EBF                     	;# 
  2528  0EC0                     	;# 
  2529  0EC1                     	;# 
  2530  0EC1                     	;# 
  2531  0EC2                     	;# 
  2532  0EC3                     	;# 
  2533  0EC3                     	;# 
  2534  0EC4                     	;# 
  2535  0EC5                     	;# 
  2536  0EC5                     	;# 
  2537  0EC6                     	;# 
  2538  0EC7                     	;# 
  2539  0EC7                     	;# 
  2540  0EC8                     	;# 
  2541  0EC9                     	;# 
  2542  0ECA                     	;# 
  2543  0ECB                     	;# 
  2544  0ECC                     	;# 
  2545  0ECD                     	;# 
  2546  0ECE                     	;# 
  2547  0ECF                     	;# 
  2548  0ED1                     	;# 
  2549  0ED2                     	;# 
  2550  0ED3                     	;# 
  2551  0ED4                     	;# 
  2552  0ED5                     	;# 
  2553  0ED6                     	;# 
  2554  0ED7                     	;# 
  2555  0ED8                     	;# 
  2556  0ED9                     	;# 
  2557  0EDA                     	;# 
  2558  0EDB                     	;# 
  2559  0EDC                     	;# 
  2560  0EDD                     	;# 
  2561  0EDE                     	;# 
  2562  0EDF                     	;# 
  2563  0EE0                     	;# 
  2564  0EE1                     	;# 
  2565  0EE1                     	;# 
  2566  0EE2                     	;# 
  2567  0EE3                     	;# 
  2568  0EE3                     	;# 
  2569  0EE4                     	;# 
  2570  0EE5                     	;# 
  2571  0EE5                     	;# 
  2572  0EE6                     	;# 
  2573  0EE7                     	;# 
  2574  0EE7                     	;# 
  2575  0EE8                     	;# 
  2576  0EE9                     	;# 
  2577  0EEA                     	;# 
  2578  0EEB                     	;# 
  2579  0EEC                     	;# 
  2580  0EED                     	;# 
  2581  0EEE                     	;# 
  2582  0EEF                     	;# 
  2583  0F11                     	;# 
  2584  0F12                     	;# 
  2585  0F13                     	;# 
  2586  0F14                     	;# 
  2587  0F15                     	;# 
  2588  0F16                     	;# 
  2589  0F17                     	;# 
  2590  0F18                     	;# 
  2591  0F19                     	;# 
  2592  0F1A                     	;# 
  2593  0F1B                     	;# 
  2594  0F1C                     	;# 
  2595  0F1D                     	;# 
  2596  0F1E                     	;# 
  2597  0F1F                     	;# 
  2598  0F20                     	;# 
  2599  0F21                     	;# 
  2600  0F21                     	;# 
  2601  0F22                     	;# 
  2602  0F23                     	;# 
  2603  0F23                     	;# 
  2604  0F24                     	;# 
  2605  0F25                     	;# 
  2606  0F25                     	;# 
  2607  0F26                     	;# 
  2608  0F27                     	;# 
  2609  0F27                     	;# 
  2610  0F28                     	;# 
  2611  0F29                     	;# 
  2612  0F2A                     	;# 
  2613  0F2B                     	;# 
  2614  0F2C                     	;# 
  2615  0F2D                     	;# 
  2616  0F2E                     	;# 
  2617  0F2F                     	;# 
  2618  0FE4                     	;# 
  2619  0FE5                     	;# 
  2620  0FE6                     	;# 
  2621  0FE7                     	;# 
  2622  0FE8                     	;# 
  2623  0FE9                     	;# 
  2624  0FEA                     	;# 
  2625  0FEB                     	;# 
  2626  0FED                     	;# 
  2627  0FEE                     	;# 
  2628  0FEF                     	;# 
  2629  0000                     	;# 
  2630  0001                     	;# 
  2631  0002                     	;# 
  2632  0003                     	;# 
  2633  0004                     	;# 
  2634  0005                     	;# 
  2635  0006                     	;# 
  2636  0007                     	;# 
  2637  0008                     	;# 
  2638  0009                     	;# 
  2639  000A                     	;# 
  2640  000B                     	;# 
  2641  000C                     	;# 
  2642  000D                     	;# 
  2643  000E                     	;# 
  2644  0010                     	;# 
  2645  0011                     	;# 
  2646  0012                     	;# 
  2647  0013                     	;# 
  2648  0014                     	;# 
  2649  0015                     	;# 
  2650  0016                     	;# 
  2651  0016                     	;# 
  2652  0017                     	;# 
  2653  0018                     	;# 
  2654  0019                     	;# 
  2655  001A                     	;# 
  2656  001B                     	;# 
  2657  001C                     	;# 
  2658  008C                     	;# 
  2659  008D                     	;# 
  2660  008E                     	;# 
  2661  0090                     	;# 
  2662  0091                     	;# 
  2663  0092                     	;# 
  2664  0093                     	;# 
  2665  0094                     	;# 
  2666  0095                     	;# 
  2667  0096                     	;# 
  2668  0097                     	;# 
  2669  0098                     	;# 
  2670  0099                     	;# 
  2671  009A                     	;# 
  2672  009B                     	;# 
  2673  009B                     	;# 
  2674  009C                     	;# 
  2675  009D                     	;# 
  2676  009E                     	;# 
  2677  009F                     	;# 
  2678  010C                     	;# 
  2679  010D                     	;# 
  2680  010E                     	;# 
  2681  0111                     	;# 
  2682  0112                     	;# 
  2683  0113                     	;# 
  2684  0114                     	;# 
  2685  0115                     	;# 
  2686  0116                     	;# 
  2687  0117                     	;# 
  2688  0118                     	;# 
  2689  0119                     	;# 
  2690  011A                     	;# 
  2691  011B                     	;# 
  2692  011C                     	;# 
  2693  011D                     	;# 
  2694  011D                     	;# 
  2695  011D                     	;# 
  2696  011E                     	;# 
  2697  011F                     	;# 
  2698  018C                     	;# 
  2699  018D                     	;# 
  2700  018E                     	;# 
  2701  0191                     	;# 
  2702  0191                     	;# 
  2703  0192                     	;# 
  2704  0193                     	;# 
  2705  0193                     	;# 
  2706  0193                     	;# 
  2707  0194                     	;# 
  2708  0195                     	;# 
  2709  0196                     	;# 
  2710  0197                     	;# 
  2711  0199                     	;# 
  2712  0199                     	;# 
  2713  0199                     	;# 
  2714  019A                     	;# 
  2715  019A                     	;# 
  2716  019A                     	;# 
  2717  019B                     	;# 
  2718  019B                     	;# 
  2719  019B                     	;# 
  2720  019B                     	;# 
  2721  019B                     	;# 
  2722  019C                     	;# 
  2723  019C                     	;# 
  2724  019C                     	;# 
  2725  019D                     	;# 
  2726  019D                     	;# 
  2727  019D                     	;# 
  2728  019E                     	;# 
  2729  019E                     	;# 
  2730  019E                     	;# 
  2731  019F                     	;# 
  2732  019F                     	;# 
  2733  019F                     	;# 
  2734  019F                     	;# 
  2735  019F                     	;# 
  2736  020C                     	;# 
  2737  020D                     	;# 
  2738  020E                     	;# 
  2739  0210                     	;# 
  2740  0211                     	;# 
  2741  0211                     	;# 
  2742  0212                     	;# 
  2743  0212                     	;# 
  2744  0213                     	;# 
  2745  0213                     	;# 
  2746  0214                     	;# 
  2747  0214                     	;# 
  2748  0215                     	;# 
  2749  0215                     	;# 
  2750  0215                     	;# 
  2751  0215                     	;# 
  2752  0216                     	;# 
  2753  0216                     	;# 
  2754  0217                     	;# 
  2755  0217                     	;# 
  2756  028C                     	;# 
  2757  028D                     	;# 
  2758  028E                     	;# 
  2759  0291                     	;# 
  2760  0291                     	;# 
  2761  0292                     	;# 
  2762  0293                     	;# 
  2763  0298                     	;# 
  2764  0298                     	;# 
  2765  0299                     	;# 
  2766  029A                     	;# 
  2767  030C                     	;# 
  2768  030D                     	;# 
  2769  030E                     	;# 
  2770  0311                     	;# 
  2771  0311                     	;# 
  2772  0312                     	;# 
  2773  0313                     	;# 
  2774  038C                     	;# 
  2775  038D                     	;# 
  2776  038E                     	;# 
  2777  0390                     	;# 
  2778  0391                     	;# 
  2779  0392                     	;# 
  2780  0393                     	;# 
  2781  0394                     	;# 
  2782  0395                     	;# 
  2783  0396                     	;# 
  2784  0397                     	;# 
  2785  0398                     	;# 
  2786  0399                     	;# 
  2787  039D                     	;# 
  2788  039E                     	;# 
  2789  039F                     	;# 
  2790  0511                     	;# 
  2791  0513                     	;# 
  2792  051A                     	;# 
  2793  0591                     	;# 
  2794  0592                     	;# 
  2795  0592                     	;# 
  2796  0593                     	;# 
  2797  0594                     	;# 
  2798  0594                     	;# 
  2799  0595                     	;# 
  2800  0596                     	;# 
  2801  0596                     	;# 
  2802  0E91                     	;# 
  2803  0E92                     	;# 
  2804  0E93                     	;# 
  2805  0E94                     	;# 
  2806  0E95                     	;# 
  2807  0E96                     	;# 
  2808  0E97                     	;# 
  2809  0E98                     	;# 
  2810  0E99                     	;# 
  2811  0E9A                     	;# 
  2812  0E9B                     	;# 
  2813  0E9C                     	;# 
  2814  0E9D                     	;# 
  2815  0E9E                     	;# 
  2816  0E9F                     	;# 
  2817  0EA0                     	;# 
  2818  0EA1                     	;# 
  2819  0EA1                     	;# 
  2820  0EA2                     	;# 
  2821  0EA3                     	;# 
  2822  0EA3                     	;# 
  2823  0EA4                     	;# 
  2824  0EA5                     	;# 
  2825  0EA5                     	;# 
  2826  0EA6                     	;# 
  2827  0EA7                     	;# 
  2828  0EA7                     	;# 
  2829  0EA8                     	;# 
  2830  0EA9                     	;# 
  2831  0EAA                     	;# 
  2832  0EAB                     	;# 
  2833  0EAC                     	;# 
  2834  0EAD                     	;# 
  2835  0EAE                     	;# 
  2836  0EAF                     	;# 
  2837  0EB1                     	;# 
  2838  0EB2                     	;# 
  2839  0EB3                     	;# 
  2840  0EB4                     	;# 
  2841  0EB5                     	;# 
  2842  0EB6                     	;# 
  2843  0EB7                     	;# 
  2844  0EB8                     	;# 
  2845  0EB9                     	;# 
  2846  0EBA                     	;# 
  2847  0EBB                     	;# 
  2848  0EBC                     	;# 
  2849  0EBD                     	;# 
  2850  0EBE                     	;# 
  2851  0EBF                     	;# 
  2852  0EC0                     	;# 
  2853  0EC1                     	;# 
  2854  0EC1                     	;# 
  2855  0EC2                     	;# 
  2856  0EC3                     	;# 
  2857  0EC3                     	;# 
  2858  0EC4                     	;# 
  2859  0EC5                     	;# 
  2860  0EC5                     	;# 
  2861  0EC6                     	;# 
  2862  0EC7                     	;# 
  2863  0EC7                     	;# 
  2864  0EC8                     	;# 
  2865  0EC9                     	;# 
  2866  0ECA                     	;# 
  2867  0ECB                     	;# 
  2868  0ECC                     	;# 
  2869  0ECD                     	;# 
  2870  0ECE                     	;# 
  2871  0ECF                     	;# 
  2872  0ED1                     	;# 
  2873  0ED2                     	;# 
  2874  0ED3                     	;# 
  2875  0ED4                     	;# 
  2876  0ED5                     	;# 
  2877  0ED6                     	;# 
  2878  0ED7                     	;# 
  2879  0ED8                     	;# 
  2880  0ED9                     	;# 
  2881  0EDA                     	;# 
  2882  0EDB                     	;# 
  2883  0EDC                     	;# 
  2884  0EDD                     	;# 
  2885  0EDE                     	;# 
  2886  0EDF                     	;# 
  2887  0EE0                     	;# 
  2888  0EE1                     	;# 
  2889  0EE1                     	;# 
  2890  0EE2                     	;# 
  2891  0EE3                     	;# 
  2892  0EE3                     	;# 
  2893  0EE4                     	;# 
  2894  0EE5                     	;# 
  2895  0EE5                     	;# 
  2896  0EE6                     	;# 
  2897  0EE7                     	;# 
  2898  0EE7                     	;# 
  2899  0EE8                     	;# 
  2900  0EE9                     	;# 
  2901  0EEA                     	;# 
  2902  0EEB                     	;# 
  2903  0EEC                     	;# 
  2904  0EED                     	;# 
  2905  0EEE                     	;# 
  2906  0EEF                     	;# 
  2907  0F11                     	;# 
  2908  0F12                     	;# 
  2909  0F13                     	;# 
  2910  0F14                     	;# 
  2911  0F15                     	;# 
  2912  0F16                     	;# 
  2913  0F17                     	;# 
  2914  0F18                     	;# 
  2915  0F19                     	;# 
  2916  0F1A                     	;# 
  2917  0F1B                     	;# 
  2918  0F1C                     	;# 
  2919  0F1D                     	;# 
  2920  0F1E                     	;# 
  2921  0F1F                     	;# 
  2922  0F20                     	;# 
  2923  0F21                     	;# 
  2924  0F21                     	;# 
  2925  0F22                     	;# 
  2926  0F23                     	;# 
  2927  0F23                     	;# 
  2928  0F24                     	;# 
  2929  0F25                     	;# 
  2930  0F25                     	;# 
  2931  0F26                     	;# 
  2932  0F27                     	;# 
  2933  0F27                     	;# 
  2934  0F28                     	;# 
  2935  0F29                     	;# 
  2936  0F2A                     	;# 
  2937  0F2B                     	;# 
  2938  0F2C                     	;# 
  2939  0F2D                     	;# 
  2940  0F2E                     	;# 
  2941  0F2F                     	;# 
  2942  0FE4                     	;# 
  2943  0FE5                     	;# 
  2944  0FE6                     	;# 
  2945  0FE7                     	;# 
  2946  0FE8                     	;# 
  2947  0FE9                     	;# 
  2948  0FEA                     	;# 
  2949  0FEB                     	;# 
  2950  0FED                     	;# 
  2951  0FEE                     	;# 
  2952  0FEF                     	;# 
  2953                           
  2954                           	psect	idataBANK1
  2955  07FE                     __pidataBANK1:	
  2956                           
  2957                           ;initializer for _health
  2958  07FE  3432               	retlw	50
  2959  0016                     _TMR1	set	22
  2960  000B                     _INTCON	set	11
  2961  0011                     _PIR1bits	set	17
  2962  000C                     _PORTAbits	set	12
  2963  0018                     _T1CON	set	24
  2964  005F                     _GIE	set	95
  2965  0061                     _RA1	set	97
  2966  006B                     _RB3	set	107
  2967  0074                     _RC4	set	116
  2968  0077                     _RC7	set	119
  2969  008D                     _RCIF	set	141
  2970  009D                     _ADCON0	set	157
  2971  009E                     _ADCON1	set	158
  2972  009F                     _ADCON2	set	159
  2973  009C                     _ADRESH	set	156
  2974  009B                     _ADRESL	set	155
  2975  0099                     _OSCCON	set	153
  2976  0094                     _PIE4	set	148
  2977  008C                     _TRISA	set	140
  2978  008D                     _TRISB	set	141
  2979  008D                     _TRISBbits	set	141
  2980  008E                     _TRISC	set	142
  2981  04E9                     _ADGO	set	1257
  2982  048D                     _RCIE	set	1165
  2983  08EC                     _SCKSEL	set	2284
  2984  08EB                     _SDISEL	set	2283
  2985  08ED                     _SDOSEL	set	2285
  2986  018C                     _ANSELA	set	396
  2987  018D                     _ANSELB	set	397
  2988  0199                     _RCREG	set	409
  2989  019B                     _SPBRG	set	411
  2990  019A                     _TXREG	set	410
  2991  0CFB                     _BRG16	set	3323
  2992  0CF2                     _BRGH	set	3314
  2993  0CEC                     _CREN	set	3308
  2994  0CEF                     _SPEN	set	3311
  2995  0CF4                     _SYNC	set	3316
  2996  0CF1                     _TRMT	set	3313
  2997  0CF5                     _TXEN	set	3317
  2998  0211                     _SSPBUF	set	529
  2999  0215                     _SSPCON1	set	533
  3000  0215                     _SSPCON1bits	set	533
  3001  10AD                     _SSPEN	set	4269
  3002  0393                     _IOCAF	set	915
  3003  0393                     _IOCAFbits	set	915
  3004  0392                     _IOCAN	set	914
  3005  0391                     _IOCAP	set	913
  3006  1C99                     _IOCAF1	set	7321
  3007  0E9D                     _PSMC1ASDC	set	3741
  3008  0E9E                     _PSMC1ASDL	set	3742
  3009  0E9F                     _PSMC1ASDS	set	3743
  3010  0EAC                     _PSMC1BLKF	set	3756
  3011  0EAB                     _PSMC1BLKR	set	3755
  3012  0E97                     _PSMC1BLNK	set	3735
  3013  0E94                     _PSMC1CLK	set	3732
  3014  0E91                     _PSMC1CON	set	3729
  3015  0EAA                     _PSMC1DBF	set	3754
  3016  0EA9                     _PSMC1DBR	set	3753
  3017  0EA4                     _PSMC1DCH	set	3748
  3018  0EA3                     _PSMC1DCL	set	3747
  3019  0E9B                     _PSMC1DCS	set	3739
  3020  0E99                     _PSMC1FEBS	set	3737
  3021  0EAD                     _PSMC1FFA	set	3757
  3022  0EA0                     _PSMC1INT	set	3744
  3023  0E92                     _PSMC1MDL	set	3730
  3024  0E95                     _PSMC1OEN	set	3733
  3025  0EA2                     _PSMC1PHH	set	3746
  3026  0EA1                     _PSMC1PHL	set	3745
  3027  0E9A                     _PSMC1PHS	set	3738
  3028  0E96                     _PSMC1POL	set	3734
  3029  0EA6                     _PSMC1PRH	set	3750
  3030  0EA5                     _PSMC1PRL	set	3749
  3031  0E9C                     _PSMC1PRS	set	3740
  3032  0E98                     _PSMC1REBS	set	3736
  3033  0EAE                     _PSMC1STR0	set	3758
  3034  0EAF                     _PSMC1STR1	set	3759
  3035  0E93                     _PSMC1SYNC	set	3731
  3036  0EBD                     _PSMC2ASDC	set	3773
  3037  0EBE                     _PSMC2ASDL	set	3774
  3038  0EBF                     _PSMC2ASDS	set	3775
  3039  0ECC                     _PSMC2BLKF	set	3788
  3040  0ECB                     _PSMC2BLKR	set	3787
  3041  0EB7                     _PSMC2BLNK	set	3767
  3042  0EB4                     _PSMC2CLK	set	3764
  3043  0EB1                     _PSMC2CON	set	3761
  3044  0ECA                     _PSMC2DBF	set	3786
  3045  0EC9                     _PSMC2DBR	set	3785
  3046  0EC4                     _PSMC2DCH	set	3780
  3047  0EC3                     _PSMC2DCL	set	3779
  3048  0EBB                     _PSMC2DCS	set	3771
  3049  0EB9                     _PSMC2FEBS	set	3769
  3050  0ECD                     _PSMC2FFA	set	3789
  3051  0EC0                     _PSMC2INT	set	3776
  3052  0EB2                     _PSMC2MDL	set	3762
  3053  0EB5                     _PSMC2OEN	set	3765
  3054  0EC2                     _PSMC2PHH	set	3778
  3055  0EC1                     _PSMC2PHL	set	3777
  3056  0EBA                     _PSMC2PHS	set	3770
  3057  0EB6                     _PSMC2POL	set	3766
  3058  0EC6                     _PSMC2PRH	set	3782
  3059  0EC5                     _PSMC2PRL	set	3781
  3060  0EBC                     _PSMC2PRS	set	3772
  3061  0EB8                     _PSMC2REBS	set	3768
  3062  0ECE                     _PSMC2STR0	set	3790
  3063  0ECF                     _PSMC2STR1	set	3791
  3064  0EB3                     _PSMC2SYNC	set	3763
  3065  0EDD                     _PSMC3ASDC	set	3805
  3066  0EDE                     _PSMC3ASDL	set	3806
  3067  0EDF                     _PSMC3ASDS	set	3807
  3068  0EEC                     _PSMC3BLKF	set	3820
  3069  0EEB                     _PSMC3BLKR	set	3819
  3070  0ED7                     _PSMC3BLNK	set	3799
  3071  0ED4                     _PSMC3CLK	set	3796
  3072  0ED1                     _PSMC3CON	set	3793
  3073  0EEA                     _PSMC3DBF	set	3818
  3074  0EE9                     _PSMC3DBR	set	3817
  3075  0EE4                     _PSMC3DCH	set	3812
  3076  0EE3                     _PSMC3DCL	set	3811
  3077  0EDB                     _PSMC3DCS	set	3803
  3078  0ED9                     _PSMC3FEBS	set	3801
  3079  0EED                     _PSMC3FFA	set	3821
  3080  0EE0                     _PSMC3INT	set	3808
  3081  0ED2                     _PSMC3MDL	set	3794
  3082  0ED5                     _PSMC3OEN	set	3797
  3083  0EE2                     _PSMC3PHH	set	3810
  3084  0EE1                     _PSMC3PHL	set	3809
  3085  0EDA                     _PSMC3PHS	set	3802
  3086  0ED6                     _PSMC3POL	set	3798
  3087  0EE6                     _PSMC3PRH	set	3814
  3088  0EE5                     _PSMC3PRL	set	3813
  3089  0EDC                     _PSMC3PRS	set	3804
  3090  0ED8                     _PSMC3REBS	set	3800
  3091  0EEE                     _PSMC3STR0	set	3822
  3092  0EEF                     _PSMC3STR1	set	3823
  3093  0ED3                     _PSMC3SYNC	set	3795
  3094  7495                     _P1MDLBIT	set	29845
  3095  758E                     _PSMC2LD	set	30094
  3096  768E                     _PSMC3LD	set	30350
  3097  0F1D                     _PSMC4ASDC	set	3869
  3098  0F1E                     _PSMC4ASDL	set	3870
  3099  0F1F                     _PSMC4ASDS	set	3871
  3100  0F2C                     _PSMC4BLKF	set	3884
  3101  0F2B                     _PSMC4BLKR	set	3883
  3102  0F17                     _PSMC4BLNK	set	3863
  3103  0F14                     _PSMC4CLK	set	3860
  3104  0F11                     _PSMC4CON	set	3857
  3105  0F2A                     _PSMC4DBF	set	3882
  3106  0F29                     _PSMC4DBR	set	3881
  3107  0F24                     _PSMC4DCH	set	3876
  3108  0F23                     _PSMC4DCL	set	3875
  3109  0F1B                     _PSMC4DCS	set	3867
  3110  0F19                     _PSMC4FEBS	set	3865
  3111  0F2D                     _PSMC4FFA	set	3885
  3112  0F20                     _PSMC4INT	set	3872
  3113  0F12                     _PSMC4MDL	set	3858
  3114  0F15                     _PSMC4OEN	set	3861
  3115  0F22                     _PSMC4PHH	set	3874
  3116  0F21                     _PSMC4PHL	set	3873
  3117  0F1A                     _PSMC4PHS	set	3866
  3118  0F16                     _PSMC4POL	set	3862
  3119  0F26                     _PSMC4PRH	set	3878
  3120  0F25                     _PSMC4PRL	set	3877
  3121  0F1C                     _PSMC4PRS	set	3868
  3122  0F18                     _PSMC4REBS	set	3864
  3123  0F2E                     _PSMC4STR0	set	3886
  3124  0F2F                     _PSMC4STR1	set	3887
  3125  0F13                     _PSMC4SYNC	set	3859
  3126  788E                     _PSMC4LD	set	30862
  3127                           
  3128                           	psect	stringtext
  3129  1000                     __pstringtext:	
  3130  1000                     STR_3:	
  3131  1000  340A               	retlw	10
  3132  1001  340D               	retlw	13
  3133  1002  3447               	retlw	71	;'G'
  3134  1003  346F               	retlw	111	;'o'
  3135  1004  346F               	retlw	111	;'o'
  3136  1005  3464               	retlw	100	;'d'
  3137  1006  3420               	retlw	32	;' '
  3138  1007  346A               	retlw	106	;'j'
  3139  1008  346F               	retlw	111	;'o'
  3140  1009  3462               	retlw	98	;'b'
  3141  100A  342E               	retlw	46	;'.'
  3142  100B  3420               	retlw	32	;' '
  3143  100C  3459               	retlw	89	;'Y'
  3144  100D  346F               	retlw	111	;'o'
  3145  100E  3475               	retlw	117	;'u'
  3146  100F  3420               	retlw	32	;' '
  3147  1010  346B               	retlw	107	;'k'
  3148  1011  346E               	retlw	110	;'n'
  3149  1012  346F               	retlw	111	;'o'
  3150  1013  3477               	retlw	119	;'w'
  3151  1014  3420               	retlw	32	;' '
  3152  1015  3468               	retlw	104	;'h'
  3153  1016  346F               	retlw	111	;'o'
  3154  1017  3477               	retlw	119	;'w'
  3155  1018  3420               	retlw	32	;' '
  3156  1019  3474               	retlw	116	;'t'
  3157  101A  346F               	retlw	111	;'o'
  3158  101B  3420               	retlw	32	;' '
  3159  101C  3472               	retlw	114	;'r'
  3160  101D  3465               	retlw	101	;'e'
  3161  101E  3461               	retlw	97	;'a'
  3162  101F  3464               	retlw	100	;'d'
  3163  1020  3420               	retlw	32	;' '
  3164  1021  3469               	retlw	105	;'i'
  3165  1022  346E               	retlw	110	;'n'
  3166  1023  3473               	retlw	115	;'s'
  3167  1024  3474               	retlw	116	;'t'
  3168  1025  3472               	retlw	114	;'r'
  3169  1026  3475               	retlw	117	;'u'
  3170  1027  3463               	retlw	99	;'c'
  3171  1028  3474               	retlw	116	;'t'
  3172  1029  3469               	retlw	105	;'i'
  3173  102A  346F               	retlw	111	;'o'
  3174  102B  346E               	retlw	110	;'n'
  3175  102C  3473               	retlw	115	;'s'
  3176  102D  342E               	retlw	46	;'.'
  3177  102E  340A               	retlw	10
  3178  102F  340A               	retlw	10
  3179  1030  3400               	retlw	0
  3180  1031                     STR_2:	
  3181  1031  3450               	retlw	80	;'P'
  3182  1032  346C               	retlw	108	;'l'
  3183  1033  3465               	retlw	101	;'e'
  3184  1034  3461               	retlw	97	;'a'
  3185  1035  3473               	retlw	115	;'s'
  3186  1036  3465               	retlw	101	;'e'
  3187  1037  3420               	retlw	32	;' '
  3188  1038  3465               	retlw	101	;'e'
  3189  1039  346E               	retlw	110	;'n'
  3190  103A  3474               	retlw	116	;'t'
  3191  103B  3465               	retlw	101	;'e'
  3192  103C  3472               	retlw	114	;'r'
  3193  103D  3420               	retlw	32	;' '
  3194  103E  3474               	retlw	116	;'t'
  3195  103F  3468               	retlw	104	;'h'
  3196  1040  3465               	retlw	101	;'e'
  3197  1041  3420               	retlw	32	;' '
  3198  1042  3463               	retlw	99	;'c'
  3199  1043  3468               	retlw	104	;'h'
  3200  1044  3461               	retlw	97	;'a'
  3201  1045  3472               	retlw	114	;'r'
  3202  1046  3461               	retlw	97	;'a'
  3203  1047  3463               	retlw	99	;'c'
  3204  1048  3474               	retlw	116	;'t'
  3205  1049  3465               	retlw	101	;'e'
  3206  104A  3472               	retlw	114	;'r'
  3207  104B  3420               	retlw	32	;' '
  3208  104C  3441               	retlw	65	;'A'
  3209  104D  343A               	retlw	58	;':'
  3210  104E  3420               	retlw	32	;' '
  3211  104F  3400               	retlw	0
  3212  1050                     STR_4:	
  3213  1050  340A               	retlw	10
  3214  1051  340D               	retlw	13
  3215  1052  3457               	retlw	87	;'W'
  3216  1053  3472               	retlw	114	;'r'
  3217  1054  346F               	retlw	111	;'o'
  3218  1055  346E               	retlw	110	;'n'
  3219  1056  3467               	retlw	103	;'g'
  3220  1057  3420               	retlw	32	;' '
  3221  1058  346B               	retlw	107	;'k'
  3222  1059  3465               	retlw	101	;'e'
  3223  105A  3479               	retlw	121	;'y'
  3224  105B  342E               	retlw	46	;'.'
  3225  105C  3420               	retlw	32	;' '
  3226  105D  3454               	retlw	84	;'T'
  3227  105E  3472               	retlw	114	;'r'
  3228  105F  3479               	retlw	121	;'y'
  3229  1060  3420               	retlw	32	;' '
  3230  1061  3461               	retlw	97	;'a'
  3231  1062  3467               	retlw	103	;'g'
  3232  1063  3461               	retlw	97	;'a'
  3233  1064  3469               	retlw	105	;'i'
  3234  1065  346E               	retlw	110	;'n'
  3235  1066  342E               	retlw	46	;'.'
  3236  1067  340A               	retlw	10
  3237  1068  340D               	retlw	13
  3238  1069  3400               	retlw	0
  3239  106A                     STR_1:	
  3240  106A  340A               	retlw	10
  3241  106B  340D               	retlw	13
  3242  106C  344D               	retlw	77	;'M'
  3243  106D  3461               	retlw	97	;'a'
  3244  106E  3469               	retlw	105	;'i'
  3245  106F  346E               	retlw	110	;'n'
  3246  1070  3420               	retlw	32	;' '
  3247  1071  344C               	retlw	76	;'L'
  3248  1072  346F               	retlw	111	;'o'
  3249  1073  346F               	retlw	111	;'o'
  3250  1074  3470               	retlw	112	;'p'
  3251  1075  3420               	retlw	32	;' '
  3252  1076  3449               	retlw	73	;'I'
  3253  1077  346E               	retlw	110	;'n'
  3254  1078  3464               	retlw	100	;'d'
  3255  1079  3469               	retlw	105	;'i'
  3256  107A  3476               	retlw	118	;'v'
  3257  107B  3469               	retlw	105	;'i'
  3258  107C  3464               	retlw	100	;'d'
  3259  107D  3475               	retlw	117	;'u'
  3260  107E  3461               	retlw	97	;'a'
  3261  107F  346C               	retlw	108	;'l'
  3262  1080  340A               	retlw	10
  3263  1081  340D               	retlw	13
  3264  1082  3400               	retlw	0
  3265                           
  3266                           ; #config settings
  3267  0000                     
  3268                           	psect	cinit
  3269  0163                     start_initialization:	
  3270  0163                     __initialization:	
  3271                           
  3272                           ; Clear objects allocated to BANK0
  3273  0163  01C8               	clrf	__pbssBANK0& (0+127)
  3274  0164  01C9               	clrf	(__pbssBANK0+1)& (0+127)
  3275  0165  01CA               	clrf	(__pbssBANK0+2)& (0+127)
  3276  0166  01CB               	clrf	(__pbssBANK0+3)& (0+127)
  3277  0167  01CC               	clrf	(__pbssBANK0+4)& (0+127)
  3278  0168  01CD               	clrf	(__pbssBANK0+5)& (0+127)
  3279  0169  01CE               	clrf	(__pbssBANK0+6)& (0+127)
  3280  016A  01CF               	clrf	(__pbssBANK0+7)& (0+127)
  3281                           
  3282                           ; Clear objects allocated to BANK1
  3283  016B  0021               	movlb	1	; select bank1
  3284  016C  01B0               	clrf	__pbssBANK1& (0+127)
  3285  016D  01B1               	clrf	(__pbssBANK1+1)& (0+127)
  3286  016E  01B2               	clrf	(__pbssBANK1+2)& (0+127)
  3287  016F  01B3               	clrf	(__pbssBANK1+3)& (0+127)
  3288                           
  3289                           ; Initialize objects allocated to BANK1
  3290  0170  3187  27FE         	fcall	__pidataBANK1	;fetch initializer
  3291  0172  00B4               	movwf	__pdataBANK1& (0+127)
  3292  0173                     end_of_initialization:	
  3293                           ;End of C runtime variable initialization code
  3294                           
  3295  0173                     __end_of__initialization:	
  3296  0173  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3297  0174  0020               	movlb	0
  3298  0175  3187  2F07         	ljmp	_main	;jump to C main() function
  3299                           
  3300                           	psect	bssBANK0
  3301  0048                     __pbssBANK0:	
  3302  0048                     _D1cycles:	
  3303  0048                     	ds	2
  3304  004A                     _D2cycles:	
  3305  004A                     	ds	2
  3306  004C                     _Davgcycles:	
  3307  004C                     	ds	2
  3308  004E                     _numPackets:	
  3309  004E                     	ds	2
  3310                           
  3311                           	psect	bssBANK1
  3312  00B0                     __pbssBANK1:	
  3313  00B0                     main@F7231:	
  3314  00B0                     	ds	3
  3315  00B3                     _stun_counter:	
  3316  00B3                     	ds	1
  3317                           
  3318                           	psect	dataBANK1
  3319  00B4                     __pdataBANK1:	
  3320  00B4                     _health:	
  3321  00B4                     	ds	1
  3322                           
  3323                           	psect	cstackBANK1
  3324  00A0                     __pcstackBANK1:	
  3325  00A0                     output_ir@i:	
  3326  00A0                     determine_sword_was_swung@midpoint:	
  3327                           ; 2 bytes @ 0x0
  3328                           
  3329  00A0                     display_blade_lights@i:	
  3330                           ; 2 bytes @ 0x0
  3331                           
  3332                           
  3333                           ; 2 bytes @ 0x0
  3334  00A0                     	ds	2
  3335  00A2                     determine_sword_was_swung@yh:	
  3336  00A2                     output_ir@i_251:	
  3337                           ; 1 bytes @ 0x2
  3338                           
  3339  00A2                     display_blade_lights@i_478:	
  3340                           ; 2 bytes @ 0x2
  3341                           
  3342                           
  3343                           ; 2 bytes @ 0x2
  3344  00A2                     	ds	1
  3345  00A3                     determine_sword_was_swung@zh:	
  3346                           
  3347                           ; 1 bytes @ 0x3
  3348  00A3                     	ds	1
  3349  00A4                     determine_sword_was_swung@xl:	
  3350  00A4                     output_ir@i_252:	
  3351                           ; 1 bytes @ 0x4
  3352                           
  3353  00A4                     display_blade_lights@i_480:	
  3354                           ; 2 bytes @ 0x4
  3355                           
  3356                           
  3357                           ; 2 bytes @ 0x4
  3358  00A4                     	ds	1
  3359  00A5                     determine_sword_was_swung@yl:	
  3360                           
  3361                           ; 1 bytes @ 0x5
  3362  00A5                     	ds	1
  3363  00A6                     output_ir@pkt_type:	
  3364  00A6                     determine_sword_was_swung@zl:	
  3365                           ; 1 bytes @ 0x6
  3366                           
  3367  00A6                     display_blade_lights@i_481:	
  3368                           ; 1 bytes @ 0x6
  3369                           
  3370                           
  3371                           ; 2 bytes @ 0x6
  3372  00A6                     	ds	1
  3373  00A7                     determine_sword_was_swung@pos_thresh:	
  3374                           
  3375                           ; 2 bytes @ 0x7
  3376  00A7                     	ds	1
  3377  00A8                     display_blade_lights@mode:	
  3378                           
  3379                           ; 1 bytes @ 0x8
  3380  00A8                     	ds	1
  3381  00A9                     display_blade_lights@r:	
  3382  00A9                     determine_sword_was_swung@neg_thresh:	
  3383                           ; 1 bytes @ 0x9
  3384                           
  3385                           
  3386                           ; 2 bytes @ 0x9
  3387  00A9                     	ds	1
  3388  00AA                     display_blade_lights@r_479:	
  3389                           
  3390                           ; 1 bytes @ 0xA
  3391  00AA                     	ds	1
  3392  00AB                     determine_sword_was_swung@xh:	
  3393                           
  3394                           ; 1 bytes @ 0xB
  3395  00AB                     	ds	1
  3396  00AC                     main@pkt_arr:	
  3397                           
  3398                           ; 3 bytes @ 0xC
  3399  00AC                     	ds	3
  3400  00AF                     main@i:	
  3401                           
  3402                           ; 1 bytes @ 0xF
  3403  00AF                     	ds	1
  3404                           
  3405                           	psect	cstackCOMMON
  3406  0070                     __pcstackCOMMON:	
  3407  0070                     ?_init_pic:	
  3408  0070                     ?_init_ir:	
  3409                           ; 0 bytes @ 0x0
  3410                           
  3411  0070                     ?_init_accel:	
  3412                           ; 0 bytes @ 0x0
  3413                           
  3414  0070                     ?_init_leds:	
  3415                           ; 0 bytes @ 0x0
  3416                           
  3417  0070                     ?_init_isr:	
  3418                           ; 0 bytes @ 0x0
  3419                           
  3420  0070                     ?_init_conn:	
  3421                           ; 0 bytes @ 0x0
  3422                           
  3423  0070                     ?_display_health:	
  3424                           ; 0 bytes @ 0x0
  3425                           
  3426  0070                     ?_determine_packets_to_send:	
  3427                           ; 0 bytes @ 0x0
  3428                           
  3429  0070                     ?_display_blade_lights:	
  3430                           ; 0 bytes @ 0x0
  3431                           
  3432  0070                     ?_writespi:	
  3433                           ; 0 bytes @ 0x0
  3434                           
  3435  0070                     ?_isr:	
  3436                           ; 0 bytes @ 0x0
  3437                           
  3438  0070                     ?i1_display_blade_lights:	
  3439                           ; 0 bytes @ 0x0
  3440                           
  3441  0070                     ?i1_writespi:	
  3442                           ; 0 bytes @ 0x0
  3443                           
  3444  0070                     ??i1_writespi:	
  3445                           ; 0 bytes @ 0x0
  3446                           
  3447  0070                     ?_determine_sword_was_swung:	
  3448                           ; 0 bytes @ 0x0
  3449                           
  3450  0070                     ?_determine_omega_mode_active:	
  3451                           ; 1 bytes @ 0x0
  3452                           
  3453  0070                     ?_main:	
  3454                           ; 1 bytes @ 0x0
  3455                           
  3456  0070                     ?___awdiv:	
  3457                           ; 2 bytes @ 0x0
  3458                           
  3459  0070                     ?___ftpack:	
  3460                           ; 2 bytes @ 0x0
  3461                           
  3462  0070                     ___awdiv@divisor:	
  3463                           ; 3 bytes @ 0x0
  3464                           
  3465  0070                     ___ftpack@arg:	
  3466                           ; 2 bytes @ 0x0
  3467                           
  3468                           
  3469                           ; 3 bytes @ 0x0
  3470  0070                     	ds	1
  3471  0071                     i1writespi@TempVar:	
  3472                           
  3473                           ; 1 bytes @ 0x1
  3474  0071                     	ds	1
  3475  0072                     i1writespi@data_out:	
  3476  0072                     ___awdiv@dividend:	
  3477                           ; 1 bytes @ 0x2
  3478                           
  3479                           
  3480                           ; 2 bytes @ 0x2
  3481  0072                     	ds	1
  3482  0073                     ??i1_display_blade_lights:	
  3483  0073                     ___ftpack@exp:	
  3484                           ; 0 bytes @ 0x3
  3485                           
  3486                           
  3487                           ; 1 bytes @ 0x3
  3488  0073                     	ds	1
  3489  0074                     ??___awdiv:	
  3490  0074                     ___ftpack@sign:	
  3491                           ; 0 bytes @ 0x4
  3492                           
  3493                           
  3494                           ; 1 bytes @ 0x4
  3495  0074                     	ds	1
  3496  0075                     ??___ftpack:	
  3497  0075                     ___awdiv@counter:	
  3498                           ; 0 bytes @ 0x5
  3499                           
  3500                           
  3501                           ; 1 bytes @ 0x5
  3502  0075                     	ds	1
  3503  0076                     ___awdiv@sign:	
  3504                           
  3505                           ; 1 bytes @ 0x6
  3506  0076                     	ds	1
  3507  0077                     ___awdiv@quotient:	
  3508                           
  3509                           ; 2 bytes @ 0x7
  3510  0077                     	ds	1
  3511  0078                     ?___awtoft:	
  3512  0078                     ___awtoft@c:	
  3513                           ; 3 bytes @ 0x8
  3514                           
  3515                           
  3516                           ; 2 bytes @ 0x8
  3517  0078                     	ds	3
  3518  007B                     ??___awtoft:	
  3519                           
  3520                           ; 0 bytes @ 0xB
  3521  007B                     	ds	2
  3522  007D                     ___awtoft@sign:	
  3523                           
  3524                           ; 1 bytes @ 0xD
  3525  007D                     	ds	1
  3526                           
  3527                           	psect	cstackBANK0
  3528  0020                     __pcstackBANK0:	
  3529  0020                     ?___ftmul:	
  3530  0020                     i1display_blade_lights@mode:	
  3531                           ; 3 bytes @ 0x0
  3532                           
  3533  0020                     ___ftmul@f1:	
  3534                           ; 1 bytes @ 0x0
  3535                           
  3536                           
  3537                           ; 3 bytes @ 0x0
  3538  0020                     	ds	1
  3539  0021                     i1display_blade_lights@i:	
  3540                           
  3541                           ; 2 bytes @ 0x1
  3542  0021                     	ds	2
  3543  0023                     i1display_blade_lights@i_478:	
  3544  0023                     ___ftmul@f2:	
  3545                           ; 2 bytes @ 0x3
  3546                           
  3547                           
  3548                           ; 3 bytes @ 0x3
  3549  0023                     	ds	2
  3550  0025                     i1display_blade_lights@i_480:	
  3551                           
  3552                           ; 2 bytes @ 0x5
  3553  0025                     	ds	1
  3554  0026                     ??___ftmul:	
  3555                           
  3556                           ; 0 bytes @ 0x6
  3557  0026                     	ds	1
  3558  0027                     i1display_blade_lights@i_481:	
  3559                           
  3560                           ; 2 bytes @ 0x7
  3561  0027                     	ds	2
  3562  0029                     i1display_blade_lights@r:	
  3563                           
  3564                           ; 1 bytes @ 0x9
  3565  0029                     	ds	1
  3566  002A                     ___ftmul@exp:	
  3567  002A                     i1display_blade_lights@r_479:	
  3568                           ; 1 bytes @ 0xA
  3569                           
  3570                           
  3571                           ; 1 bytes @ 0xA
  3572  002A                     	ds	1
  3573  002B                     ___ftmul@f3_as_product:	
  3574                           
  3575                           ; 3 bytes @ 0xB
  3576  002B                     	ds	3
  3577  002E                     ___ftmul@cntr:	
  3578                           
  3579                           ; 1 bytes @ 0xE
  3580  002E                     	ds	1
  3581  002F                     ___ftmul@sign:	
  3582                           
  3583                           ; 1 bytes @ 0xF
  3584  002F                     	ds	1
  3585  0030                     ?___ftge:	
  3586  0030                     ?___fttol:	
  3587                           ; 1 bit 
  3588                           
  3589  0030                     ___ftge@ff1:	
  3590                           ; 4 bytes @ 0x10
  3591                           
  3592  0030                     ___fttol@f1:	
  3593                           ; 3 bytes @ 0x10
  3594                           
  3595                           
  3596                           ; 3 bytes @ 0x10
  3597  0030                     	ds	3
  3598  0033                     ___ftge@ff2:	
  3599                           
  3600                           ; 3 bytes @ 0x13
  3601  0033                     	ds	1
  3602  0034                     ??___fttol:	
  3603                           
  3604                           ; 0 bytes @ 0x14
  3605  0034                     	ds	2
  3606  0036                     ??___ftge:	
  3607                           
  3608                           ; 0 bytes @ 0x16
  3609  0036                     	ds	2
  3610  0038                     ___fttol@sign1:	
  3611                           
  3612                           ; 1 bytes @ 0x18
  3613  0038                     	ds	1
  3614  0039                     ___fttol@lval:	
  3615                           
  3616                           ; 4 bytes @ 0x19
  3617  0039                     	ds	4
  3618  003D                     ___fttol@exp1:	
  3619                           
  3620                           ; 1 bytes @ 0x1D
  3621  003D                     	ds	1
  3622  003E                     ??_isr:	
  3623                           
  3624                           ; 0 bytes @ 0x1E
  3625  003E                     	ds	2
  3626  0040                     ??_init_pic:	
  3627  0040                     ??_init_ir:	
  3628                           ; 0 bytes @ 0x20
  3629                           
  3630  0040                     ??_init_accel:	
  3631                           ; 0 bytes @ 0x20
  3632                           
  3633  0040                     ??_init_leds:	
  3634                           ; 0 bytes @ 0x20
  3635                           
  3636  0040                     ??_init_isr:	
  3637                           ; 0 bytes @ 0x20
  3638                           
  3639  0040                     ??_init_conn:	
  3640                           ; 0 bytes @ 0x20
  3641                           
  3642  0040                     ??_display_health:	
  3643                           ; 0 bytes @ 0x20
  3644                           
  3645  0040                     ??_determine_sword_was_swung:	
  3646                           ; 0 bytes @ 0x20
  3647                           
  3648  0040                     ??_determine_omega_mode_active:	
  3649                           ; 0 bytes @ 0x20
  3650                           
  3651  0040                     ??_determine_packets_to_send:	
  3652                           ; 0 bytes @ 0x20
  3653                           
  3654  0040                     ?_output_ir:	
  3655                           ; 0 bytes @ 0x20
  3656                           
  3657  0040                     ??_writespi:	
  3658                           ; 0 bytes @ 0x20
  3659                           
  3660  0040                     output_ir@amount:	
  3661                           ; 0 bytes @ 0x20
  3662                           
  3663                           
  3664                           ; 1 bytes @ 0x20
  3665  0040                     	ds	1
  3666  0041                     ??_output_ir:	
  3667  0041                     determine_packets_to_send@packets:	
  3668                           ; 0 bytes @ 0x21
  3669                           
  3670  0041                     writespi@TempVar:	
  3671                           ; 1 bytes @ 0x21
  3672                           
  3673                           
  3674                           ; 1 bytes @ 0x21
  3675  0041                     	ds	1
  3676  0042                     writespi@data_out:	
  3677                           
  3678                           ; 1 bytes @ 0x22
  3679  0042                     	ds	1
  3680  0043                     ??_display_blade_lights:	
  3681                           
  3682                           ; 0 bytes @ 0x23
  3683  0043                     	ds	2
  3684  0045                     ??_main:	
  3685                           
  3686                           ; 0 bytes @ 0x25
  3687  0045                     	ds	3
  3688                           
  3689                           	psect	maintext
  3690  0707                     __pmaintext:	
  3691 ;;
  3692 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  3693 ;;
  3694 ;; *************** function _main *****************
  3695 ;; Defined at:
  3696 ;;		line 16 in file "../../source/main.c"
  3697 ;; Parameters:    Size  Location     Type
  3698 ;;		None
  3699 ;; Auto vars:     Size  Location     Type
  3700 ;;  pkt_arr         3   12[BANK1 ] unsigned char [3]
  3701 ;;  i               1   15[BANK1 ] unsigned char 
  3702 ;; Return value:  Size  Location     Type
  3703 ;;                  2   42[None  ] int 
  3704 ;; Registers used:
  3705 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3706 ;; Tracked objects:
  3707 ;;		On entry : B1F/0
  3708 ;;		On exit  : 0/0
  3709 ;;		Unchanged: 0/0
  3710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3712 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3713 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3714 ;;      Totals:         0       3       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3715 ;;Total ram usage:        7 bytes
  3716 ;; Hardware stack levels required when called:    5
  3717 ;; This function calls:
  3718 ;;		_determine_omega_mode_active
  3719 ;;		_determine_packets_to_send
  3720 ;;		_determine_sword_was_swung
  3721 ;;		_display_blade_lights
  3722 ;;		_display_health
  3723 ;;		_init_accel
  3724 ;;		_init_conn
  3725 ;;		_init_ir
  3726 ;;		_init_isr
  3727 ;;		_init_leds
  3728 ;;		_init_pic
  3729 ;;		_output_ir
  3730 ;; This function is called by:
  3731 ;;		Startup code after reset
  3732 ;; This function uses a non-reentrant model
  3733 ;;
  3734                           
  3735                           
  3736                           ;psect for function _main
  3737  0707                     _main:	
  3738                           
  3739                           ;main.c: 18: char pkt_arr[] = {0, 0, 0};
  3740                           
  3741                           ;incstack = 0
  3742                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3743  0707  0021               	movlb	1	; select bank1
  3744  0708  0830               	movf	main@F7231^(0+128),w
  3745  0709  00AC               	movwf	main@pkt_arr^(0+128)
  3746  070A  0831               	movf	(main@F7231+1)^(0+128),w
  3747  070B  00AD               	movwf	(main@pkt_arr+1)^(0+128)
  3748  070C  0832               	movf	(main@F7231+2)^(0+128),w
  3749  070D  00AE               	movwf	(main@pkt_arr+2)^(0+128)
  3750                           
  3751                           ;main.c: 19: char i = 0;
  3752  070E  01AF               	clrf	main@i^(0+128)
  3753                           
  3754                           ;main.c: 22: init_pic();
  3755  070F  318D  255C  3187   	fcall	_init_pic
  3756                           
  3757                           ;main.c: 26: _delay((unsigned long)((100)*(32000000/4000.0)));
  3758  0712  3005               	movlw	5
  3759  0713  0020               	movlb	0	; select bank0
  3760  0714  00C7               	movwf	??_main+2
  3761  0715  300F               	movlw	15
  3762  0716  00C6               	movwf	??_main+1
  3763  0717  30F4               	movlw	244
  3764  0718  00C5               	movwf	??_main
  3765  0719                     u2937:	
  3766  0719  0BC5               	decfsz	??_main,f
  3767  071A  2F19               	goto	u2937
  3768  071B  0BC6               	decfsz	??_main+1,f
  3769  071C  2F19               	goto	u2937
  3770  071D  0BC7               	decfsz	??_main+2,f
  3771  071E  2F19               	goto	u2937
  3772                           
  3773                           ;main.c: 29: init_ir();
  3774  071F  318D  25DD  3187   	fcall	_init_ir
  3775                           
  3776                           ;main.c: 30: init_accel();
  3777  0722  318D  2580  3187   	fcall	_init_accel
  3778                           
  3779                           ;main.c: 31: init_leds();
  3780  0725  3186  265F  3187   	fcall	_init_leds
  3781                           
  3782                           ;main.c: 32: init_isr();
  3783  0728  318D  253D  3187   	fcall	_init_isr
  3784                           
  3785                           ;main.c: 33: init_conn();
  3786  072B  318D  2535  3187   	fcall	_init_conn
  3787  072E                     l3296:	
  3788                           ;main.c: 50: while(1)
  3789                           
  3790                           
  3791                           ;main.c: 51: {
  3792                           ;main.c: 53: display_health();
  3793  072E  318E  2652  3187   	fcall	_display_health
  3794                           
  3795                           ;main.c: 55: if( determine_sword_was_swung() && ( ( health > 0) || determine_omega_mode_
      +                          active() ) )
  3796  0731  318F  2777  3187   	fcall	_determine_sword_was_swung
  3797  0734  3A00               	xorlw	0
  3798  0735  1903               	skipnz
  3799  0736  2F7A               	goto	l3330
  3800  0737  0021               	movlb	1	; select bank1
  3801  0738  0834               	movf	_health^(0+128),w
  3802  0739  1D03               	btfss	3,2
  3803  073A  2F41               	goto	l3304
  3804  073B  318D  2538  3187   	fcall	_determine_omega_mode_active
  3805  073E  3A00               	xorlw	0
  3806  073F  1903               	skipnz
  3807  0740  2F7A               	goto	l3330
  3808  0741                     l3304:	
  3809                           
  3810                           ;main.c: 56: {
  3811                           ;main.c: 58: if(!determine_omega_mode_active())
  3812  0741  318D  2538  3187   	fcall	_determine_omega_mode_active
  3813  0744  3A00               	xorlw	0
  3814  0745  1D03               	skipz
  3815  0746  2F76               	goto	l3328
  3816                           
  3817                           ;main.c: 59: {
  3818                           ;main.c: 60: determine_packets_to_send(&pkt_arr);
  3819  0747  30AC               	movlw	(low (main@pkt_arr| 0))& (0+255)
  3820  0748  318D  25B4  3187   	fcall	_determine_packets_to_send
  3821                           
  3822                           ;main.c: 62: for(i = 3; i > 0; --i)
  3823  074B  3003               	movlw	3
  3824  074C  0020               	movlb	0	; select bank0
  3825  074D  00C5               	movwf	??_main
  3826  074E  0845               	movf	??_main,w
  3827  074F  0021               	movlb	1	; select bank1
  3828  0750  00AF               	movwf	main@i^(0+128)
  3829  0751  082F               	movf	main@i^(0+128),w
  3830  0752  1903               	btfsc	3,2
  3831  0753  2F74               	goto	l3326
  3832  0754                     l3314:	
  3833                           
  3834                           ;main.c: 63: {
  3835                           ;main.c: 64: if(pkt_arr[i-1] > 0)
  3836  0754  082F               	movf	main@i^(0+128),w
  3837  0755  3EFF               	addlw	255
  3838  0756  3EAC               	addlw	(low (main@pkt_arr| 0))& (0+255)
  3839  0757  0086               	movwf	6
  3840  0758  0187               	clrf	7
  3841  0759  0801               	movf	1,w
  3842  075A  1903               	btfsc	3,2
  3843  075B  2F6E               	goto	l3322
  3844                           
  3845                           ;main.c: 65: {
  3846                           ;main.c: 66: GIE = 0;
  3847  075C  138B               	bcf	11,7	;volatile
  3848                           
  3849                           ;main.c: 67: output_ir(i-1, pkt_arr[i-1]);
  3850  075D  082F               	movf	main@i^(0+128),w
  3851  075E  3EFF               	addlw	255
  3852  075F  3EAC               	addlw	(low (main@pkt_arr| 0))& (0+255)
  3853  0760  0086               	movwf	6
  3854  0761  0187               	clrf	7
  3855  0762  0801               	movf	1,w
  3856  0763  0020               	movlb	0	; select bank0
  3857  0764  00C5               	movwf	??_main
  3858  0765  0845               	movf	??_main,w
  3859  0766  00C0               	movwf	output_ir@amount
  3860  0767  0021               	movlb	1	; select bank1
  3861  0768  082F               	movf	main@i^(0+128),w
  3862  0769  3EFF               	addlw	255
  3863  076A  3184  2466  3187   	fcall	_output_ir
  3864                           
  3865                           ;main.c: 68: GIE = 1;
  3866  076D  178B               	bsf	11,7	;volatile
  3867  076E                     l3322:	
  3868  076E  3001               	movlw	1
  3869  076F  0021               	movlb	1	; select bank1
  3870  0770  02AF               	subwf	main@i^(0+128),f
  3871  0771  082F               	movf	main@i^(0+128),w
  3872  0772  1D03               	btfss	3,2
  3873  0773  2F54               	goto	l3314
  3874  0774                     l3326:	
  3875                           
  3876                           ;main.c: 69: }
  3877                           ;main.c: 70: }
  3878                           ;main.c: 72: display_blade_lights(0);
  3879  0774  3000               	movlw	0
  3880  0775  2F77               	goto	L1
  3881  0776                     l3328:	
  3882                           ;main.c: 73: }
  3883                           
  3884                           
  3885                           ;main.c: 74: else
  3886                           ;main.c: 75: {
  3887                           ;main.c: 76: display_blade_lights(1);
  3888  0776  3001               	movlw	1
  3889  0777                     L1:	
  3890  0777  3181  2177  3187   	fcall	_display_blade_lights
  3891  077A                     l3330:	
  3892                           
  3893                           ;main.c: 77: }
  3894                           ;main.c: 78: }
  3895                           ;main.c: 81: GIE = 0;
  3896  077A  138B               	bcf	11,7	;volatile
  3897                           
  3898                           ;main.c: 82: while( ( stun_counter > 0 ) && !determine_omega_mode_active() )
  3899  077B  2F8E               	goto	l3338
  3900  077C                     l55:	
  3901                           
  3902                           ;main.c: 83: {
  3903                           ;main.c: 84: GIE = 1;
  3904  077C  178B               	bsf	11,7	;volatile
  3905                           
  3906                           ;main.c: 85: _delay((unsigned long)((100)*(32000000/4000.0)));
  3907  077D  3005               	movlw	5
  3908  077E  0020               	movlb	0	; select bank0
  3909  077F  00C7               	movwf	??_main+2
  3910  0780  300F               	movlw	15
  3911  0781  00C6               	movwf	??_main+1
  3912  0782  30F4               	movlw	244
  3913  0783  00C5               	movwf	??_main
  3914  0784                     u2947:	
  3915  0784  0BC5               	decfsz	??_main,f
  3916  0785  2F84               	goto	u2947
  3917  0786  0BC6               	decfsz	??_main+1,f
  3918  0787  2F84               	goto	u2947
  3919  0788  0BC7               	decfsz	??_main+2,f
  3920  0789  2F84               	goto	u2947
  3921                           
  3922                           ;main.c: 86: GIE = 0;
  3923  078A  138B               	bcf	11,7	;volatile
  3924                           
  3925                           ;main.c: 87: --stun_counter;
  3926  078B  3001               	movlw	1
  3927  078C  0021               	movlb	1	; select bank1
  3928  078D  02B3               	subwf	_stun_counter^(0+128),f
  3929  078E                     l3338:	
  3930  078E  0021               	movlb	1	; select bank1
  3931  078F  0833               	movf	_stun_counter^(0+128),w
  3932  0790  1903               	btfsc	3,2
  3933  0791  2F98               	goto	l58
  3934  0792  318D  2538  3187   	fcall	_determine_omega_mode_active
  3935  0795  3A00               	xorlw	0
  3936  0796  1903               	skipnz
  3937  0797  2F7C               	goto	l55
  3938  0798                     l58:	
  3939                           
  3940                           ;main.c: 88: }
  3941                           ;main.c: 89: GIE = 1;
  3942  0798  178B               	bsf	11,7	;volatile
  3943  0799  2F2E               	goto	l3296
  3944  079A                     __end_of_main:	
  3945                           
  3946                           	psect	text1
  3947  0466                     __ptext1:	
  3948 ;; *************** function _output_ir *****************
  3949 ;; Defined at:
  3950 ;;		line 41 in file "../../source/ir.c"
  3951 ;; Parameters:    Size  Location     Type
  3952 ;;  pkt_type        1    wreg     unsigned char 
  3953 ;;  amount          1   32[BANK0 ] unsigned char 
  3954 ;; Auto vars:     Size  Location     Type
  3955 ;;  pkt_type        1    6[BANK1 ] unsigned char 
  3956 ;;  i               2    4[BANK1 ] int 
  3957 ;;  i               2    2[BANK1 ] int 
  3958 ;;  i               2    0[BANK1 ] int 
  3959 ;; Return value:  Size  Location     Type
  3960 ;;		None               void
  3961 ;; Registers used:
  3962 ;;		wreg, status,2, status,0
  3963 ;; Tracked objects:
  3964 ;;		On entry : 0/0
  3965 ;;		On exit  : 0/0
  3966 ;;		Unchanged: 0/0
  3967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3968 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3969 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3970 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3971 ;;      Totals:         0       3       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3972 ;;Total ram usage:       10 bytes
  3973 ;; Hardware stack levels used:    1
  3974 ;; Hardware stack levels required when called:    3
  3975 ;; This function calls:
  3976 ;;		Nothing
  3977 ;; This function is called by:
  3978 ;;		_main
  3979 ;; This function uses a non-reentrant model
  3980 ;;
  3981                           
  3982                           
  3983                           ;psect for function _output_ir
  3984  0466                     _output_ir:	
  3985                           
  3986                           ;incstack = 0
  3987                           ; Regs used in _output_ir: [wreg+status,2+status,0]
  3988                           ;output_ir@pkt_type stored from wreg
  3989  0466  0021               	movlb	1	; select bank1
  3990  0467  00A6               	movwf	output_ir@pkt_type^(0+128)
  3991                           
  3992                           ;ir.c: 43: if(pkt_type == 0)
  3993  0468  0826               	movf	output_ir@pkt_type^(0+128),w
  3994  0469  1D03               	btfss	3,2
  3995  046A  2CD4               	goto	l3158
  3996                           
  3997                           ;ir.c: 44: {
  3998                           ;ir.c: 45: for(int i = 0;i < amount;i++){
  3999  046B  01A0               	clrf	output_ir@i^(0+128)
  4000  046C  01A1               	clrf	(output_ir@i+1)^(0+128)
  4001  046D                     l274:	
  4002  046D  0821               	movf	(output_ir@i+1)^(0+128),w
  4003  046E  3A80               	xorlw	128
  4004  046F  0020               	movlb	0	; select bank0
  4005  0470  00C1               	movwf	??_output_ir
  4006  0471  3080               	movlw	128
  4007  0472  0241               	subwf	??_output_ir,w
  4008  0473  1D03               	skipz
  4009  0474  2C78               	goto	u2655
  4010  0475  0840               	movf	output_ir@amount,w
  4011  0476  0021               	movlb	1	; select bank1
  4012  0477  0220               	subwf	output_ir@i^(0+128),w
  4013  0478                     u2655:	
  4014  0478  1803               	btfsc	3,0
  4015  0479  0008               	return
  4016                           
  4017                           ;ir.c: 47: P1MDLBIT = 1;
  4018  047A  003D               	movlb	29	; select bank29
  4019  047B  1692               	bsf	18,5	;volatile
  4020                           
  4021                           ;ir.c: 48: _delay((unsigned long)((178)*(32000000/4000000.0)));
  4022  047C  30ED               	movlw	237
  4023  047D  0020               	movlb	0	; select bank0
  4024  047E  00C1               	movwf	??_output_ir
  4025  047F                     u2957:	
  4026  047F  3200               	nop2
  4027  0480  0000               	nop
  4028  0481  0BC1               	decfsz	??_output_ir,f
  4029  0482  2C7F               	goto	u2957
  4030  0483  0000               	nop
  4031                           
  4032                           ;ir.c: 49: P1MDLBIT = 0;
  4033  0484  003D               	movlb	29	; select bank29
  4034  0485  1292               	bcf	18,5	;volatile
  4035                           
  4036                           ;ir.c: 50: _delay((unsigned long)((2678-178)*(32000000/4000000.0)));
  4037  0486  301A               	movlw	26
  4038  0487  0020               	movlb	0	; select bank0
  4039  0488  00C2               	movwf	??_output_ir+1
  4040  0489  30F8               	movlw	248
  4041  048A  00C1               	movwf	??_output_ir
  4042  048B                     u2967:	
  4043  048B  0BC1               	decfsz	??_output_ir,f
  4044  048C  2C8B               	goto	u2967
  4045  048D  0BC2               	decfsz	??_output_ir+1,f
  4046  048E  2C8B               	goto	u2967
  4047  048F  0000               	nop
  4048                           
  4049                           ;ir.c: 53: P1MDLBIT = 1;
  4050  0490  003D               	movlb	29	; select bank29
  4051  0491  1692               	bsf	18,5	;volatile
  4052                           
  4053                           ;ir.c: 54: _delay((unsigned long)((357)*(32000000/4000000.0)));
  4054  0492  3004               	movlw	4
  4055  0493  0020               	movlb	0	; select bank0
  4056  0494  00C2               	movwf	??_output_ir+1
  4057  0495  30B4               	movlw	180
  4058  0496  00C1               	movwf	??_output_ir
  4059  0497                     u2977:	
  4060  0497  0BC1               	decfsz	??_output_ir,f
  4061  0498  2C97               	goto	u2977
  4062  0499  0BC2               	decfsz	??_output_ir+1,f
  4063  049A  2C97               	goto	u2977
  4064  049B  0000               	nop
  4065                           
  4066                           ;ir.c: 55: P1MDLBIT = 0;
  4067  049C  003D               	movlb	29	; select bank29
  4068  049D  1292               	bcf	18,5	;volatile
  4069                           
  4070                           ;ir.c: 56: _delay((unsigned long)((2678-357)*(32000000/4000000.0)));
  4071  049E  3019               	movlw	25
  4072  049F  0020               	movlb	0	; select bank0
  4073  04A0  00C2               	movwf	??_output_ir+1
  4074  04A1  301B               	movlw	27
  4075  04A2  00C1               	movwf	??_output_ir
  4076  04A3                     u2987:	
  4077  04A3  0BC1               	decfsz	??_output_ir,f
  4078  04A4  2CA3               	goto	u2987
  4079  04A5  0BC2               	decfsz	??_output_ir+1,f
  4080  04A6  2CA3               	goto	u2987
  4081  04A7  3200               	nop2
  4082                           
  4083                           ;ir.c: 57: P1MDLBIT = 1;
  4084  04A8  003D               	movlb	29	; select bank29
  4085  04A9  1692               	bsf	18,5	;volatile
  4086                           
  4087                           ;ir.c: 58: _delay((unsigned long)((357)*(32000000/4000000.0)));
  4088  04AA  3004               	movlw	4
  4089  04AB  0020               	movlb	0	; select bank0
  4090  04AC  00C2               	movwf	??_output_ir+1
  4091  04AD  30B4               	movlw	180
  4092  04AE  00C1               	movwf	??_output_ir
  4093  04AF                     u2997:	
  4094  04AF  0BC1               	decfsz	??_output_ir,f
  4095  04B0  2CAF               	goto	u2997
  4096  04B1  0BC2               	decfsz	??_output_ir+1,f
  4097  04B2  2CAF               	goto	u2997
  4098  04B3  0000               	nop
  4099                           
  4100                           ;ir.c: 59: P1MDLBIT = 0;
  4101  04B4  003D               	movlb	29	; select bank29
  4102  04B5  1292               	bcf	18,5	;volatile
  4103                           
  4104                           ;ir.c: 60: _delay((unsigned long)((2678-357)*(32000000/4000000.0)));
  4105  04B6  3019               	movlw	25
  4106  04B7  0020               	movlb	0	; select bank0
  4107  04B8  00C2               	movwf	??_output_ir+1
  4108  04B9  301B               	movlw	27
  4109  04BA  00C1               	movwf	??_output_ir
  4110  04BB                     u3007:	
  4111  04BB  0BC1               	decfsz	??_output_ir,f
  4112  04BC  2CBB               	goto	u3007
  4113  04BD  0BC2               	decfsz	??_output_ir+1,f
  4114  04BE  2CBB               	goto	u3007
  4115  04BF  3200               	nop2
  4116                           
  4117                           ;ir.c: 63: P1MDLBIT = 1;
  4118  04C0  003D               	movlb	29	; select bank29
  4119  04C1  1692               	bsf	18,5	;volatile
  4120                           
  4121                           ;ir.c: 64: _delay((unsigned long)((2678)*(32000000/4000000.0)));
  4122  04C2  301C               	movlw	28
  4123  04C3  0020               	movlb	0	; select bank0
  4124  04C4  00C2               	movwf	??_output_ir+1
  4125  04C5  30D1               	movlw	209
  4126  04C6  00C1               	movwf	??_output_ir
  4127  04C7                     u3017:	
  4128  04C7  0BC1               	decfsz	??_output_ir,f
  4129  04C8  2CC7               	goto	u3017
  4130  04C9  0BC2               	decfsz	??_output_ir+1,f
  4131  04CA  2CC7               	goto	u3017
  4132  04CB  3200               	nop2
  4133                           
  4134                           ;ir.c: 65: P1MDLBIT = 0;
  4135  04CC  003D               	movlb	29	; select bank29
  4136  04CD  1292               	bcf	18,5	;volatile
  4137  04CE  3001               	movlw	1
  4138  04CF  0021               	movlb	1	; select bank1
  4139  04D0  07A0               	addwf	output_ir@i^(0+128),f
  4140  04D1  3000               	movlw	0
  4141  04D2  3DA1               	addwfc	(output_ir@i+1)^(0+128),f
  4142  04D3  2C6D               	goto	l274
  4143  04D4                     l3158:	
  4144                           ;ir.c: 66: }
  4145                           ;ir.c: 68: }
  4146                           
  4147                           
  4148                           ;ir.c: 69: else if(pkt_type == 1)
  4149  04D4  0021               	movlb	1	; select bank1
  4150  04D5  0326               	decf	output_ir@pkt_type^(0+128),w
  4151  04D6  1D03               	btfss	3,2
  4152  04D7  2D41               	goto	l3178
  4153                           
  4154                           ;ir.c: 70: {
  4155                           ;ir.c: 71: for(int i = 0;i < amount;i++){
  4156  04D8  01A2               	clrf	output_ir@i_251^(0+128)
  4157  04D9  01A3               	clrf	(output_ir@i_251+1)^(0+128)
  4158  04DA                     l279:	
  4159  04DA  0823               	movf	(output_ir@i_251+1)^(0+128),w
  4160  04DB  3A80               	xorlw	128
  4161  04DC  0020               	movlb	0	; select bank0
  4162  04DD  00C1               	movwf	??_output_ir
  4163  04DE  3080               	movlw	128
  4164  04DF  0241               	subwf	??_output_ir,w
  4165  04E0  1D03               	skipz
  4166  04E1  2CE5               	goto	u2675
  4167  04E2  0840               	movf	output_ir@amount,w
  4168  04E3  0021               	movlb	1	; select bank1
  4169  04E4  0222               	subwf	output_ir@i_251^(0+128),w
  4170  04E5                     u2675:	
  4171  04E5  1803               	btfsc	3,0
  4172  04E6  0008               	return
  4173                           
  4174                           ;ir.c: 73: P1MDLBIT = 1;
  4175  04E7  003D               	movlb	29	; select bank29
  4176  04E8  1692               	bsf	18,5	;volatile
  4177                           
  4178                           ;ir.c: 74: _delay((unsigned long)((178)*(32000000/4000000.0)));
  4179  04E9  30ED               	movlw	237
  4180  04EA  0020               	movlb	0	; select bank0
  4181  04EB  00C1               	movwf	??_output_ir
  4182  04EC                     u3027:	
  4183  04EC  3200               	nop2
  4184  04ED  0000               	nop
  4185  04EE  0BC1               	decfsz	??_output_ir,f
  4186  04EF  2CEC               	goto	u3027
  4187  04F0  0000               	nop
  4188                           
  4189                           ;ir.c: 75: P1MDLBIT = 0;
  4190  04F1  003D               	movlb	29	; select bank29
  4191  04F2  1292               	bcf	18,5	;volatile
  4192                           
  4193                           ;ir.c: 76: _delay((unsigned long)((2678-178)*(32000000/4000000.0)));
  4194  04F3  301A               	movlw	26
  4195  04F4  0020               	movlb	0	; select bank0
  4196  04F5  00C2               	movwf	??_output_ir+1
  4197  04F6  30F8               	movlw	248
  4198  04F7  00C1               	movwf	??_output_ir
  4199  04F8                     u3037:	
  4200  04F8  0BC1               	decfsz	??_output_ir,f
  4201  04F9  2CF8               	goto	u3037
  4202  04FA  0BC2               	decfsz	??_output_ir+1,f
  4203  04FB  2CF8               	goto	u3037
  4204  04FC  0000               	nop
  4205                           
  4206                           ;ir.c: 79: P1MDLBIT = 1;
  4207  04FD  003D               	movlb	29	; select bank29
  4208  04FE  1692               	bsf	18,5	;volatile
  4209                           
  4210                           ;ir.c: 80: _delay((unsigned long)((535)*(32000000/4000000.0)));
  4211  04FF  3006               	movlw	6
  4212  0500  0020               	movlb	0	; select bank0
  4213  0501  00C2               	movwf	??_output_ir+1
  4214  0502  308D               	movlw	141
  4215  0503  00C1               	movwf	??_output_ir
  4216  0504                     u3047:	
  4217  0504  0BC1               	decfsz	??_output_ir,f
  4218  0505  2D04               	goto	u3047
  4219  0506  0BC2               	decfsz	??_output_ir+1,f
  4220  0507  2D04               	goto	u3047
  4221  0508  3200               	nop2
  4222                           
  4223                           ;ir.c: 81: P1MDLBIT = 0;
  4224  0509  003D               	movlb	29	; select bank29
  4225  050A  1292               	bcf	18,5	;volatile
  4226                           
  4227                           ;ir.c: 82: _delay((unsigned long)((2678-535)*(32000000/4000000.0)));
  4228  050B  3017               	movlw	23
  4229  050C  0020               	movlb	0	; select bank0
  4230  050D  00C2               	movwf	??_output_ir+1
  4231  050E  3042               	movlw	66
  4232  050F  00C1               	movwf	??_output_ir
  4233  0510                     u3057:	
  4234  0510  0BC1               	decfsz	??_output_ir,f
  4235  0511  2D10               	goto	u3057
  4236  0512  0BC2               	decfsz	??_output_ir+1,f
  4237  0513  2D10               	goto	u3057
  4238  0514  0000               	nop
  4239                           
  4240                           ;ir.c: 83: P1MDLBIT = 1;
  4241  0515  003D               	movlb	29	; select bank29
  4242  0516  1692               	bsf	18,5	;volatile
  4243                           
  4244                           ;ir.c: 84: _delay((unsigned long)((535)*(32000000/4000000.0)));
  4245  0517  3006               	movlw	6
  4246  0518  0020               	movlb	0	; select bank0
  4247  0519  00C2               	movwf	??_output_ir+1
  4248  051A  308D               	movlw	141
  4249  051B  00C1               	movwf	??_output_ir
  4250  051C                     u3067:	
  4251  051C  0BC1               	decfsz	??_output_ir,f
  4252  051D  2D1C               	goto	u3067
  4253  051E  0BC2               	decfsz	??_output_ir+1,f
  4254  051F  2D1C               	goto	u3067
  4255  0520  3200               	nop2
  4256                           
  4257                           ;ir.c: 85: P1MDLBIT = 0;
  4258  0521  003D               	movlb	29	; select bank29
  4259  0522  1292               	bcf	18,5	;volatile
  4260                           
  4261                           ;ir.c: 86: _delay((unsigned long)((2678-535)*(32000000/4000000.0)));
  4262  0523  3017               	movlw	23
  4263  0524  0020               	movlb	0	; select bank0
  4264  0525  00C2               	movwf	??_output_ir+1
  4265  0526  3042               	movlw	66
  4266  0527  00C1               	movwf	??_output_ir
  4267  0528                     u3077:	
  4268  0528  0BC1               	decfsz	??_output_ir,f
  4269  0529  2D28               	goto	u3077
  4270  052A  0BC2               	decfsz	??_output_ir+1,f
  4271  052B  2D28               	goto	u3077
  4272  052C  0000               	nop
  4273                           
  4274                           ;ir.c: 89: P1MDLBIT = 1;
  4275  052D  003D               	movlb	29	; select bank29
  4276  052E  1692               	bsf	18,5	;volatile
  4277                           
  4278                           ;ir.c: 90: _delay((unsigned long)((2678)*(32000000/4000000.0)));
  4279  052F  301C               	movlw	28
  4280  0530  0020               	movlb	0	; select bank0
  4281  0531  00C2               	movwf	??_output_ir+1
  4282  0532  30D1               	movlw	209
  4283  0533  00C1               	movwf	??_output_ir
  4284  0534                     u3087:	
  4285  0534  0BC1               	decfsz	??_output_ir,f
  4286  0535  2D34               	goto	u3087
  4287  0536  0BC2               	decfsz	??_output_ir+1,f
  4288  0537  2D34               	goto	u3087
  4289  0538  3200               	nop2
  4290                           
  4291                           ;ir.c: 91: P1MDLBIT = 0;
  4292  0539  003D               	movlb	29	; select bank29
  4293  053A  1292               	bcf	18,5	;volatile
  4294  053B  3001               	movlw	1
  4295  053C  0021               	movlb	1	; select bank1
  4296  053D  07A2               	addwf	output_ir@i_251^(0+128),f
  4297  053E  3000               	movlw	0
  4298  053F  3DA3               	addwfc	(output_ir@i_251+1)^(0+128),f
  4299  0540  2CDA               	goto	l279
  4300  0541                     l3178:	
  4301                           ;ir.c: 92: }
  4302                           ;ir.c: 93: }
  4303                           
  4304                           
  4305                           ;ir.c: 94: else
  4306                           ;ir.c: 95: {
  4307                           ;ir.c: 96: for(int i = 0;i < amount;i++){
  4308  0541  0021               	movlb	1	; select bank1
  4309  0542  01A4               	clrf	output_ir@i_252^(0+128)
  4310  0543  01A5               	clrf	(output_ir@i_252+1)^(0+128)
  4311  0544                     l283:	
  4312  0544  0825               	movf	(output_ir@i_252+1)^(0+128),w
  4313  0545  3A80               	xorlw	128
  4314  0546  0020               	movlb	0	; select bank0
  4315  0547  00C1               	movwf	??_output_ir
  4316  0548  3080               	movlw	128
  4317  0549  0241               	subwf	??_output_ir,w
  4318  054A  1D03               	skipz
  4319  054B  2D4F               	goto	u2685
  4320  054C  0840               	movf	output_ir@amount,w
  4321  054D  0021               	movlb	1	; select bank1
  4322  054E  0224               	subwf	output_ir@i_252^(0+128),w
  4323  054F                     u2685:	
  4324  054F  1803               	btfsc	3,0
  4325  0550  0008               	return
  4326                           
  4327                           ;ir.c: 98: P1MDLBIT = 1;
  4328  0551  003D               	movlb	29	; select bank29
  4329  0552  1692               	bsf	18,5	;volatile
  4330                           
  4331                           ;ir.c: 99: _delay((unsigned long)((178)*(32000000/4000000.0)));
  4332  0553  30ED               	movlw	237
  4333  0554  0020               	movlb	0	; select bank0
  4334  0555  00C1               	movwf	??_output_ir
  4335  0556                     u3097:	
  4336  0556  3200               	nop2
  4337  0557  0000               	nop
  4338  0558  0BC1               	decfsz	??_output_ir,f
  4339  0559  2D56               	goto	u3097
  4340  055A  0000               	nop
  4341                           
  4342                           ;ir.c: 100: P1MDLBIT = 0;
  4343  055B  003D               	movlb	29	; select bank29
  4344  055C  1292               	bcf	18,5	;volatile
  4345                           
  4346                           ;ir.c: 101: _delay((unsigned long)((2678-178)*(32000000/4000000.0)));
  4347  055D  301A               	movlw	26
  4348  055E  0020               	movlb	0	; select bank0
  4349  055F  00C2               	movwf	??_output_ir+1
  4350  0560  30F8               	movlw	248
  4351  0561  00C1               	movwf	??_output_ir
  4352  0562                     u3107:	
  4353  0562  0BC1               	decfsz	??_output_ir,f
  4354  0563  2D62               	goto	u3107
  4355  0564  0BC2               	decfsz	??_output_ir+1,f
  4356  0565  2D62               	goto	u3107
  4357  0566  0000               	nop
  4358                           
  4359                           ;ir.c: 104: P1MDLBIT = 1;
  4360  0567  003D               	movlb	29	; select bank29
  4361  0568  1692               	bsf	18,5	;volatile
  4362                           
  4363                           ;ir.c: 105: _delay((unsigned long)((714)*(32000000/4000000.0)));
  4364  0569  3008               	movlw	8
  4365  056A  0020               	movlb	0	; select bank0
  4366  056B  00C2               	movwf	??_output_ir+1
  4367  056C  3069               	movlw	105
  4368  056D  00C1               	movwf	??_output_ir
  4369  056E                     u3117:	
  4370  056E  0BC1               	decfsz	??_output_ir,f
  4371  056F  2D6E               	goto	u3117
  4372  0570  0BC2               	decfsz	??_output_ir+1,f
  4373  0571  2D6E               	goto	u3117
  4374  0572  3200               	nop2
  4375                           
  4376                           ;ir.c: 106: P1MDLBIT = 0;
  4377  0573  003D               	movlb	29	; select bank29
  4378  0574  1292               	bcf	18,5	;volatile
  4379                           
  4380                           ;ir.c: 107: _delay((unsigned long)((2678-714)*(32000000/4000000.0)));
  4381  0575  3015               	movlw	21
  4382  0576  0020               	movlb	0	; select bank0
  4383  0577  00C2               	movwf	??_output_ir+1
  4384  0578  3066               	movlw	102
  4385  0579  00C1               	movwf	??_output_ir
  4386  057A                     u3127:	
  4387  057A  0BC1               	decfsz	??_output_ir,f
  4388  057B  2D7A               	goto	u3127
  4389  057C  0BC2               	decfsz	??_output_ir+1,f
  4390  057D  2D7A               	goto	u3127
  4391  057E  0000               	nop
  4392                           
  4393                           ;ir.c: 108: P1MDLBIT = 1;
  4394  057F  003D               	movlb	29	; select bank29
  4395  0580  1692               	bsf	18,5	;volatile
  4396                           
  4397                           ;ir.c: 109: _delay((unsigned long)((714)*(32000000/4000000.0)));
  4398  0581  3008               	movlw	8
  4399  0582  0020               	movlb	0	; select bank0
  4400  0583  00C2               	movwf	??_output_ir+1
  4401  0584  3069               	movlw	105
  4402  0585  00C1               	movwf	??_output_ir
  4403  0586                     u3137:	
  4404  0586  0BC1               	decfsz	??_output_ir,f
  4405  0587  2D86               	goto	u3137
  4406  0588  0BC2               	decfsz	??_output_ir+1,f
  4407  0589  2D86               	goto	u3137
  4408  058A  3200               	nop2
  4409                           
  4410                           ;ir.c: 110: P1MDLBIT = 0;
  4411  058B  003D               	movlb	29	; select bank29
  4412  058C  1292               	bcf	18,5	;volatile
  4413                           
  4414                           ;ir.c: 111: _delay((unsigned long)((2678-714)*(32000000/4000000.0)));
  4415  058D  3015               	movlw	21
  4416  058E  0020               	movlb	0	; select bank0
  4417  058F  00C2               	movwf	??_output_ir+1
  4418  0590  3066               	movlw	102
  4419  0591  00C1               	movwf	??_output_ir
  4420  0592                     u3147:	
  4421  0592  0BC1               	decfsz	??_output_ir,f
  4422  0593  2D92               	goto	u3147
  4423  0594  0BC2               	decfsz	??_output_ir+1,f
  4424  0595  2D92               	goto	u3147
  4425  0596  0000               	nop
  4426                           
  4427                           ;ir.c: 114: P1MDLBIT = 1;
  4428  0597  003D               	movlb	29	; select bank29
  4429  0598  1692               	bsf	18,5	;volatile
  4430                           
  4431                           ;ir.c: 115: _delay((unsigned long)((2678)*(32000000/4000000.0)));
  4432  0599  301C               	movlw	28
  4433  059A  0020               	movlb	0	; select bank0
  4434  059B  00C2               	movwf	??_output_ir+1
  4435  059C  30D1               	movlw	209
  4436  059D  00C1               	movwf	??_output_ir
  4437  059E                     u3157:	
  4438  059E  0BC1               	decfsz	??_output_ir,f
  4439  059F  2D9E               	goto	u3157
  4440  05A0  0BC2               	decfsz	??_output_ir+1,f
  4441  05A1  2D9E               	goto	u3157
  4442  05A2  3200               	nop2
  4443                           
  4444                           ;ir.c: 116: P1MDLBIT = 0;
  4445  05A3  003D               	movlb	29	; select bank29
  4446  05A4  1292               	bcf	18,5	;volatile
  4447  05A5  3001               	movlw	1
  4448  05A6  0021               	movlb	1	; select bank1
  4449  05A7  07A4               	addwf	output_ir@i_252^(0+128),f
  4450  05A8  3000               	movlw	0
  4451  05A9  3DA5               	addwfc	(output_ir@i_252+1)^(0+128),f
  4452  05AA  2D44               	goto	l283
  4453  05AB                     __end_of_output_ir:	
  4454                           
  4455                           	psect	text2
  4456  0D5C                     __ptext2:	
  4457 ;; *************** function _init_pic *****************
  4458 ;; Defined at:
  4459 ;;		line 220 in file "../../source/main.c"
  4460 ;; Parameters:    Size  Location     Type
  4461 ;;		None
  4462 ;; Auto vars:     Size  Location     Type
  4463 ;;		None
  4464 ;; Return value:  Size  Location     Type
  4465 ;;		None               void
  4466 ;; Registers used:
  4467 ;;		wreg, status,2, status,0
  4468 ;; Tracked objects:
  4469 ;;		On entry : 0/0
  4470 ;;		On exit  : 0/0
  4471 ;;		Unchanged: 0/0
  4472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4475 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4476 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4477 ;;Total ram usage:        1 bytes
  4478 ;; Hardware stack levels used:    1
  4479 ;; Hardware stack levels required when called:    3
  4480 ;; This function calls:
  4481 ;;		Nothing
  4482 ;; This function is called by:
  4483 ;;		_main
  4484 ;; This function uses a non-reentrant model
  4485 ;;
  4486                           
  4487                           
  4488                           ;psect for function _init_pic
  4489  0D5C                     _init_pic:	
  4490                           
  4491                           ;main.c: 222: ANSELA = 0;
  4492                           
  4493                           ;incstack = 0
  4494                           ; Regs used in _init_pic: [wreg+status,2+status,0]
  4495  0D5C  0023               	movlb	3	; select bank3
  4496  0D5D  018C               	clrf	12	;volatile
  4497                           
  4498                           ;main.c: 223: ANSELB = 0;
  4499  0D5E  018D               	clrf	13	;volatile
  4500                           
  4501                           ;main.c: 226: TRISB &= 0b11110011;
  4502  0D5F  30F3               	movlw	243
  4503  0D60  0020               	movlb	0	; select bank0
  4504  0D61  00C0               	movwf	??_init_pic
  4505  0D62  0840               	movf	??_init_pic,w
  4506  0D63  0021               	movlb	1	; select bank1
  4507  0D64  058D               	andwf	13,f	;volatile
  4508                           
  4509                           ;main.c: 229: OSCCON |= 0b11111000;
  4510  0D65  30F8               	movlw	248
  4511  0D66  0020               	movlb	0	; select bank0
  4512  0D67  00C0               	movwf	??_init_pic
  4513  0D68  0840               	movf	??_init_pic,w
  4514  0D69  0021               	movlb	1	; select bank1
  4515  0D6A  0499               	iorwf	25,f	;volatile
  4516                           
  4517                           ;main.c: 232: GIE = 1;
  4518  0D6B  178B               	bsf	11,7	;volatile
  4519  0D6C  0008               	return
  4520  0D6D                     __end_of_init_pic:	
  4521                           
  4522                           	psect	text3
  4523  065F                     __ptext3:	
  4524 ;; *************** function _init_leds *****************
  4525 ;; Defined at:
  4526 ;;		line 5 in file "../../source/lighting.c"
  4527 ;; Parameters:    Size  Location     Type
  4528 ;;		None
  4529 ;; Auto vars:     Size  Location     Type
  4530 ;;		None
  4531 ;; Return value:  Size  Location     Type
  4532 ;;		None               void
  4533 ;; Registers used:
  4534 ;;		wreg, status,2, status,0
  4535 ;; Tracked objects:
  4536 ;;		On entry : 0/0
  4537 ;;		On exit  : 0/0
  4538 ;;		Unchanged: 0/0
  4539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4542 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4543 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4544 ;;Total ram usage:        1 bytes
  4545 ;; Hardware stack levels used:    1
  4546 ;; Hardware stack levels required when called:    3
  4547 ;; This function calls:
  4548 ;;		Nothing
  4549 ;; This function is called by:
  4550 ;;		_main
  4551 ;; This function uses a non-reentrant model
  4552 ;;
  4553                           
  4554                           
  4555                           ;psect for function _init_leds
  4556  065F                     _init_leds:	
  4557                           
  4558                           ;lighting.c: 8: TRISC &= 0b10001111;
  4559                           
  4560                           ;incstack = 0
  4561                           ; Regs used in _init_leds: [wreg+status,2+status,0]
  4562  065F  308F               	movlw	143
  4563  0660  0020               	movlb	0	; select bank0
  4564  0661  00C0               	movwf	??_init_leds
  4565  0662  0840               	movf	??_init_leds,w
  4566  0663  0021               	movlb	1	; select bank1
  4567  0664  058E               	andwf	14,f	;volatile
  4568                           
  4569                           ;lighting.c: 11: TRISBbits.TRISB7 = 0;
  4570  0665  138D               	bcf	13,7	;volatile
  4571                           
  4572                           ;lighting.c: 12: TRISBbits.TRISB5 = 0;
  4573  0666  128D               	bcf	13,5	;volatile
  4574                           
  4575                           ;lighting.c: 16: PSMC2CON = 0x00;
  4576  0667  003D               	movlb	29	; select bank29
  4577  0668  01B1               	clrf	49	;volatile
  4578                           
  4579                           ;lighting.c: 17: PSMC2MDL = 0x00;
  4580  0669  01B2               	clrf	50	;volatile
  4581                           
  4582                           ;lighting.c: 18: PSMC2SYNC = 0x00;
  4583  066A  01B3               	clrf	51	;volatile
  4584                           
  4585                           ;lighting.c: 19: PSMC2CLK = 0x00;
  4586  066B  01B4               	clrf	52	;volatile
  4587                           
  4588                           ;lighting.c: 20: PSMC2POL = 0x00;
  4589  066C  01B6               	clrf	54	;volatile
  4590                           
  4591                           ;lighting.c: 21: PSMC2BLNK = 0x00;
  4592  066D  01B7               	clrf	55	;volatile
  4593                           
  4594                           ;lighting.c: 22: PSMC2REBS = 0x00;
  4595  066E  01B8               	clrf	56	;volatile
  4596                           
  4597                           ;lighting.c: 23: PSMC2FEBS = 0x00;
  4598  066F  01B9               	clrf	57	;volatile
  4599                           
  4600                           ;lighting.c: 24: PSMC2PHS = 0x01;
  4601  0670  3001               	movlw	1
  4602  0671  00BA               	movwf	58	;volatile
  4603                           
  4604                           ;lighting.c: 25: PSMC2DCS = 0x01;
  4605  0672  3001               	movlw	1
  4606  0673  00BB               	movwf	59	;volatile
  4607                           
  4608                           ;lighting.c: 26: PSMC2PRS = 0x01;
  4609  0674  3001               	movlw	1
  4610  0675  00BC               	movwf	60	;volatile
  4611                           
  4612                           ;lighting.c: 27: PSMC2ASDC = 0x00;
  4613  0676  01BD               	clrf	61	;volatile
  4614                           
  4615                           ;lighting.c: 28: PSMC2ASDL = 0x01;
  4616  0677  3001               	movlw	1
  4617  0678  00BE               	movwf	62	;volatile
  4618                           
  4619                           ;lighting.c: 29: PSMC2ASDS = 0x00;
  4620  0679  01BF               	clrf	63	;volatile
  4621                           
  4622                           ;lighting.c: 30: PSMC2PHH = 0x00;
  4623  067A  01C2               	clrf	66	;volatile
  4624                           
  4625                           ;lighting.c: 31: PSMC2PHL = 0x00;
  4626  067B  01C1               	clrf	65	;volatile
  4627                           
  4628                           ;lighting.c: 32: PSMC2DCH = 0x01;
  4629  067C  3001               	movlw	1
  4630  067D  00C4               	movwf	68	;volatile
  4631                           
  4632                           ;lighting.c: 33: PSMC2DCL = 0xF4;
  4633  067E  30F4               	movlw	244
  4634  067F  00C3               	movwf	67	;volatile
  4635                           
  4636                           ;lighting.c: 34: PSMC2PRH = 0x03;
  4637  0680  3003               	movlw	3
  4638  0681  00C6               	movwf	70	;volatile
  4639                           
  4640                           ;lighting.c: 35: PSMC2PRL = 0xE7;
  4641  0682  30E7               	movlw	231
  4642  0683  00C5               	movwf	69	;volatile
  4643                           
  4644                           ;lighting.c: 36: PSMC2DBR = 0x00;
  4645  0684  01C9               	clrf	73	;volatile
  4646                           
  4647                           ;lighting.c: 37: PSMC2DBF = 0x00;
  4648  0685  01CA               	clrf	74	;volatile
  4649                           
  4650                           ;lighting.c: 38: PSMC2FFA = 0x00;
  4651  0686  01CD               	clrf	77	;volatile
  4652                           
  4653                           ;lighting.c: 39: PSMC2BLKR = 0x00;
  4654  0687  01CB               	clrf	75	;volatile
  4655                           
  4656                           ;lighting.c: 40: PSMC2BLKF = 0x00;
  4657  0688  01CC               	clrf	76	;volatile
  4658                           
  4659                           ;lighting.c: 41: PSMC2STR0 = 0x01;
  4660  0689  3001               	movlw	1
  4661  068A  00CE               	movwf	78	;volatile
  4662                           
  4663                           ;lighting.c: 42: PSMC2STR1 = 0x00;
  4664  068B  01CF               	clrf	79	;volatile
  4665                           
  4666                           ;lighting.c: 43: PSMC2INT = 0x00;
  4667  068C  01C0               	clrf	64	;volatile
  4668                           
  4669                           ;lighting.c: 44: PSMC2OEN = 0x01;
  4670  068D  3001               	movlw	1
  4671  068E  00B5               	movwf	53	;volatile
  4672                           
  4673                           ;lighting.c: 45: PSMC2CON = 0x80;
  4674  068F  3080               	movlw	128
  4675  0690  00B1               	movwf	49	;volatile
  4676                           
  4677                           ;lighting.c: 46: PIE4 &= 0xDD;
  4678  0691  30DD               	movlw	221
  4679  0692  0020               	movlb	0	; select bank0
  4680  0693  00C0               	movwf	??_init_leds
  4681  0694  0840               	movf	??_init_leds,w
  4682  0695  0021               	movlb	1	; select bank1
  4683  0696  0594               	andwf	20,f	;volatile
  4684                           
  4685                           ;lighting.c: 47: PIE4 |= 0x00;
  4686  0697  0814               	movf	20,w	;volatile
  4687                           
  4688                           ;lighting.c: 50: PSMC3CON = 0x00;
  4689  0698  003D               	movlb	29	; select bank29
  4690  0699  01D1               	clrf	81	;volatile
  4691                           
  4692                           ;lighting.c: 51: PSMC3MDL = 0x00;
  4693  069A  01D2               	clrf	82	;volatile
  4694                           
  4695                           ;lighting.c: 52: PSMC3SYNC = 0x02;
  4696  069B  3002               	movlw	2
  4697  069C  00D3               	movwf	83	;volatile
  4698                           
  4699                           ;lighting.c: 53: PSMC3CLK = 0x00;
  4700  069D  01D4               	clrf	84	;volatile
  4701                           
  4702                           ;lighting.c: 54: PSMC3POL = 0x00;
  4703  069E  01D6               	clrf	86	;volatile
  4704                           
  4705                           ;lighting.c: 55: PSMC3BLNK = 0x00;
  4706  069F  01D7               	clrf	87	;volatile
  4707                           
  4708                           ;lighting.c: 56: PSMC3REBS = 0x00;
  4709  06A0  01D8               	clrf	88	;volatile
  4710                           
  4711                           ;lighting.c: 57: PSMC3FEBS = 0x00;
  4712  06A1  01D9               	clrf	89	;volatile
  4713                           
  4714                           ;lighting.c: 58: PSMC3PHS = 0x01;
  4715  06A2  3001               	movlw	1
  4716  06A3  00DA               	movwf	90	;volatile
  4717                           
  4718                           ;lighting.c: 59: PSMC3DCS = 0x01;
  4719  06A4  3001               	movlw	1
  4720  06A5  00DB               	movwf	91	;volatile
  4721                           
  4722                           ;lighting.c: 60: PSMC3PRS = 0x01;
  4723  06A6  3001               	movlw	1
  4724  06A7  00DC               	movwf	92	;volatile
  4725                           
  4726                           ;lighting.c: 61: PSMC3ASDC = 0x00;
  4727  06A8  01DD               	clrf	93	;volatile
  4728                           
  4729                           ;lighting.c: 62: PSMC3ASDL = 0x01;
  4730  06A9  3001               	movlw	1
  4731  06AA  00DE               	movwf	94	;volatile
  4732                           
  4733                           ;lighting.c: 63: PSMC3ASDS = 0x00;
  4734  06AB  01DF               	clrf	95	;volatile
  4735                           
  4736                           ;lighting.c: 64: PSMC3PHH = 0x00;
  4737  06AC  01E2               	clrf	98	;volatile
  4738                           
  4739                           ;lighting.c: 65: PSMC3PHL = 0x00;
  4740  06AD  01E1               	clrf	97	;volatile
  4741                           
  4742                           ;lighting.c: 66: PSMC3DCH = 0x01;
  4743  06AE  3001               	movlw	1
  4744  06AF  00E4               	movwf	100	;volatile
  4745                           
  4746                           ;lighting.c: 67: PSMC3DCL = 0xF4;
  4747  06B0  30F4               	movlw	244
  4748  06B1  00E3               	movwf	99	;volatile
  4749                           
  4750                           ;lighting.c: 68: PSMC3PRH = 0x03;
  4751  06B2  3003               	movlw	3
  4752  06B3  00E6               	movwf	102	;volatile
  4753                           
  4754                           ;lighting.c: 69: PSMC3PRL = 0xE7;
  4755  06B4  30E7               	movlw	231
  4756  06B5  00E5               	movwf	101	;volatile
  4757                           
  4758                           ;lighting.c: 70: PSMC3DBR = 0x00;
  4759  06B6  01E9               	clrf	105	;volatile
  4760                           
  4761                           ;lighting.c: 71: PSMC3DBF = 0x00;
  4762  06B7  01EA               	clrf	106	;volatile
  4763                           
  4764                           ;lighting.c: 72: PSMC3FFA = 0x00;
  4765  06B8  01ED               	clrf	109	;volatile
  4766                           
  4767                           ;lighting.c: 73: PSMC3BLKR = 0x00;
  4768  06B9  01EB               	clrf	107	;volatile
  4769                           
  4770                           ;lighting.c: 74: PSMC3BLKF = 0x00;
  4771  06BA  01EC               	clrf	108	;volatile
  4772                           
  4773                           ;lighting.c: 75: PSMC3STR0 = 0x01;
  4774  06BB  3001               	movlw	1
  4775  06BC  00EE               	movwf	110	;volatile
  4776                           
  4777                           ;lighting.c: 76: PSMC3STR1 = 0x00;
  4778  06BD  01EF               	clrf	111	;volatile
  4779                           
  4780                           ;lighting.c: 77: PSMC3INT = 0x00;
  4781  06BE  01E0               	clrf	96	;volatile
  4782                           
  4783                           ;lighting.c: 78: PSMC3OEN = 0x01;
  4784  06BF  3001               	movlw	1
  4785  06C0  00D5               	movwf	85	;volatile
  4786                           
  4787                           ;lighting.c: 79: PSMC3CON = 0x80;
  4788  06C1  3080               	movlw	128
  4789  06C2  00D1               	movwf	81	;volatile
  4790                           
  4791                           ;lighting.c: 80: PIE4 &= 0xBB;
  4792  06C3  30BB               	movlw	187
  4793  06C4  0020               	movlb	0	; select bank0
  4794  06C5  00C0               	movwf	??_init_leds
  4795  06C6  0840               	movf	??_init_leds,w
  4796  06C7  0021               	movlb	1	; select bank1
  4797  06C8  0594               	andwf	20,f	;volatile
  4798                           
  4799                           ;lighting.c: 81: PIE4 |= 0x00;
  4800  06C9  0814               	movf	20,w	;volatile
  4801                           
  4802                           ;lighting.c: 84: PSMC4CON = 0x00;
  4803  06CA  003E               	movlb	30	; select bank30
  4804  06CB  0191               	clrf	17	;volatile
  4805                           
  4806                           ;lighting.c: 85: PSMC4MDL = 0x00;
  4807  06CC  0192               	clrf	18	;volatile
  4808                           
  4809                           ;lighting.c: 86: PSMC4SYNC = 0x02;
  4810  06CD  3002               	movlw	2
  4811  06CE  0093               	movwf	19	;volatile
  4812                           
  4813                           ;lighting.c: 87: PSMC4CLK = 0x00;
  4814  06CF  0194               	clrf	20	;volatile
  4815                           
  4816                           ;lighting.c: 88: PSMC4POL = 0x00;
  4817  06D0  0196               	clrf	22	;volatile
  4818                           
  4819                           ;lighting.c: 89: PSMC4BLNK = 0x00;
  4820  06D1  0197               	clrf	23	;volatile
  4821                           
  4822                           ;lighting.c: 90: PSMC4REBS = 0x00;
  4823  06D2  0198               	clrf	24	;volatile
  4824                           
  4825                           ;lighting.c: 91: PSMC4FEBS = 0x00;
  4826  06D3  0199               	clrf	25	;volatile
  4827                           
  4828                           ;lighting.c: 92: PSMC4PHS = 0x01;
  4829  06D4  3001               	movlw	1
  4830  06D5  009A               	movwf	26	;volatile
  4831                           
  4832                           ;lighting.c: 93: PSMC4DCS = 0x01;
  4833  06D6  3001               	movlw	1
  4834  06D7  009B               	movwf	27	;volatile
  4835                           
  4836                           ;lighting.c: 94: PSMC4PRS = 0x01;
  4837  06D8  3001               	movlw	1
  4838  06D9  009C               	movwf	28	;volatile
  4839                           
  4840                           ;lighting.c: 95: PSMC4ASDC = 0x00;
  4841  06DA  019D               	clrf	29	;volatile
  4842                           
  4843                           ;lighting.c: 96: PSMC4ASDL = 0x02;
  4844  06DB  3002               	movlw	2
  4845  06DC  009E               	movwf	30	;volatile
  4846                           
  4847                           ;lighting.c: 97: PSMC4ASDS = 0x00;
  4848  06DD  019F               	clrf	31	;volatile
  4849                           
  4850                           ;lighting.c: 98: PSMC4PHH = 0x00;
  4851  06DE  01A2               	clrf	34	;volatile
  4852                           
  4853                           ;lighting.c: 99: PSMC4PHL = 0x00;
  4854  06DF  01A1               	clrf	33	;volatile
  4855                           
  4856                           ;lighting.c: 100: PSMC4DCH = 0x01;
  4857  06E0  3001               	movlw	1
  4858  06E1  00A4               	movwf	36	;volatile
  4859                           
  4860                           ;lighting.c: 101: PSMC4DCL = 0xF4;
  4861  06E2  30F4               	movlw	244
  4862  06E3  00A3               	movwf	35	;volatile
  4863                           
  4864                           ;lighting.c: 102: PSMC4PRH = 0x03;
  4865  06E4  3003               	movlw	3
  4866  06E5  00A6               	movwf	38	;volatile
  4867                           
  4868                           ;lighting.c: 103: PSMC4PRL = 0xE7;
  4869  06E6  30E7               	movlw	231
  4870  06E7  00A5               	movwf	37	;volatile
  4871                           
  4872                           ;lighting.c: 104: PSMC4DBR = 0x00;
  4873  06E8  01A9               	clrf	41	;volatile
  4874                           
  4875                           ;lighting.c: 105: PSMC4DBF = 0x00;
  4876  06E9  01AA               	clrf	42	;volatile
  4877                           
  4878                           ;lighting.c: 106: PSMC4FFA = 0x00;
  4879  06EA  01AD               	clrf	45	;volatile
  4880                           
  4881                           ;lighting.c: 107: PSMC4BLKR = 0x00;
  4882  06EB  01AB               	clrf	43	;volatile
  4883                           
  4884                           ;lighting.c: 108: PSMC4BLKF = 0x00;
  4885  06EC  01AC               	clrf	44	;volatile
  4886                           
  4887                           ;lighting.c: 109: PSMC4STR0 = 0x02;
  4888  06ED  3002               	movlw	2
  4889  06EE  00AE               	movwf	46	;volatile
  4890                           
  4891                           ;lighting.c: 110: PSMC4STR1 = 0x00;
  4892  06EF  01AF               	clrf	47	;volatile
  4893                           
  4894                           ;lighting.c: 111: PSMC4INT = 0x00;
  4895  06F0  01A0               	clrf	32	;volatile
  4896                           
  4897                           ;lighting.c: 112: PSMC4OEN = 0x02;
  4898  06F1  3002               	movlw	2
  4899  06F2  0095               	movwf	21	;volatile
  4900                           
  4901                           ;lighting.c: 113: PSMC4CON = 0x80;
  4902  06F3  3080               	movlw	128
  4903  06F4  0091               	movwf	17	;volatile
  4904                           
  4905                           ;lighting.c: 114: PIE4 &= 0x77;
  4906  06F5  3077               	movlw	119
  4907  06F6  0020               	movlb	0	; select bank0
  4908  06F7  00C0               	movwf	??_init_leds
  4909  06F8  0840               	movf	??_init_leds,w
  4910  06F9  0021               	movlb	1	; select bank1
  4911  06FA  0594               	andwf	20,f	;volatile
  4912                           
  4913                           ;lighting.c: 115: PIE4 |= 0x00;
  4914  06FB  0814               	movf	20,w	;volatile
  4915                           
  4916                           ;lighting.c: 119: SSPEN = 0;
  4917  06FC  0024               	movlb	4	; select bank4
  4918  06FD  1295               	bcf	21,5	;volatile
  4919                           
  4920                           ;lighting.c: 120: SSPCON1 = 0b00100000;
  4921  06FE  3020               	movlw	32
  4922  06FF  0095               	movwf	21	;volatile
  4923                           
  4924                           ;lighting.c: 121: SCKSEL = 1;
  4925  0700  0022               	movlb	2	; select bank2
  4926  0701  161D               	bsf	29,4	;volatile
  4927                           
  4928                           ;lighting.c: 122: SDOSEL = 1;
  4929  0702  169D               	bsf	29,5	;volatile
  4930                           
  4931                           ;lighting.c: 123: SDISEL = 1;
  4932  0703  159D               	bsf	29,3	;volatile
  4933                           
  4934                           ;lighting.c: 125: SSPEN = 1;
  4935  0704  0024               	movlb	4	; select bank4
  4936  0705  1695               	bsf	21,5	;volatile
  4937  0706  0008               	return
  4938  0707                     __end_of_init_leds:	
  4939                           
  4940                           	psect	text4
  4941  0D3D                     __ptext4:	
  4942 ;; *************** function _init_isr *****************
  4943 ;; Defined at:
  4944 ;;		line 19 in file "../../source/interrupt.c"
  4945 ;; Parameters:    Size  Location     Type
  4946 ;;		None
  4947 ;; Auto vars:     Size  Location     Type
  4948 ;;		None
  4949 ;; Return value:  Size  Location     Type
  4950 ;;		None               void
  4951 ;; Registers used:
  4952 ;;		wreg, status,2
  4953 ;; Tracked objects:
  4954 ;;		On entry : 0/0
  4955 ;;		On exit  : 0/0
  4956 ;;		Unchanged: 0/0
  4957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4962 ;;Total ram usage:        0 bytes
  4963 ;; Hardware stack levels used:    1
  4964 ;; Hardware stack levels required when called:    3
  4965 ;; This function calls:
  4966 ;;		Nothing
  4967 ;; This function is called by:
  4968 ;;		_main
  4969 ;; This function uses a non-reentrant model
  4970 ;;
  4971                           
  4972                           
  4973                           ;psect for function _init_isr
  4974  0D3D                     _init_isr:	
  4975                           
  4976                           ;interrupt.c: 21: INTCON = 0b11011000;
  4977                           
  4978                           ;incstack = 0
  4979                           ; Regs used in _init_isr: [wreg+status,2]
  4980  0D3D  30D8               	movlw	216
  4981  0D3E  008B               	movwf	11	;volatile
  4982                           
  4983                           ;interrupt.c: 24: IOCAP = IOCAP | 0b00010010;
  4984  0D3F  0027               	movlb	7	; select bank7
  4985  0D40  0811               	movf	17,w	;volatile
  4986  0D41  3812               	iorlw	18
  4987  0D42  0091               	movwf	17	;volatile
  4988                           
  4989                           ;interrupt.c: 27: IOCAN = IOCAN | 0b00010000;
  4990  0D43  0812               	movf	18,w	;volatile
  4991  0D44  3810               	iorlw	16
  4992  0D45  0092               	movwf	18	;volatile
  4993                           
  4994                           ;interrupt.c: 31: T1CON = 0b00110001;
  4995  0D46  3031               	movlw	49
  4996  0D47  0020               	movlb	0	; select bank0
  4997  0D48  0098               	movwf	24	;volatile
  4998                           
  4999                           ;interrupt.c: 34: TRISA |= 0b00010000;
  5000  0D49  0021               	movlb	1	; select bank1
  5001  0D4A  160C               	bsf	12,4	;volatile
  5002  0D4B  0008               	return
  5003  0D4C                     __end_of_init_isr:	
  5004                           
  5005                           	psect	text5
  5006  0DDD                     __ptext5:	
  5007 ;; *************** function _init_ir *****************
  5008 ;; Defined at:
  5009 ;;		line 3 in file "../../source/ir.c"
  5010 ;; Parameters:    Size  Location     Type
  5011 ;;		None
  5012 ;; Auto vars:     Size  Location     Type
  5013 ;;		None
  5014 ;; Return value:  Size  Location     Type
  5015 ;;		None               void
  5016 ;; Registers used:
  5017 ;;		wreg, status,2, status,0
  5018 ;; Tracked objects:
  5019 ;;		On entry : 0/0
  5020 ;;		On exit  : 0/0
  5021 ;;		Unchanged: 0/0
  5022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5025 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5026 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5027 ;;Total ram usage:        1 bytes
  5028 ;; Hardware stack levels used:    1
  5029 ;; Hardware stack levels required when called:    3
  5030 ;; This function calls:
  5031 ;;		Nothing
  5032 ;; This function is called by:
  5033 ;;		_main
  5034 ;; This function uses a non-reentrant model
  5035 ;;
  5036                           
  5037                           
  5038                           ;psect for function _init_ir
  5039  0DDD                     _init_ir:	
  5040                           
  5041                           ;ir.c: 5: TRISC &= 0b11110111;
  5042                           
  5043                           ;incstack = 0
  5044                           ; Regs used in _init_ir: [wreg+status,2+status,0]
  5045  0DDD  30F7               	movlw	247
  5046  0DDE  0020               	movlb	0	; select bank0
  5047  0DDF  00C0               	movwf	??_init_ir
  5048  0DE0  0840               	movf	??_init_ir,w
  5049  0DE1  0021               	movlb	1	; select bank1
  5050  0DE2  058E               	andwf	14,f	;volatile
  5051                           
  5052                           ;ir.c: 7: PSMC1CON = 0x00;
  5053  0DE3  003D               	movlb	29	; select bank29
  5054  0DE4  0191               	clrf	17	;volatile
  5055                           
  5056                           ;ir.c: 8: PSMC1MDL = 0x80;
  5057  0DE5  3080               	movlw	128
  5058  0DE6  0092               	movwf	18	;volatile
  5059                           
  5060                           ;ir.c: 9: PSMC1SYNC = 0x00;
  5061  0DE7  0193               	clrf	19	;volatile
  5062                           
  5063                           ;ir.c: 10: PSMC1CLK = 0x00;
  5064  0DE8  0194               	clrf	20	;volatile
  5065                           
  5066                           ;ir.c: 11: PSMC1POL = 0x00;
  5067  0DE9  0196               	clrf	22	;volatile
  5068                           
  5069                           ;ir.c: 12: PSMC1BLNK = 0x00;
  5070  0DEA  0197               	clrf	23	;volatile
  5071                           
  5072                           ;ir.c: 13: PSMC1REBS = 0x00;
  5073  0DEB  0198               	clrf	24	;volatile
  5074                           
  5075                           ;ir.c: 14: PSMC1FEBS = 0x00;
  5076  0DEC  0199               	clrf	25	;volatile
  5077                           
  5078                           ;ir.c: 15: PSMC1PHS = 0x01;
  5079  0DED  3001               	movlw	1
  5080  0DEE  009A               	movwf	26	;volatile
  5081                           
  5082                           ;ir.c: 16: PSMC1DCS = 0x01;
  5083  0DEF  3001               	movlw	1
  5084  0DF0  009B               	movwf	27	;volatile
  5085                           
  5086                           ;ir.c: 17: PSMC1PRS = 0x01;
  5087  0DF1  3001               	movlw	1
  5088  0DF2  009C               	movwf	28	;volatile
  5089                           
  5090                           ;ir.c: 18: PSMC1ASDC = 0x00;
  5091  0DF3  019D               	clrf	29	;volatile
  5092                           
  5093                           ;ir.c: 19: PSMC1ASDL = 0x08;
  5094  0DF4  3008               	movlw	8
  5095  0DF5  009E               	movwf	30	;volatile
  5096                           
  5097                           ;ir.c: 20: PSMC1ASDS = 0x00;
  5098  0DF6  019F               	clrf	31	;volatile
  5099                           
  5100                           ;ir.c: 21: PSMC1PHH = 0x00;
  5101  0DF7  01A2               	clrf	34	;volatile
  5102                           
  5103                           ;ir.c: 22: PSMC1PHL = 0x00;
  5104  0DF8  01A1               	clrf	33	;volatile
  5105                           
  5106                           ;ir.c: 23: PSMC1DCH = 0x01;
  5107  0DF9  3001               	movlw	1
  5108  0DFA  00A4               	movwf	36	;volatile
  5109                           
  5110                           ;ir.c: 24: PSMC1DCL = 0x6A;
  5111  0DFB  306A               	movlw	106
  5112  0DFC  00A3               	movwf	35	;volatile
  5113                           
  5114                           ;ir.c: 25: PSMC1PRH = 0x02;
  5115  0DFD  3002               	movlw	2
  5116  0DFE  00A6               	movwf	38	;volatile
  5117                           
  5118                           ;ir.c: 26: PSMC1PRL = 0x3A;
  5119  0DFF  303A               	movlw	58
  5120  0E00  00A5               	movwf	37	;volatile
  5121                           
  5122                           ;ir.c: 27: PSMC1DBR = 0x00;
  5123  0E01  01A9               	clrf	41	;volatile
  5124                           
  5125                           ;ir.c: 28: PSMC1DBF = 0x00;
  5126  0E02  01AA               	clrf	42	;volatile
  5127                           
  5128                           ;ir.c: 29: PSMC1FFA = 0x00;
  5129  0E03  01AD               	clrf	45	;volatile
  5130                           
  5131                           ;ir.c: 30: PSMC1BLKR = 0x00;
  5132  0E04  01AB               	clrf	43	;volatile
  5133                           
  5134                           ;ir.c: 31: PSMC1BLKF = 0x00;
  5135  0E05  01AC               	clrf	44	;volatile
  5136                           
  5137                           ;ir.c: 32: PSMC1STR0 = 0x08;
  5138  0E06  3008               	movlw	8
  5139  0E07  00AE               	movwf	46	;volatile
  5140                           
  5141                           ;ir.c: 33: PSMC1STR1 = 0x00;
  5142  0E08  01AF               	clrf	47	;volatile
  5143                           
  5144                           ;ir.c: 34: PSMC1INT = 0x00;
  5145  0E09  01A0               	clrf	32	;volatile
  5146                           
  5147                           ;ir.c: 35: PSMC1OEN = 0x08;
  5148  0E0A  3008               	movlw	8
  5149  0E0B  0095               	movwf	21	;volatile
  5150                           
  5151                           ;ir.c: 36: PSMC1CON = 0x80;
  5152  0E0C  3080               	movlw	128
  5153  0E0D  0091               	movwf	17	;volatile
  5154                           
  5155                           ;ir.c: 37: PIE4 &= 0xEE;
  5156  0E0E  30EE               	movlw	238
  5157  0E0F  0020               	movlb	0	; select bank0
  5158  0E10  00C0               	movwf	??_init_ir
  5159  0E11  0840               	movf	??_init_ir,w
  5160  0E12  0021               	movlb	1	; select bank1
  5161  0E13  0594               	andwf	20,f	;volatile
  5162                           
  5163                           ;ir.c: 38: PIE4 |= 0x00;
  5164  0E14  0814               	movf	20,w	;volatile
  5165  0E15  0008               	return
  5166  0E16                     __end_of_init_ir:	
  5167                           
  5168                           	psect	text6
  5169  0D35                     __ptext6:	
  5170 ;; *************** function _init_conn *****************
  5171 ;; Defined at:
  5172 ;;		line 3 in file "../../source/blade_connection.c"
  5173 ;; Parameters:    Size  Location     Type
  5174 ;;		None
  5175 ;; Auto vars:     Size  Location     Type
  5176 ;;		None
  5177 ;; Return value:  Size  Location     Type
  5178 ;;		None               void
  5179 ;; Registers used:
  5180 ;;		None
  5181 ;; Tracked objects:
  5182 ;;		On entry : 0/0
  5183 ;;		On exit  : 0/0
  5184 ;;		Unchanged: 0/0
  5185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5190 ;;Total ram usage:        0 bytes
  5191 ;; Hardware stack levels used:    1
  5192 ;; Hardware stack levels required when called:    3
  5193 ;; This function calls:
  5194 ;;		Nothing
  5195 ;; This function is called by:
  5196 ;;		_main
  5197 ;; This function uses a non-reentrant model
  5198 ;;
  5199                           
  5200                           
  5201                           ;psect for function _init_conn
  5202  0D35                     _init_conn:	
  5203                           
  5204                           ;blade_connection.c: 6: TRISA |= 0b00000010;
  5205                           
  5206                           ;incstack = 0
  5207                           ; Regs used in _init_conn: []
  5208  0D35  0021               	movlb	1	; select bank1
  5209  0D36  148C               	bsf	12,1	;volatile
  5210  0D37  0008               	return
  5211  0D38                     __end_of_init_conn:	
  5212                           
  5213                           	psect	text7
  5214  0D80                     __ptext7:	
  5215 ;; *************** function _init_accel *****************
  5216 ;; Defined at:
  5217 ;;		line 3 in file "../../source/accelerometer.c"
  5218 ;; Parameters:    Size  Location     Type
  5219 ;;		None
  5220 ;; Auto vars:     Size  Location     Type
  5221 ;;		None
  5222 ;; Return value:  Size  Location     Type
  5223 ;;		None               void
  5224 ;; Registers used:
  5225 ;;		wreg, status,2, status,0
  5226 ;; Tracked objects:
  5227 ;;		On entry : 0/0
  5228 ;;		On exit  : 0/0
  5229 ;;		Unchanged: 0/0
  5230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5233 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5234 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5235 ;;Total ram usage:        1 bytes
  5236 ;; Hardware stack levels used:    1
  5237 ;; Hardware stack levels required when called:    3
  5238 ;; This function calls:
  5239 ;;		Nothing
  5240 ;; This function is called by:
  5241 ;;		_main
  5242 ;; This function uses a non-reentrant model
  5243 ;;
  5244                           
  5245                           
  5246                           ;psect for function _init_accel
  5247  0D80                     _init_accel:	
  5248                           
  5249                           ;accelerometer.c: 5: ADCON1 = 0b10000000;
  5250                           
  5251                           ;incstack = 0
  5252                           ; Regs used in _init_accel: [wreg+status,2+status,0]
  5253  0D80  3080               	movlw	128
  5254  0D81  0021               	movlb	1	; select bank1
  5255  0D82  009E               	movwf	30	;volatile
  5256                           
  5257                           ;accelerometer.c: 6: ADCON2 = 0b00001111;
  5258  0D83  300F               	movlw	15
  5259  0D84  009F               	movwf	31	;volatile
  5260                           
  5261                           ;accelerometer.c: 9: TRISA |= 0b00101100;
  5262  0D85  302C               	movlw	44
  5263  0D86  0020               	movlb	0	; select bank0
  5264  0D87  00C0               	movwf	??_init_accel
  5265  0D88  0840               	movf	??_init_accel,w
  5266  0D89  0021               	movlb	1	; select bank1
  5267  0D8A  048C               	iorwf	12,f	;volatile
  5268                           
  5269                           ;accelerometer.c: 10: ANSELA |= 0b00101100;
  5270  0D8B  302C               	movlw	44
  5271  0D8C  0020               	movlb	0	; select bank0
  5272  0D8D  00C0               	movwf	??_init_accel
  5273  0D8E  0840               	movf	??_init_accel,w
  5274  0D8F  0023               	movlb	3	; select bank3
  5275  0D90  048C               	iorwf	12,f	;volatile
  5276                           
  5277                           ;accelerometer.c: 13: TRISC |= 10000000;
  5278  0D91  0021               	movlb	1	; select bank1
  5279  0D92  178E               	bsf	14,7	;volatile
  5280  0D93  0008               	return
  5281  0D94                     __end_of_init_accel:	
  5282                           
  5283                           	psect	text8
  5284  0E52                     __ptext8:	
  5285 ;; *************** function _display_health *****************
  5286 ;; Defined at:
  5287 ;;		line 128 in file "../../source/lighting.c"
  5288 ;; Parameters:    Size  Location     Type
  5289 ;;		None
  5290 ;; Auto vars:     Size  Location     Type
  5291 ;;		None
  5292 ;; Return value:  Size  Location     Type
  5293 ;;		None               void
  5294 ;; Registers used:
  5295 ;;		wreg, status,2
  5296 ;; Tracked objects:
  5297 ;;		On entry : 0/0
  5298 ;;		On exit  : 0/0
  5299 ;;		Unchanged: 0/0
  5300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5305 ;;Total ram usage:        0 bytes
  5306 ;; Hardware stack levels used:    1
  5307 ;; Hardware stack levels required when called:    3
  5308 ;; This function calls:
  5309 ;;		Nothing
  5310 ;; This function is called by:
  5311 ;;		_main
  5312 ;; This function uses a non-reentrant model
  5313 ;;
  5314                           
  5315                           
  5316                           ;psect for function _display_health
  5317  0E52                     _display_health:	
  5318                           
  5319                           ;lighting.c: 131: if(health < 10)
  5320                           
  5321                           ;incstack = 0
  5322                           ; Regs used in _display_health: [wreg+status,2]
  5323  0E52  300A               	movlw	10
  5324  0E53  0021               	movlb	1	; select bank1
  5325  0E54  0234               	subwf	_health^(0+128),w
  5326  0E55  1803               	skipnc
  5327  0E56  2E6C               	goto	l2460
  5328                           
  5329                           ;lighting.c: 132: {
  5330                           ;lighting.c: 135: PSMC2DCH = 0x00;
  5331  0E57  003D               	movlb	29	; select bank29
  5332  0E58  01C4               	clrf	68	;volatile
  5333                           
  5334                           ;lighting.c: 136: PSMC2DCL = 0x00;
  5335  0E59  01C3               	clrf	67	;volatile
  5336                           
  5337                           ;lighting.c: 137: PSMC2LD = 1;
  5338  0E5A  1731               	bsf	49,6	;volatile
  5339                           
  5340                           ;lighting.c: 139: PSMC3DCH = 0xFF;
  5341  0E5B  30FF               	movlw	255
  5342  0E5C  00E4               	movwf	100	;volatile
  5343                           
  5344                           ;lighting.c: 140: PSMC3DCL = 0xFF;
  5345  0E5D  30FF               	movlw	255
  5346  0E5E  00E3               	movwf	99	;volatile
  5347                           
  5348                           ;lighting.c: 141: PSMC3LD = 1;
  5349  0E5F  1751               	bsf	81,6	;volatile
  5350                           
  5351                           ;lighting.c: 143: PSMC4DCH = 0xFF;
  5352  0E60  30FF               	movlw	255
  5353  0E61  003E               	movlb	30	; select bank30
  5354  0E62  00A4               	movwf	36	;volatile
  5355                           
  5356                           ;lighting.c: 144: PSMC4DCL = 0xFF;
  5357  0E63  30FF               	movlw	255
  5358  0E64  00A3               	movwf	35	;volatile
  5359                           
  5360                           ;lighting.c: 145: PSMC4LD = 1;
  5361  0E65  1711               	bsf	17,6	;volatile
  5362                           
  5363                           ;lighting.c: 147: PSMC2LD = 1;
  5364  0E66  003D               	movlb	29	; select bank29
  5365  0E67  1731               	bsf	49,6	;volatile
  5366                           
  5367                           ;lighting.c: 148: PSMC3LD = 1;
  5368  0E68  1751               	bsf	81,6	;volatile
  5369                           
  5370                           ;lighting.c: 149: PSMC4LD = 1;
  5371  0E69  003E               	movlb	30	; select bank30
  5372  0E6A  1711               	bsf	17,6	;volatile
  5373                           
  5374                           ;lighting.c: 150: }
  5375  0E6B  0008               	return
  5376  0E6C                     l2460:	
  5377                           
  5378                           ;lighting.c: 151: else if(10 < health && health < 35)
  5379  0E6C  300B               	movlw	11
  5380  0E6D  0021               	movlb	1	; select bank1
  5381  0E6E  0234               	subwf	_health^(0+128),w
  5382  0E6F  1C03               	skipc
  5383  0E70  2E8A               	goto	l2482
  5384  0E71  3023               	movlw	35
  5385  0E72  0234               	subwf	_health^(0+128),w
  5386  0E73  1803               	skipnc
  5387  0E74  2E8A               	goto	l2482
  5388                           
  5389                           ;lighting.c: 152: {
  5390                           ;lighting.c: 155: PSMC2DCH = 0xFF;
  5391  0E75  30FF               	movlw	255
  5392  0E76  003D               	movlb	29	; select bank29
  5393  0E77  00C4               	movwf	68	;volatile
  5394                           
  5395                           ;lighting.c: 156: PSMC2DCL = 0xFF;
  5396  0E78  30FF               	movlw	255
  5397  0E79  00C3               	movwf	67	;volatile
  5398                           
  5399                           ;lighting.c: 157: PSMC2LD = 1;
  5400  0E7A  1731               	bsf	49,6	;volatile
  5401                           
  5402                           ;lighting.c: 159: PSMC3DCH = 0xFF;
  5403  0E7B  30FF               	movlw	255
  5404  0E7C  00E4               	movwf	100	;volatile
  5405                           
  5406                           ;lighting.c: 160: PSMC3DCL = 0xFF;
  5407  0E7D  30FF               	movlw	255
  5408  0E7E  00E3               	movwf	99	;volatile
  5409                           
  5410                           ;lighting.c: 161: PSMC3LD = 1;
  5411  0E7F  1751               	bsf	81,6	;volatile
  5412                           
  5413                           ;lighting.c: 163: PSMC4DCH = 0x00;
  5414  0E80  003E               	movlb	30	; select bank30
  5415  0E81  01A4               	clrf	36	;volatile
  5416                           
  5417                           ;lighting.c: 164: PSMC4DCL = 0x00;
  5418  0E82  01A3               	clrf	35	;volatile
  5419                           
  5420                           ;lighting.c: 165: PSMC4LD = 1;
  5421  0E83  1711               	bsf	17,6	;volatile
  5422                           
  5423                           ;lighting.c: 167: PSMC2LD = 1;
  5424  0E84  003D               	movlb	29	; select bank29
  5425  0E85  1731               	bsf	49,6	;volatile
  5426                           
  5427                           ;lighting.c: 168: PSMC3LD = 1;
  5428  0E86  1751               	bsf	81,6	;volatile
  5429                           
  5430                           ;lighting.c: 169: PSMC4LD = 1;
  5431  0E87  003E               	movlb	30	; select bank30
  5432  0E88  1711               	bsf	17,6	;volatile
  5433                           
  5434                           ;lighting.c: 170: }
  5435  0E89  0008               	return
  5436  0E8A                     l2482:	
  5437                           
  5438                           ;lighting.c: 171: else
  5439                           ;lighting.c: 172: {
  5440                           ;lighting.c: 175: PSMC2DCH = 0xFF;
  5441  0E8A  30FF               	movlw	255
  5442  0E8B  003D               	movlb	29	; select bank29
  5443  0E8C  00C4               	movwf	68	;volatile
  5444                           
  5445                           ;lighting.c: 176: PSMC2DCL = 0xFF;
  5446  0E8D  30FF               	movlw	255
  5447  0E8E  00C3               	movwf	67	;volatile
  5448                           
  5449                           ;lighting.c: 177: PSMC2LD = 1;
  5450  0E8F  1731               	bsf	49,6	;volatile
  5451                           
  5452                           ;lighting.c: 179: PSMC3DCH = 0x00;
  5453  0E90  01E4               	clrf	100	;volatile
  5454                           
  5455                           ;lighting.c: 180: PSMC3DCL = 0x00;
  5456  0E91  01E3               	clrf	99	;volatile
  5457                           
  5458                           ;lighting.c: 181: PSMC3LD = 1;
  5459  0E92  1751               	bsf	81,6	;volatile
  5460                           
  5461                           ;lighting.c: 183: PSMC4DCH = 0xFF;
  5462  0E93  30FF               	movlw	255
  5463  0E94  003E               	movlb	30	; select bank30
  5464  0E95  00A4               	movwf	36	;volatile
  5465                           
  5466                           ;lighting.c: 184: PSMC4DCL = 0xFF;
  5467  0E96  30FF               	movlw	255
  5468  0E97  00A3               	movwf	35	;volatile
  5469                           
  5470                           ;lighting.c: 185: PSMC4LD = 1;
  5471  0E98  1711               	bsf	17,6	;volatile
  5472                           
  5473                           ;lighting.c: 187: PSMC2LD = 1;
  5474  0E99  003D               	movlb	29	; select bank29
  5475  0E9A  1731               	bsf	49,6	;volatile
  5476                           
  5477                           ;lighting.c: 188: PSMC3LD = 1;
  5478  0E9B  1751               	bsf	81,6	;volatile
  5479                           
  5480                           ;lighting.c: 189: PSMC4LD = 1;
  5481  0E9C  003E               	movlb	30	; select bank30
  5482  0E9D  1711               	bsf	17,6	;volatile
  5483  0E9E  0008               	return
  5484  0E9F                     __end_of_display_health:	
  5485                           
  5486                           	psect	text9
  5487  0177                     __ptext9:	
  5488 ;; *************** function _display_blade_lights *****************
  5489 ;; Defined at:
  5490 ;;		line 193 in file "../../source/lighting.c"
  5491 ;; Parameters:    Size  Location     Type
  5492 ;;  mode            1    wreg     unsigned char 
  5493 ;; Auto vars:     Size  Location     Type
  5494 ;;  mode            1    8[BANK1 ] unsigned char 
  5495 ;;  i               2    6[BANK1 ] int 
  5496 ;;  i               2    4[BANK1 ] int 
  5497 ;;  i               2    2[BANK1 ] int 
  5498 ;;  i               2    0[BANK1 ] int 
  5499 ;;  r               1   10[BANK1 ] unsigned char 
  5500 ;;  r               1    9[BANK1 ] unsigned char 
  5501 ;; Return value:  Size  Location     Type
  5502 ;;		None               void
  5503 ;; Registers used:
  5504 ;;		wreg, status,2, status,0, pclath, cstack
  5505 ;; Tracked objects:
  5506 ;;		On entry : 0/0
  5507 ;;		On exit  : 0/0
  5508 ;;		Unchanged: 0/0
  5509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5511 ;;      Locals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5512 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5513 ;;      Totals:         0       2      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5514 ;;Total ram usage:       13 bytes
  5515 ;; Hardware stack levels used:    1
  5516 ;; Hardware stack levels required when called:    4
  5517 ;; This function calls:
  5518 ;;		_writespi
  5519 ;; This function is called by:
  5520 ;;		_main
  5521 ;; This function uses a non-reentrant model
  5522 ;;
  5523                           
  5524                           
  5525                           ;psect for function _display_blade_lights
  5526  0177                     _display_blade_lights:	
  5527                           
  5528                           ;incstack = 0
  5529                           ; Regs used in _display_blade_lights: [wreg+status,2+status,0+pclath+cstack]
  5530                           ;display_blade_lights@mode stored from wreg
  5531  0177  0021               	movlb	1	; select bank1
  5532  0178  00A8               	movwf	display_blade_lights@mode^(0+128)
  5533                           
  5534                           ;lighting.c: 195: if( (mode == 0)
  5535                           ;lighting.c: 196: || (mode == 1)
  5536                           ;lighting.c: 197: || (mode == 2) )
  5537  0179  0828               	movf	display_blade_lights@mode^(0+128),w
  5538  017A  1903               	btfsc	3,2
  5539  017B  2983               	goto	l3202
  5540  017C  0328               	decf	display_blade_lights@mode^(0+128),w
  5541  017D  1903               	btfsc	3,2
  5542  017E  2983               	goto	l3202
  5543  017F  3002               	movlw	2
  5544  0180  0628               	xorwf	display_blade_lights@mode^(0+128),w
  5545  0181  1D03               	btfss	3,2
  5546  0182  0008               	return
  5547  0183                     l3202:	
  5548                           
  5549                           ;lighting.c: 198: {
  5550                           ;lighting.c: 199: for(unsigned char r = 0;r < 255; r+=5)
  5551  0183  01A9               	clrf	display_blade_lights@r^(0+128)
  5552  0184  0A29               	incf	display_blade_lights@r^(0+128),w
  5553  0185  1903               	btfsc	3,2
  5554  0186  2A3E               	goto	l3240
  5555  0187                     l3208:	
  5556                           
  5557                           ;lighting.c: 200: {
  5558                           ;lighting.c: 202: for(int i = 0;i < 4; i++){
  5559  0187  01A0               	clrf	display_blade_lights@i^(0+128)
  5560  0188  01A1               	clrf	(display_blade_lights@i+1)^(0+128)
  5561  0189  0821               	movf	(display_blade_lights@i+1)^(0+128),w
  5562  018A  3A80               	xorlw	128
  5563  018B  0020               	movlb	0	; select bank0
  5564  018C  00C3               	movwf	??_display_blade_lights
  5565  018D  3080               	movlw	128
  5566  018E  0243               	subwf	??_display_blade_lights,w
  5567  018F  1D03               	skipz
  5568  0190  2994               	goto	u2735
  5569  0191  3004               	movlw	4
  5570  0192  0021               	movlb	1	; select bank1
  5571  0193  0220               	subwf	display_blade_lights@i^(0+128),w
  5572  0194                     u2735:	
  5573  0194  1803               	btfsc	3,0
  5574  0195  29AC               	goto	l3220
  5575  0196                     l3214:	
  5576                           
  5577                           ;lighting.c: 203: writespi(0x00);
  5578  0196  3000               	movlw	0
  5579  0197  318D  256D  3181   	fcall	_writespi
  5580  019A  3001               	movlw	1
  5581  019B  0021               	movlb	1	; select bank1
  5582  019C  07A0               	addwf	display_blade_lights@i^(0+128),f
  5583  019D  3000               	movlw	0
  5584  019E  3DA1               	addwfc	(display_blade_lights@i+1)^(0+128),f
  5585  019F  0821               	movf	(display_blade_lights@i+1)^(0+128),w
  5586  01A0  3A80               	xorlw	128
  5587  01A1  0020               	movlb	0	; select bank0
  5588  01A2  00C3               	movwf	??_display_blade_lights
  5589  01A3  3080               	movlw	128
  5590  01A4  0243               	subwf	??_display_blade_lights,w
  5591  01A5  1D03               	skipz
  5592  01A6  29AA               	goto	u2745
  5593  01A7  3004               	movlw	4
  5594  01A8  0021               	movlb	1	; select bank1
  5595  01A9  0220               	subwf	display_blade_lights@i^(0+128),w
  5596  01AA                     u2745:	
  5597  01AA  1C03               	skipc
  5598  01AB  2996               	goto	l3214
  5599  01AC                     l3220:	
  5600                           
  5601                           ;lighting.c: 204: }
  5602                           ;lighting.c: 206: writespi(0xFF);
  5603  01AC  30FF               	movlw	255
  5604  01AD  318D  256D  3181   	fcall	_writespi
  5605                           
  5606                           ;lighting.c: 207: writespi(0x00);
  5607  01B0  3000               	movlw	0
  5608  01B1  318D  256D  3181   	fcall	_writespi
  5609                           
  5610                           ;lighting.c: 208: writespi(0x00);
  5611  01B4  3000               	movlw	0
  5612  01B5  318D  256D  3181   	fcall	_writespi
  5613                           
  5614                           ;lighting.c: 209: writespi(r);
  5615  01B8  0021               	movlb	1	; select bank1
  5616  01B9  0829               	movf	display_blade_lights@r^(0+128),w
  5617  01BA  318D  256D  3181   	fcall	_writespi
  5618                           
  5619                           ;lighting.c: 211: writespi(0xFF);
  5620  01BD  30FF               	movlw	255
  5621  01BE  318D  256D  3181   	fcall	_writespi
  5622                           
  5623                           ;lighting.c: 212: writespi(0x00);
  5624  01C1  3000               	movlw	0
  5625  01C2  318D  256D  3181   	fcall	_writespi
  5626                           
  5627                           ;lighting.c: 213: writespi(0x00);
  5628  01C5  3000               	movlw	0
  5629  01C6  318D  256D  3181   	fcall	_writespi
  5630                           
  5631                           ;lighting.c: 214: writespi(255 - r);
  5632  01C9  0021               	movlb	1	; select bank1
  5633  01CA  0329               	decf	display_blade_lights@r^(0+128),w
  5634  01CB  3AFF               	xorlw	255
  5635  01CC  3EFF               	addlw	255
  5636  01CD  318D  256D  3181   	fcall	_writespi
  5637                           
  5638                           ;lighting.c: 216: writespi(0xFF);
  5639  01D0  30FF               	movlw	255
  5640  01D1  318D  256D  3181   	fcall	_writespi
  5641                           
  5642                           ;lighting.c: 217: writespi(0x00);
  5643  01D4  3000               	movlw	0
  5644  01D5  318D  256D  3181   	fcall	_writespi
  5645                           
  5646                           ;lighting.c: 218: writespi(0x00);
  5647  01D8  3000               	movlw	0
  5648  01D9  318D  256D  3181   	fcall	_writespi
  5649                           
  5650                           ;lighting.c: 219: writespi(r);
  5651  01DC  0021               	movlb	1	; select bank1
  5652  01DD  0829               	movf	display_blade_lights@r^(0+128),w
  5653  01DE  318D  256D  3181   	fcall	_writespi
  5654                           
  5655                           ;lighting.c: 221: writespi(0xFF);
  5656  01E1  30FF               	movlw	255
  5657  01E2  318D  256D  3181   	fcall	_writespi
  5658                           
  5659                           ;lighting.c: 222: writespi(0x00);
  5660  01E5  3000               	movlw	0
  5661  01E6  318D  256D  3181   	fcall	_writespi
  5662                           
  5663                           ;lighting.c: 223: writespi(0x00);
  5664  01E9  3000               	movlw	0
  5665  01EA  318D  256D  3181   	fcall	_writespi
  5666                           
  5667                           ;lighting.c: 224: writespi(255-r);
  5668  01ED  0021               	movlb	1	; select bank1
  5669  01EE  0329               	decf	display_blade_lights@r^(0+128),w
  5670  01EF  3AFF               	xorlw	255
  5671  01F0  3EFF               	addlw	255
  5672  01F1  318D  256D  3181   	fcall	_writespi
  5673                           
  5674                           ;lighting.c: 226: writespi(0xFF);
  5675  01F4  30FF               	movlw	255
  5676  01F5  318D  256D  3181   	fcall	_writespi
  5677                           
  5678                           ;lighting.c: 227: writespi(0x00);
  5679  01F8  3000               	movlw	0
  5680  01F9  318D  256D  3181   	fcall	_writespi
  5681                           
  5682                           ;lighting.c: 228: writespi(0x00);
  5683  01FC  3000               	movlw	0
  5684  01FD  318D  256D  3181   	fcall	_writespi
  5685                           
  5686                           ;lighting.c: 229: writespi(r);
  5687  0200  0021               	movlb	1	; select bank1
  5688  0201  0829               	movf	display_blade_lights@r^(0+128),w
  5689  0202  318D  256D  3181   	fcall	_writespi
  5690                           
  5691                           ;lighting.c: 231: for(int i = 0;i < 4; i++){
  5692  0205  0021               	movlb	1	; select bank1
  5693  0206  01A2               	clrf	display_blade_lights@i_478^(0+128)
  5694  0207  01A3               	clrf	(display_blade_lights@i_478+1)^(0+128)
  5695  0208  0823               	movf	(display_blade_lights@i_478+1)^(0+128),w
  5696  0209  3A80               	xorlw	128
  5697  020A  0020               	movlb	0	; select bank0
  5698  020B  00C3               	movwf	??_display_blade_lights
  5699  020C  3080               	movlw	128
  5700  020D  0243               	subwf	??_display_blade_lights,w
  5701  020E  1D03               	skipz
  5702  020F  2A13               	goto	u2755
  5703  0210  3004               	movlw	4
  5704  0211  0021               	movlb	1	; select bank1
  5705  0212  0222               	subwf	display_blade_lights@i_478^(0+128),w
  5706  0213                     u2755:	
  5707  0213  1803               	btfsc	3,0
  5708  0214  2A2B               	goto	l3234
  5709  0215                     l3228:	
  5710                           
  5711                           ;lighting.c: 232: writespi(0xFF);
  5712  0215  30FF               	movlw	255
  5713  0216  318D  256D  3181   	fcall	_writespi
  5714  0219  3001               	movlw	1
  5715  021A  0021               	movlb	1	; select bank1
  5716  021B  07A2               	addwf	display_blade_lights@i_478^(0+128),f
  5717  021C  3000               	movlw	0
  5718  021D  3DA3               	addwfc	(display_blade_lights@i_478+1)^(0+128),f
  5719  021E  0823               	movf	(display_blade_lights@i_478+1)^(0+128),w
  5720  021F  3A80               	xorlw	128
  5721  0220  0020               	movlb	0	; select bank0
  5722  0221  00C3               	movwf	??_display_blade_lights
  5723  0222  3080               	movlw	128
  5724  0223  0243               	subwf	??_display_blade_lights,w
  5725  0224  1D03               	skipz
  5726  0225  2A29               	goto	u2765
  5727  0226  3004               	movlw	4
  5728  0227  0021               	movlb	1	; select bank1
  5729  0228  0222               	subwf	display_blade_lights@i_478^(0+128),w
  5730  0229                     u2765:	
  5731  0229  1C03               	skipc
  5732  022A  2A15               	goto	l3228
  5733  022B                     l3234:	
  5734                           
  5735                           ;lighting.c: 233: }
  5736                           ;lighting.c: 234: _delay((unsigned long)((20)*(32000000/4000.0)));
  5737  022B  30D0               	movlw	208
  5738  022C  0020               	movlb	0	; select bank0
  5739  022D  00C4               	movwf	??_display_blade_lights+1
  5740  022E  30C9               	movlw	201
  5741  022F  00C3               	movwf	??_display_blade_lights
  5742  0230                     u3167:	
  5743  0230  0BC3               	decfsz	??_display_blade_lights,f
  5744  0231  2A30               	goto	u3167
  5745  0232  0BC4               	decfsz	??_display_blade_lights+1,f
  5746  0233  2A30               	goto	u3167
  5747  0234  3200               	nop2
  5748  0235  3005               	movlw	5
  5749  0236  0020               	movlb	0	; select bank0
  5750  0237  00C3               	movwf	??_display_blade_lights
  5751  0238  0843               	movf	??_display_blade_lights,w
  5752  0239  0021               	movlb	1	; select bank1
  5753  023A  07A9               	addwf	display_blade_lights@r^(0+128),f
  5754  023B  0A29               	incf	display_blade_lights@r^(0+128),w
  5755  023C  1D03               	btfss	3,2
  5756  023D  2987               	goto	l3208
  5757  023E                     l3240:	
  5758                           
  5759                           ;lighting.c: 235: }
  5760                           ;lighting.c: 239: for(unsigned char r = 255;r > 0; r-=5)
  5761  023E  30FF               	movlw	255
  5762  023F  0020               	movlb	0	; select bank0
  5763  0240  00C3               	movwf	??_display_blade_lights
  5764  0241  0843               	movf	??_display_blade_lights,w
  5765  0242  0021               	movlb	1	; select bank1
  5766  0243  00AA               	movwf	display_blade_lights@r_479^(0+128)
  5767  0244                     L2:	
  5768  0244  082A               	movf	display_blade_lights@r_479^(0+128),w
  5769  0245  1903               	btfsc	3,2
  5770  0246  0008               	return
  5771                           
  5772                           ;lighting.c: 240: {
  5773                           ;lighting.c: 242: for(int i = 0;i < 4; i++){
  5774  0247  01A4               	clrf	display_blade_lights@i_480^(0+128)
  5775  0248  01A5               	clrf	(display_blade_lights@i_480+1)^(0+128)
  5776  0249  0825               	movf	(display_blade_lights@i_480+1)^(0+128),w
  5777  024A  3A80               	xorlw	128
  5778  024B  0020               	movlb	0	; select bank0
  5779  024C  00C3               	movwf	??_display_blade_lights
  5780  024D  3080               	movlw	128
  5781  024E  0243               	subwf	??_display_blade_lights,w
  5782  024F  1D03               	skipz
  5783  0250  2A54               	goto	u2795
  5784  0251  3004               	movlw	4
  5785  0252  0021               	movlb	1	; select bank1
  5786  0253  0224               	subwf	display_blade_lights@i_480^(0+128),w
  5787  0254                     u2795:	
  5788  0254  1803               	btfsc	3,0
  5789  0255  2A6C               	goto	l3258
  5790  0256                     l3252:	
  5791                           
  5792                           ;lighting.c: 243: writespi(0x00);
  5793  0256  3000               	movlw	0
  5794  0257  318D  256D  3181   	fcall	_writespi
  5795  025A  3001               	movlw	1
  5796  025B  0021               	movlb	1	; select bank1
  5797  025C  07A4               	addwf	display_blade_lights@i_480^(0+128),f
  5798  025D  3000               	movlw	0
  5799  025E  3DA5               	addwfc	(display_blade_lights@i_480+1)^(0+128),f
  5800  025F  0825               	movf	(display_blade_lights@i_480+1)^(0+128),w
  5801  0260  3A80               	xorlw	128
  5802  0261  0020               	movlb	0	; select bank0
  5803  0262  00C3               	movwf	??_display_blade_lights
  5804  0263  3080               	movlw	128
  5805  0264  0243               	subwf	??_display_blade_lights,w
  5806  0265  1D03               	skipz
  5807  0266  2A6A               	goto	u2805
  5808  0267  3004               	movlw	4
  5809  0268  0021               	movlb	1	; select bank1
  5810  0269  0224               	subwf	display_blade_lights@i_480^(0+128),w
  5811  026A                     u2805:	
  5812  026A  1C03               	skipc
  5813  026B  2A56               	goto	l3252
  5814  026C                     l3258:	
  5815                           
  5816                           ;lighting.c: 244: }
  5817                           ;lighting.c: 246: writespi(0xFF);
  5818  026C  30FF               	movlw	255
  5819  026D  318D  256D  3181   	fcall	_writespi
  5820                           
  5821                           ;lighting.c: 247: writespi(0x00);
  5822  0270  3000               	movlw	0
  5823  0271  318D  256D  3181   	fcall	_writespi
  5824                           
  5825                           ;lighting.c: 248: writespi(0x00);
  5826  0274  3000               	movlw	0
  5827  0275  318D  256D  3181   	fcall	_writespi
  5828                           
  5829                           ;lighting.c: 249: writespi(r);
  5830  0278  0021               	movlb	1	; select bank1
  5831  0279  082A               	movf	display_blade_lights@r_479^(0+128),w
  5832  027A  318D  256D  3181   	fcall	_writespi
  5833                           
  5834                           ;lighting.c: 251: writespi(0xFF);
  5835  027D  30FF               	movlw	255
  5836  027E  318D  256D  3181   	fcall	_writespi
  5837                           
  5838                           ;lighting.c: 252: writespi(0x00);
  5839  0281  3000               	movlw	0
  5840  0282  318D  256D  3181   	fcall	_writespi
  5841                           
  5842                           ;lighting.c: 253: writespi(0x00);
  5843  0285  3000               	movlw	0
  5844  0286  318D  256D  3181   	fcall	_writespi
  5845                           
  5846                           ;lighting.c: 254: writespi(255 - r);
  5847  0289  0021               	movlb	1	; select bank1
  5848  028A  032A               	decf	display_blade_lights@r_479^(0+128),w
  5849  028B  3AFF               	xorlw	255
  5850  028C  3EFF               	addlw	255
  5851  028D  318D  256D  3181   	fcall	_writespi
  5852                           
  5853                           ;lighting.c: 256: writespi(0xFF);
  5854  0290  30FF               	movlw	255
  5855  0291  318D  256D  3181   	fcall	_writespi
  5856                           
  5857                           ;lighting.c: 257: writespi(0x00);
  5858  0294  3000               	movlw	0
  5859  0295  318D  256D  3181   	fcall	_writespi
  5860                           
  5861                           ;lighting.c: 258: writespi(0x00);
  5862  0298  3000               	movlw	0
  5863  0299  318D  256D  3181   	fcall	_writespi
  5864                           
  5865                           ;lighting.c: 259: writespi(r);
  5866  029C  0021               	movlb	1	; select bank1
  5867  029D  082A               	movf	display_blade_lights@r_479^(0+128),w
  5868  029E  318D  256D  3181   	fcall	_writespi
  5869                           
  5870                           ;lighting.c: 261: writespi(0xFF);
  5871  02A1  30FF               	movlw	255
  5872  02A2  318D  256D  3181   	fcall	_writespi
  5873                           
  5874                           ;lighting.c: 262: writespi(0x00);
  5875  02A5  3000               	movlw	0
  5876  02A6  318D  256D  3181   	fcall	_writespi
  5877                           
  5878                           ;lighting.c: 263: writespi(0x00);
  5879  02A9  3000               	movlw	0
  5880  02AA  318D  256D  3181   	fcall	_writespi
  5881                           
  5882                           ;lighting.c: 264: writespi(255-r);
  5883  02AD  0021               	movlb	1	; select bank1
  5884  02AE  032A               	decf	display_blade_lights@r_479^(0+128),w
  5885  02AF  3AFF               	xorlw	255
  5886  02B0  3EFF               	addlw	255
  5887  02B1  318D  256D  3181   	fcall	_writespi
  5888                           
  5889                           ;lighting.c: 266: writespi(0xFF);
  5890  02B4  30FF               	movlw	255
  5891  02B5  318D  256D  3181   	fcall	_writespi
  5892                           
  5893                           ;lighting.c: 267: writespi(0x00);
  5894  02B8  3000               	movlw	0
  5895  02B9  318D  256D  3181   	fcall	_writespi
  5896                           
  5897                           ;lighting.c: 268: writespi(0x00);
  5898  02BC  3000               	movlw	0
  5899  02BD  318D  256D  3181   	fcall	_writespi
  5900                           
  5901                           ;lighting.c: 269: writespi(r);
  5902  02C0  0021               	movlb	1	; select bank1
  5903  02C1  082A               	movf	display_blade_lights@r_479^(0+128),w
  5904  02C2  318D  256D  3181   	fcall	_writespi
  5905                           
  5906                           ;lighting.c: 271: for(int i = 0;i < 4; i++){
  5907  02C5  0021               	movlb	1	; select bank1
  5908  02C6  01A6               	clrf	display_blade_lights@i_481^(0+128)
  5909  02C7  01A7               	clrf	(display_blade_lights@i_481+1)^(0+128)
  5910  02C8  0827               	movf	(display_blade_lights@i_481+1)^(0+128),w
  5911  02C9  3A80               	xorlw	128
  5912  02CA  0020               	movlb	0	; select bank0
  5913  02CB  00C3               	movwf	??_display_blade_lights
  5914  02CC  3080               	movlw	128
  5915  02CD  0243               	subwf	??_display_blade_lights,w
  5916  02CE  1D03               	skipz
  5917  02CF  2AD3               	goto	u2815
  5918  02D0  3004               	movlw	4
  5919  02D1  0021               	movlb	1	; select bank1
  5920  02D2  0226               	subwf	display_blade_lights@i_481^(0+128),w
  5921  02D3                     u2815:	
  5922  02D3  1803               	btfsc	3,0
  5923  02D4  2AEB               	goto	l3272
  5924  02D5                     l3266:	
  5925                           
  5926                           ;lighting.c: 272: writespi(0xFF);
  5927  02D5  30FF               	movlw	255
  5928  02D6  318D  256D  3181   	fcall	_writespi
  5929  02D9  3001               	movlw	1
  5930  02DA  0021               	movlb	1	; select bank1
  5931  02DB  07A6               	addwf	display_blade_lights@i_481^(0+128),f
  5932  02DC  3000               	movlw	0
  5933  02DD  3DA7               	addwfc	(display_blade_lights@i_481+1)^(0+128),f
  5934  02DE  0827               	movf	(display_blade_lights@i_481+1)^(0+128),w
  5935  02DF  3A80               	xorlw	128
  5936  02E0  0020               	movlb	0	; select bank0
  5937  02E1  00C3               	movwf	??_display_blade_lights
  5938  02E2  3080               	movlw	128
  5939  02E3  0243               	subwf	??_display_blade_lights,w
  5940  02E4  1D03               	skipz
  5941  02E5  2AE9               	goto	u2825
  5942  02E6  3004               	movlw	4
  5943  02E7  0021               	movlb	1	; select bank1
  5944  02E8  0226               	subwf	display_blade_lights@i_481^(0+128),w
  5945  02E9                     u2825:	
  5946  02E9  1C03               	skipc
  5947  02EA  2AD5               	goto	l3266
  5948  02EB                     l3272:	
  5949                           
  5950                           ;lighting.c: 273: }
  5951                           ;lighting.c: 274: _delay((unsigned long)((20)*(32000000/4000.0)));
  5952  02EB  30D0               	movlw	208
  5953  02EC  0020               	movlb	0	; select bank0
  5954  02ED  00C4               	movwf	??_display_blade_lights+1
  5955  02EE  30C9               	movlw	201
  5956  02EF  00C3               	movwf	??_display_blade_lights
  5957  02F0                     u3177:	
  5958  02F0  0BC3               	decfsz	??_display_blade_lights,f
  5959  02F1  2AF0               	goto	u3177
  5960  02F2  0BC4               	decfsz	??_display_blade_lights+1,f
  5961  02F3  2AF0               	goto	u3177
  5962  02F4  3200               	nop2
  5963  02F5  3005               	movlw	5
  5964  02F6  0021               	movlb	1	; select bank1
  5965  02F7  02AA               	subwf	display_blade_lights@r_479^(0+128),f
  5966  02F8  2A44               	goto	L2
  5967  02F9                     __end_of_display_blade_lights:	
  5968                           
  5969                           	psect	text10
  5970  0D6D                     __ptext10:	
  5971 ;; *************** function _writespi *****************
  5972 ;; Defined at:
  5973 ;;		line 279 in file "../../source/lighting.c"
  5974 ;; Parameters:    Size  Location     Type
  5975 ;;  data_out        1    wreg     unsigned char 
  5976 ;; Auto vars:     Size  Location     Type
  5977 ;;  data_out        1   34[BANK0 ] unsigned char 
  5978 ;;  TempVar         1   33[BANK0 ] unsigned char 
  5979 ;; Return value:  Size  Location     Type
  5980 ;;		None               void
  5981 ;; Registers used:
  5982 ;;		wreg
  5983 ;; Tracked objects:
  5984 ;;		On entry : 0/0
  5985 ;;		On exit  : 0/0
  5986 ;;		Unchanged: 0/0
  5987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5989 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5990 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5991 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5992 ;;Total ram usage:        3 bytes
  5993 ;; Hardware stack levels used:    1
  5994 ;; Hardware stack levels required when called:    3
  5995 ;; This function calls:
  5996 ;;		Nothing
  5997 ;; This function is called by:
  5998 ;;		_display_blade_lights
  5999 ;; This function uses a non-reentrant model
  6000 ;;
  6001                           
  6002                           
  6003                           ;psect for function _writespi
  6004  0D6D                     _writespi:	
  6005                           
  6006                           ;incstack = 0
  6007                           ; Regs used in _writespi: [wreg]
  6008                           ;writespi@data_out stored from wreg
  6009  0D6D  0020               	movlb	0	; select bank0
  6010  0D6E  00C2               	movwf	writespi@data_out
  6011                           
  6012                           ;lighting.c: 281: unsigned char TempVar;
  6013                           ;lighting.c: 282: TempVar = SSPBUF;
  6014  0D6F  0024               	movlb	4	; select bank4
  6015  0D70  0811               	movf	17,w	;volatile
  6016  0D71  0020               	movlb	0	; select bank0
  6017  0D72  00C0               	movwf	??_writespi
  6018  0D73  0840               	movf	??_writespi,w
  6019  0D74  00C1               	movwf	writespi@TempVar
  6020                           
  6021                           ;lighting.c: 283: PIR1bits.SSP1IF = 0;
  6022  0D75  1191               	bcf	17,3	;volatile
  6023                           
  6024                           ;lighting.c: 284: SSPCON1bits.WCOL = 0;
  6025  0D76  0024               	movlb	4	; select bank4
  6026  0D77  1395               	bcf	21,7	;volatile
  6027                           
  6028                           ;lighting.c: 285: SSPBUF = data_out;
  6029  0D78  0020               	movlb	0	; select bank0
  6030  0D79  0842               	movf	writespi@data_out,w
  6031  0D7A  0024               	movlb	4	; select bank4
  6032  0D7B  0091               	movwf	17	;volatile
  6033  0D7C                     l587:	
  6034                           ;lighting.c: 290: while( !PIR1bits.SSP1IF );
  6035                           
  6036  0D7C  0020               	movlb	0	; select bank0
  6037  0D7D  1991               	btfsc	17,3	;volatile
  6038  0D7E  0008               	return
  6039  0D7F  2D7C               	goto	l587
  6040  0D80                     __end_of_writespi:	
  6041                           
  6042                           	psect	text11
  6043  0F77                     __ptext11:	
  6044 ;; *************** function _determine_sword_was_swung *****************
  6045 ;; Defined at:
  6046 ;;		line 16 in file "../../source/accelerometer.c"
  6047 ;; Parameters:    Size  Location     Type
  6048 ;;		None
  6049 ;; Auto vars:     Size  Location     Type
  6050 ;;  neg_thresh      2    9[BANK1 ] int 
  6051 ;;  pos_thresh      2    7[BANK1 ] int 
  6052 ;;  midpoint        2    0[BANK1 ] int 
  6053 ;;  xh              1   11[BANK1 ] unsigned char 
  6054 ;;  zl              1    6[BANK1 ] unsigned char 
  6055 ;;  yl              1    5[BANK1 ] unsigned char 
  6056 ;;  xl              1    4[BANK1 ] unsigned char 
  6057 ;;  zh              1    3[BANK1 ] unsigned char 
  6058 ;;  yh              1    2[BANK1 ] unsigned char 
  6059 ;; Return value:  Size  Location     Type
  6060 ;;                  1    wreg      unsigned char 
  6061 ;; Registers used:
  6062 ;;		wreg, status,2
  6063 ;; Tracked objects:
  6064 ;;		On entry : 0/0
  6065 ;;		On exit  : 0/0
  6066 ;;		Unchanged: 0/0
  6067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6069 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6070 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6071 ;;      Totals:         0       1      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6072 ;;Total ram usage:       13 bytes
  6073 ;; Hardware stack levels used:    1
  6074 ;; Hardware stack levels required when called:    3
  6075 ;; This function calls:
  6076 ;;		Nothing
  6077 ;; This function is called by:
  6078 ;;		_main
  6079 ;; This function uses a non-reentrant model
  6080 ;;
  6081                           
  6082                           
  6083                           ;psect for function _determine_sword_was_swung
  6084  0F77                     _determine_sword_was_swung:	
  6085                           
  6086                           ;accelerometer.c: 19: if(RC7 == 1)
  6087                           
  6088                           ;incstack = 0
  6089                           ; Regs used in _determine_sword_was_swung: [wreg+status,2]
  6090  0F77  0020               	movlb	0	; select bank0
  6091  0F78  1F8E               	btfss	14,7	;volatile
  6092  0F79  2F7C               	goto	l3102
  6093                           
  6094                           ;accelerometer.c: 20: {
  6095                           ;accelerometer.c: 21: return 1;
  6096  0F7A  3001               	movlw	1
  6097  0F7B  0008               	return
  6098  0F7C                     l3102:	
  6099                           
  6100                           ;accelerometer.c: 22: }
  6101                           ;accelerometer.c: 24: char xh = 0;
  6102  0F7C  0021               	movlb	1	; select bank1
  6103  0F7D  01AB               	clrf	determine_sword_was_swung@xh^(0+128)
  6104                           
  6105                           ;accelerometer.c: 25: char yh = 0;
  6106  0F7E  01A2               	clrf	determine_sword_was_swung@yh^(0+128)
  6107                           
  6108                           ;accelerometer.c: 26: char zh = 0;
  6109  0F7F  01A3               	clrf	determine_sword_was_swung@zh^(0+128)
  6110                           
  6111                           ;accelerometer.c: 27: char xl = 0;
  6112  0F80  01A4               	clrf	determine_sword_was_swung@xl^(0+128)
  6113                           
  6114                           ;accelerometer.c: 28: char yl = 0;
  6115  0F81  01A5               	clrf	determine_sword_was_swung@yl^(0+128)
  6116                           
  6117                           ;accelerometer.c: 29: char zl = 0;
  6118  0F82  01A6               	clrf	determine_sword_was_swung@zl^(0+128)
  6119                           
  6120                           ;accelerometer.c: 30: int pos_thresh = 0;
  6121  0F83  01A7               	clrf	determine_sword_was_swung@pos_thresh^(0+128)
  6122  0F84  01A8               	clrf	(determine_sword_was_swung@pos_thresh+1)^(0+128)
  6123                           
  6124                           ;accelerometer.c: 31: int neg_thresh = 0;
  6125  0F85  01A9               	clrf	determine_sword_was_swung@neg_thresh^(0+128)
  6126  0F86  01AA               	clrf	(determine_sword_was_swung@neg_thresh+1)^(0+128)
  6127                           
  6128                           ;accelerometer.c: 32: int midpoint = 0x0151;
  6129  0F87  3051               	movlw	81
  6130  0F88  00A0               	movwf	determine_sword_was_swung@midpoint^(0+128)
  6131  0F89  3001               	movlw	1
  6132  0F8A  00A1               	movwf	(determine_sword_was_swung@midpoint^(0+128)+1)
  6133                           
  6134                           ;accelerometer.c: 35: pos_thresh = 7;
  6135  0F8B  3007               	movlw	7
  6136  0F8C  00A7               	movwf	determine_sword_was_swung@pos_thresh^(0+128)
  6137  0F8D  3000               	movlw	0
  6138  0F8E  00A8               	movwf	(determine_sword_was_swung@pos_thresh^(0+128)+1)
  6139                           
  6140                           ;accelerometer.c: 36: neg_thresh = 4;
  6141  0F8F  3004               	movlw	4
  6142  0F90  00A9               	movwf	determine_sword_was_swung@neg_thresh^(0+128)
  6143  0F91  3000               	movlw	0
  6144  0F92  00AA               	movwf	(determine_sword_was_swung@neg_thresh^(0+128)+1)
  6145                           
  6146                           ;accelerometer.c: 49: ADCON0 = 0b00001001;
  6147  0F93  3009               	movlw	9
  6148  0F94  009D               	movwf	29	;volatile
  6149                           
  6150                           ;accelerometer.c: 50: _delay((unsigned long)((100)*(32000000/4000000.0)));
  6151  0F95  30C7               	movlw	199
  6152  0F96  0020               	movlb	0	; select bank0
  6153  0F97  00C0               	movwf	??_determine_sword_was_swung
  6154  0F98                     u3187:	
  6155  0F98  0000               	nop
  6156  0F99  0BC0               	decfsz	??_determine_sword_was_swung,f
  6157  0F9A  2F98               	goto	u3187
  6158  0F9B  3200               	nop2	;nop
  6159  0F9C  0000               	nop
  6160                           
  6161                           ;accelerometer.c: 51: ADGO = 1;
  6162  0F9D  0021               	movlb	1	; select bank1
  6163  0F9E  149D               	bsf	29,1	;volatile
  6164  0F9F                     l318:	
  6165                           ;accelerometer.c: 53: {
  6166                           ;accelerometer.c: 54: continue;
  6167                           
  6168                           ;accelerometer.c: 52: while(ADGO)
  6169                           
  6170  0F9F  189D               	btfsc	29,1	;volatile
  6171  0FA0  2F9F               	goto	l318
  6172                           
  6173                           ;accelerometer.c: 55: }
  6174                           ;accelerometer.c: 56: xh = ADRESH;
  6175  0FA1  081C               	movf	28,w	;volatile
  6176  0FA2  0020               	movlb	0	; select bank0
  6177  0FA3  00C0               	movwf	??_determine_sword_was_swung
  6178  0FA4  0840               	movf	??_determine_sword_was_swung,w
  6179  0FA5  0021               	movlb	1	; select bank1
  6180  0FA6  00AB               	movwf	determine_sword_was_swung@xh^(0+128)
  6181                           
  6182                           ;accelerometer.c: 57: xl = ADRESL;
  6183  0FA7  081B               	movf	27,w	;volatile
  6184  0FA8  0020               	movlb	0	; select bank0
  6185  0FA9  00C0               	movwf	??_determine_sword_was_swung
  6186  0FAA  0840               	movf	??_determine_sword_was_swung,w
  6187  0FAB  0021               	movlb	1	; select bank1
  6188  0FAC  00A4               	movwf	determine_sword_was_swung@xl^(0+128)
  6189                           
  6190                           ;accelerometer.c: 60: ADCON0 = 0b00001101;
  6191  0FAD  300D               	movlw	13
  6192  0FAE  009D               	movwf	29	;volatile
  6193                           
  6194                           ;accelerometer.c: 61: _delay((unsigned long)((100)*(32000000/4000000.0)));
  6195  0FAF  30C7               	movlw	199
  6196  0FB0  0020               	movlb	0	; select bank0
  6197  0FB1  00C0               	movwf	??_determine_sword_was_swung
  6198  0FB2                     u3197:	
  6199  0FB2  0000               	nop
  6200  0FB3  0BC0               	decfsz	??_determine_sword_was_swung,f
  6201  0FB4  2FB2               	goto	u3197
  6202  0FB5  3200               	nop2	;nop
  6203  0FB6  0000               	nop
  6204                           
  6205                           ;accelerometer.c: 62: ADGO = 1;
  6206  0FB7  0021               	movlb	1	; select bank1
  6207  0FB8  149D               	bsf	29,1	;volatile
  6208  0FB9                     l321:	
  6209                           ;accelerometer.c: 64: {
  6210                           ;accelerometer.c: 65: continue;
  6211                           
  6212                           ;accelerometer.c: 63: while(ADGO)
  6213                           
  6214  0FB9  189D               	btfsc	29,1	;volatile
  6215  0FBA  2FB9               	goto	l321
  6216                           
  6217                           ;accelerometer.c: 66: }
  6218                           ;accelerometer.c: 67: yh = ADRESH;
  6219  0FBB  081C               	movf	28,w	;volatile
  6220  0FBC  0020               	movlb	0	; select bank0
  6221  0FBD  00C0               	movwf	??_determine_sword_was_swung
  6222  0FBE  0840               	movf	??_determine_sword_was_swung,w
  6223  0FBF  0021               	movlb	1	; select bank1
  6224  0FC0  00A2               	movwf	determine_sword_was_swung@yh^(0+128)
  6225                           
  6226                           ;accelerometer.c: 68: yl = ADRESL;
  6227  0FC1  081B               	movf	27,w	;volatile
  6228  0FC2  0020               	movlb	0	; select bank0
  6229  0FC3  00C0               	movwf	??_determine_sword_was_swung
  6230  0FC4  0840               	movf	??_determine_sword_was_swung,w
  6231  0FC5  0021               	movlb	1	; select bank1
  6232  0FC6  00A5               	movwf	determine_sword_was_swung@yl^(0+128)
  6233                           
  6234                           ;accelerometer.c: 71: ADCON0 = 0b00010101;
  6235  0FC7  3015               	movlw	21
  6236  0FC8  009D               	movwf	29	;volatile
  6237                           
  6238                           ;accelerometer.c: 72: _delay((unsigned long)((100)*(32000000/4000000.0)));
  6239  0FC9  30C7               	movlw	199
  6240  0FCA  0020               	movlb	0	; select bank0
  6241  0FCB  00C0               	movwf	??_determine_sword_was_swung
  6242  0FCC                     u3207:	
  6243  0FCC  0000               	nop
  6244  0FCD  0BC0               	decfsz	??_determine_sword_was_swung,f
  6245  0FCE  2FCC               	goto	u3207
  6246  0FCF  3200               	nop2	;nop
  6247  0FD0  0000               	nop
  6248                           
  6249                           ;accelerometer.c: 73: ADGO = 1;
  6250  0FD1  0021               	movlb	1	; select bank1
  6251  0FD2  149D               	bsf	29,1	;volatile
  6252  0FD3                     l324:	
  6253                           ;accelerometer.c: 75: {
  6254                           ;accelerometer.c: 76: continue;
  6255                           
  6256                           ;accelerometer.c: 74: while(ADGO)
  6257                           
  6258  0FD3  189D               	btfsc	29,1	;volatile
  6259  0FD4  2FD3               	goto	l324
  6260                           
  6261                           ;accelerometer.c: 77: }
  6262                           ;accelerometer.c: 78: zh = ADRESH;
  6263  0FD5  081C               	movf	28,w	;volatile
  6264  0FD6  0020               	movlb	0	; select bank0
  6265  0FD7  00C0               	movwf	??_determine_sword_was_swung
  6266  0FD8  0840               	movf	??_determine_sword_was_swung,w
  6267  0FD9  0021               	movlb	1	; select bank1
  6268  0FDA  00A3               	movwf	determine_sword_was_swung@zh^(0+128)
  6269                           
  6270                           ;accelerometer.c: 79: zl = ADRESL;
  6271  0FDB  081B               	movf	27,w	;volatile
  6272  0FDC  0020               	movlb	0	; select bank0
  6273  0FDD  00C0               	movwf	??_determine_sword_was_swung
  6274  0FDE  0840               	movf	??_determine_sword_was_swung,w
  6275  0FDF  0021               	movlb	1	; select bank1
  6276  0FE0  00A6               	movwf	determine_sword_was_swung@zl^(0+128)
  6277                           
  6278                           ;accelerometer.c: 81: if( ( xh > pos_thresh ) || ( xh < neg_thresh )
  6279                           ;accelerometer.c: 83: )
  6280  0FE1  0828               	movf	(determine_sword_was_swung@pos_thresh+1)^(0+128),w
  6281  0FE2  3A80               	xorlw	128
  6282  0FE3  0020               	movlb	0	; select bank0
  6283  0FE4  00C0               	movwf	??_determine_sword_was_swung
  6284  0FE5  3080               	movlw	128
  6285  0FE6  0240               	subwf	??_determine_sword_was_swung,w
  6286  0FE7  1D03               	skipz
  6287  0FE8  2FEC               	goto	u2625
  6288  0FE9  0021               	movlb	1	; select bank1
  6289  0FEA  082B               	movf	determine_sword_was_swung@xh^(0+128),w
  6290  0FEB  0227               	subwf	determine_sword_was_swung@pos_thresh^(0+128),w
  6291  0FEC                     u2625:	
  6292  0FEC  1C03               	skipc
  6293  0FED  2FF8               	goto	l329
  6294  0FEE  0021               	movlb	1	; select bank1
  6295  0FEF  082A               	movf	(determine_sword_was_swung@neg_thresh+1)^(0+128),w
  6296  0FF0  3A80               	xorlw	128
  6297  0FF1  3C80               	sublw	128
  6298  0FF2  1D03               	skipz
  6299  0FF3  2FF6               	goto	u2635
  6300  0FF4  0829               	movf	determine_sword_was_swung@neg_thresh^(0+128),w
  6301  0FF5  022B               	subwf	determine_sword_was_swung@xh^(0+128),w
  6302  0FF6                     u2635:	
  6303  0FF6  1803               	skipnc
  6304  0FF7  2FFC               	goto	l327
  6305  0FF8                     l329:	
  6306                           
  6307                           ;accelerometer.c: 84: {
  6308                           ;accelerometer.c: 85: RC4 = 1;
  6309  0FF8  0020               	movlb	0	; select bank0
  6310  0FF9  160E               	bsf	14,4	;volatile
  6311                           
  6312                           ;accelerometer.c: 86: return 1;
  6313  0FFA  3001               	movlw	1
  6314                           
  6315                           ;accelerometer.c: 87: }
  6316  0FFB  0008               	return
  6317  0FFC                     l327:	
  6318                           
  6319                           ;accelerometer.c: 88: else
  6320                           ;accelerometer.c: 89: {
  6321                           ;accelerometer.c: 90: RC4 = 0;
  6322  0FFC  0020               	movlb	0	; select bank0
  6323  0FFD  120E               	bcf	14,4	;volatile
  6324                           
  6325                           ;accelerometer.c: 91: return 0;
  6326  0FFE  3000               	movlw	0
  6327  0FFF  0008               	return
  6328  1000                     __end_of_determine_sword_was_swung:	
  6329                           
  6330                           	psect	text12
  6331  0DB4                     __ptext12:	
  6332 ;; *************** function _determine_packets_to_send *****************
  6333 ;; Defined at:
  6334 ;;		line 14 in file "../../source/blade_connection.c"
  6335 ;; Parameters:    Size  Location     Type
  6336 ;;  packets         1    wreg     PTR unsigned char 
  6337 ;;		 -> main@pkt_arr(3), 
  6338 ;; Auto vars:     Size  Location     Type
  6339 ;;  packets         1   33[BANK0 ] PTR unsigned char 
  6340 ;;		 -> main@pkt_arr(3), 
  6341 ;; Return value:  Size  Location     Type
  6342 ;;		None               void
  6343 ;; Registers used:
  6344 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6345 ;; Tracked objects:
  6346 ;;		On entry : 0/0
  6347 ;;		On exit  : 0/0
  6348 ;;		Unchanged: 0/0
  6349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6351 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6352 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6353 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6354 ;;Total ram usage:        2 bytes
  6355 ;; Hardware stack levels used:    1
  6356 ;; Hardware stack levels required when called:    4
  6357 ;; This function calls:
  6358 ;;		_determine_omega_mode_active
  6359 ;; This function is called by:
  6360 ;;		_main
  6361 ;; This function uses a non-reentrant model
  6362 ;;
  6363                           
  6364                           
  6365                           ;psect for function _determine_packets_to_send
  6366  0DB4                     _determine_packets_to_send:	
  6367                           
  6368                           ;incstack = 0
  6369                           ; Regs used in _determine_packets_to_send: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
      +                          tack]
  6370                           ;determine_packets_to_send@packets stored from wreg
  6371  0DB4  0020               	movlb	0	; select bank0
  6372  0DB5  00C1               	movwf	determine_packets_to_send@packets
  6373                           
  6374                           ;blade_connection.c: 16: if(determine_omega_mode_active())
  6375  0DB6  318D  2538  318D   	fcall	_determine_omega_mode_active
  6376  0DB9  3A00               	xorlw	0
  6377  0DBA  1903               	skipnz
  6378  0DBB  2DCB               	goto	l2548
  6379                           
  6380                           ;blade_connection.c: 17: {
  6381                           ;blade_connection.c: 20: packets[0] = 0;
  6382  0DBC  0020               	movlb	0	; select bank0
  6383  0DBD  0841               	movf	determine_packets_to_send@packets,w
  6384  0DBE  0086               	movwf	6
  6385  0DBF  0187               	clrf	7
  6386  0DC0  0181               	clrf	1
  6387                           
  6388                           ;blade_connection.c: 21: packets[1] = 0;
  6389  0DC1  0A41               	incf	determine_packets_to_send@packets,w
  6390  0DC2  0086               	movwf	6
  6391  0DC3  0187               	clrf	7
  6392  0DC4  0181               	clrf	1
  6393                           
  6394                           ;blade_connection.c: 22: packets[2] = 0;
  6395  0DC5  0841               	movf	determine_packets_to_send@packets,w
  6396  0DC6  3E02               	addlw	2
  6397  0DC7  0086               	movwf	6
  6398  0DC8  0187               	clrf	7
  6399  0DC9  0181               	clrf	1
  6400                           
  6401                           ;blade_connection.c: 37: }
  6402  0DCA  0008               	return
  6403  0DCB                     l2548:	
  6404                           
  6405                           ;blade_connection.c: 38: else
  6406                           ;blade_connection.c: 39: {
  6407                           ;blade_connection.c: 42: packets[0] = 2;
  6408  0DCB  3002               	movlw	2
  6409  0DCC  0020               	movlb	0	; select bank0
  6410  0DCD  00C0               	movwf	??_determine_packets_to_send
  6411  0DCE  0841               	movf	determine_packets_to_send@packets,w
  6412  0DCF  0086               	movwf	6
  6413  0DD0  0187               	clrf	7
  6414  0DD1  0840               	movf	??_determine_packets_to_send,w
  6415  0DD2  0081               	movwf	1
  6416                           
  6417                           ;blade_connection.c: 43: packets[1] = 0;
  6418  0DD3  0A41               	incf	determine_packets_to_send@packets,w
  6419  0DD4  0086               	movwf	6
  6420  0DD5  0187               	clrf	7
  6421  0DD6  0181               	clrf	1
  6422                           
  6423                           ;blade_connection.c: 44: packets[2] = 0;
  6424  0DD7  0841               	movf	determine_packets_to_send@packets,w
  6425  0DD8  3E02               	addlw	2
  6426  0DD9  0086               	movwf	6
  6427  0DDA  0187               	clrf	7
  6428  0DDB  0181               	clrf	1
  6429  0DDC  0008               	return
  6430  0DDD                     __end_of_determine_packets_to_send:	
  6431                           ;blade_connection.c: 59: }
  6432                           ;blade_connection.c: 61: return;
  6433                           
  6434                           
  6435                           	psect	text13
  6436  0D38                     __ptext13:	
  6437 ;; *************** function _determine_omega_mode_active *****************
  6438 ;; Defined at:
  6439 ;;		line 9 in file "../../source/blade_connection.c"
  6440 ;; Parameters:    Size  Location     Type
  6441 ;;		None
  6442 ;; Auto vars:     Size  Location     Type
  6443 ;;		None
  6444 ;; Return value:  Size  Location     Type
  6445 ;;                  1    wreg      unsigned char 
  6446 ;; Registers used:
  6447 ;;		wreg
  6448 ;; Tracked objects:
  6449 ;;		On entry : 0/0
  6450 ;;		On exit  : 0/0
  6451 ;;		Unchanged: 0/0
  6452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6456 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6457 ;;Total ram usage:        0 bytes
  6458 ;; Hardware stack levels used:    1
  6459 ;; Hardware stack levels required when called:    3
  6460 ;; This function calls:
  6461 ;;		Nothing
  6462 ;; This function is called by:
  6463 ;;		_main
  6464 ;;		_determine_packets_to_send
  6465 ;; This function uses a non-reentrant model
  6466 ;;
  6467                           
  6468                           
  6469                           ;psect for function _determine_omega_mode_active
  6470  0D38                     _determine_omega_mode_active:	
  6471                           
  6472                           ;blade_connection.c: 11: return RA1;
  6473                           
  6474                           ;incstack = 0
  6475                           ; Regs used in _determine_omega_mode_active: [wreg]
  6476  0D38  3000               	movlw	0
  6477  0D39  0020               	movlb	0	; select bank0
  6478  0D3A  188C               	btfsc	12,1	;volatile
  6479  0D3B  3001               	movlw	1
  6480  0D3C  0008               	return
  6481  0D3D                     __end_of_determine_omega_mode_active:	
  6482                           
  6483                           	psect	intentry
  6484  0004                     __pintentry:	
  6485 ;; *************** function _isr *****************
  6486 ;; Defined at:
  6487 ;;		line 37 in file "../../source/interrupt.c"
  6488 ;; Parameters:    Size  Location     Type
  6489 ;;		None
  6490 ;; Auto vars:     Size  Location     Type
  6491 ;;		None
  6492 ;; Return value:  Size  Location     Type
  6493 ;;		None               void
  6494 ;; Registers used:
  6495 ;;		wreg, status,2, status,0, pclath, cstack
  6496 ;; Tracked objects:
  6497 ;;		On entry : 0/0
  6498 ;;		On exit  : 0/0
  6499 ;;		Unchanged: 0/0
  6500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6503 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6504 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6505 ;;Total ram usage:        2 bytes
  6506 ;; Hardware stack levels used:    1
  6507 ;; Hardware stack levels required when called:    2
  6508 ;; This function calls:
  6509 ;;		___awdiv
  6510 ;;		___awtoft
  6511 ;;		___ftge
  6512 ;;		___ftmul
  6513 ;;		___fttol
  6514 ;;		i1_display_blade_lights
  6515 ;; This function is called by:
  6516 ;;		Interrupt level 1
  6517 ;; This function uses a non-reentrant model
  6518 ;;
  6519                           
  6520  0004                     _isr:	
  6521                           
  6522                           ;incstack = 0
  6523                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  6524  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  6525  0005  3180               	pagesel	$
  6526  0006  0020               	movlb	0	; select bank0
  6527  0007  087F               	movf	127,w
  6528  0008  00BF               	movwf	??_isr+1
  6529                           
  6530                           ;interrupt.c: 39: TMR1 = 0;
  6531  0009  0196               	clrf	22	;volatile
  6532  000A  0197               	clrf	23	;volatile
  6533                           
  6534                           ;interrupt.c: 42: if (IOCAF1)
  6535  000B  0027               	movlb	7	; select bank7
  6536  000C  1C93               	btfss	19,1	;volatile
  6537  000D  2814               	goto	i1l168
  6538                           
  6539                           ;interrupt.c: 43: {
  6540                           ;interrupt.c: 45: IOCAF1 = 0;
  6541  000E  1093               	bcf	19,1	;volatile
  6542                           
  6543                           ;interrupt.c: 47: display_blade_lights(2);
  6544  000F  3002               	movlw	2
  6545  0010  3182  22F9  3180   	fcall	i1_display_blade_lights
  6546                           
  6547                           ;interrupt.c: 48: }
  6548  0013  295C               	goto	i1l174
  6549  0014                     i1l168:	
  6550                           
  6551                           ;interrupt.c: 50: else if (IOCAFbits.IOCAF4)
  6552  0014  1E13               	btfss	19,4	;volatile
  6553  0015  295C               	goto	i1l174
  6554                           
  6555                           ;interrupt.c: 51: {
  6556                           ;interrupt.c: 52: IOCAF &= 0b11101111;
  6557  0016  30EF               	movlw	239
  6558  0017  0020               	movlb	0	; select bank0
  6559  0018  00BE               	movwf	??_isr
  6560  0019  083E               	movf	??_isr,w
  6561  001A  0027               	movlb	7	; select bank7
  6562  001B  0593               	andwf	19,f	;volatile
  6563  001C                     i1l171:	
  6564                           ;interrupt.c: 53: while(PORTAbits.RA4)
  6565                           
  6566  001C  0020               	movlb	0	; select bank0
  6567  001D  1E0C               	btfss	12,4	;volatile
  6568  001E  2828               	goto	i1l3024
  6569                           
  6570                           ;interrupt.c: 54: {
  6571                           ;interrupt.c: 55: if(TMR1 >= 2678)
  6572  001F  300A               	movlw	10
  6573  0020  0020               	movlb	0	; select bank0
  6574  0021  0217               	subwf	23,w	;volatile
  6575  0022  3076               	movlw	118
  6576  0023  1903               	skipnz
  6577  0024  0216               	subwf	22,w	;volatile
  6578  0025  1803               	btfsc	3,0
  6579  0026  295C               	goto	i1l174
  6580  0027  281C               	goto	i1l171
  6581  0028                     i1l3024:	
  6582                           ;interrupt.c: 56: {
  6583                           ;interrupt.c: 57: return;
  6584                           
  6585                           
  6586                           ;interrupt.c: 58: }
  6587                           ;interrupt.c: 59: }
  6588                           ;interrupt.c: 60: TMR1 = 0;
  6589  0028  0196               	clrf	22	;volatile
  6590  0029  0197               	clrf	23	;volatile
  6591  002A                     i1l176:	
  6592                           ;interrupt.c: 61: while(!PORTAbits.RA4)
  6593                           
  6594  002A  1A0C               	btfsc	12,4	;volatile
  6595  002B  2834               	goto	i1l3030
  6596                           
  6597                           ;interrupt.c: 62: {
  6598                           ;interrupt.c: 63: if(TMR1 >= 2678)
  6599  002C  300A               	movlw	10
  6600  002D  0217               	subwf	23,w	;volatile
  6601  002E  3076               	movlw	118
  6602  002F  1903               	skipnz
  6603  0030  0216               	subwf	22,w	;volatile
  6604  0031  1803               	btfsc	3,0
  6605  0032  295C               	goto	i1l174
  6606  0033  282A               	goto	i1l176
  6607  0034                     i1l3030:	
  6608                           ;interrupt.c: 64: {
  6609                           ;interrupt.c: 65: return;
  6610                           
  6611                           
  6612                           ;interrupt.c: 66: }
  6613                           ;interrupt.c: 67: }
  6614                           ;interrupt.c: 68: TMR1 = 0;
  6615  0034  0196               	clrf	22	;volatile
  6616  0035  0197               	clrf	23	;volatile
  6617  0036                     i1l180:	
  6618                           ;interrupt.c: 69: while(PORTAbits.RA4)
  6619                           
  6620  0036  1E0C               	btfss	12,4	;volatile
  6621  0037  2840               	goto	i1l3036
  6622                           
  6623                           ;interrupt.c: 70: {
  6624                           ;interrupt.c: 71: if(TMR1 >= 2678)
  6625  0038  300A               	movlw	10
  6626  0039  0217               	subwf	23,w	;volatile
  6627  003A  3076               	movlw	118
  6628  003B  1903               	skipnz
  6629  003C  0216               	subwf	22,w	;volatile
  6630  003D  1803               	btfsc	3,0
  6631  003E  295C               	goto	i1l174
  6632  003F  2836               	goto	i1l180
  6633  0040                     i1l3036:	
  6634                           ;interrupt.c: 72: {
  6635                           ;interrupt.c: 73: return;
  6636                           
  6637                           
  6638                           ;interrupt.c: 74: }
  6639                           ;interrupt.c: 75: }
  6640                           ;interrupt.c: 76: D1cycles = TMR1;
  6641  0040  0817               	movf	23,w	;volatile
  6642  0041  00C9               	movwf	_D1cycles+1	;volatile
  6643  0042  0816               	movf	22,w	;volatile
  6644  0043  00C8               	movwf	_D1cycles	;volatile
  6645                           
  6646                           ;interrupt.c: 77: TMR1 = 0;
  6647  0044  0196               	clrf	22	;volatile
  6648  0045  0197               	clrf	23	;volatile
  6649  0046                     i1l184:	
  6650                           ;interrupt.c: 78: while(!PORTAbits.RA4)
  6651                           
  6652  0046  1A0C               	btfsc	12,4	;volatile
  6653  0047  2850               	goto	i1l3044
  6654                           
  6655                           ;interrupt.c: 79: {
  6656                           ;interrupt.c: 80: if(TMR1 >= 2678)
  6657  0048  300A               	movlw	10
  6658  0049  0217               	subwf	23,w	;volatile
  6659  004A  3076               	movlw	118
  6660  004B  1903               	skipnz
  6661  004C  0216               	subwf	22,w	;volatile
  6662  004D  1803               	btfsc	3,0
  6663  004E  295C               	goto	i1l174
  6664  004F  2846               	goto	i1l184
  6665  0050                     i1l3044:	
  6666                           ;interrupt.c: 81: {
  6667                           ;interrupt.c: 82: return;
  6668                           
  6669                           
  6670                           ;interrupt.c: 83: }
  6671                           ;interrupt.c: 84: }
  6672                           ;interrupt.c: 85: TMR1 = 0;
  6673  0050  0196               	clrf	22	;volatile
  6674  0051  0197               	clrf	23	;volatile
  6675  0052                     i1l188:	
  6676                           ;interrupt.c: 86: while(PORTAbits.RA4)
  6677                           
  6678  0052  1E0C               	btfss	12,4	;volatile
  6679  0053  285C               	goto	i1l3050
  6680                           
  6681                           ;interrupt.c: 87: {
  6682                           ;interrupt.c: 88: if(TMR1 >= 2678)
  6683  0054  300A               	movlw	10
  6684  0055  0217               	subwf	23,w	;volatile
  6685  0056  3076               	movlw	118
  6686  0057  1903               	skipnz
  6687  0058  0216               	subwf	22,w	;volatile
  6688  0059  1803               	btfsc	3,0
  6689  005A  295C               	goto	i1l174
  6690  005B  2852               	goto	i1l188
  6691  005C                     i1l3050:	
  6692                           ;interrupt.c: 89: {
  6693                           ;interrupt.c: 90: return;
  6694                           
  6695                           
  6696                           ;interrupt.c: 91: }
  6697                           ;interrupt.c: 92: }
  6698                           ;interrupt.c: 94: D2cycles = TMR1;
  6699  005C  0817               	movf	23,w	;volatile
  6700  005D  00CB               	movwf	_D2cycles+1	;volatile
  6701  005E  0816               	movf	22,w	;volatile
  6702  005F  00CA               	movwf	_D2cycles	;volatile
  6703                           
  6704                           ;interrupt.c: 98: if((D1cycles > (D2cycles * 1.1)) || (D2cycles > (D1cycles * 1.1)))
  6705  0060  30CD               	movlw	205
  6706  0061  00A0               	movwf	___ftmul@f1
  6707  0062  308C               	movlw	140
  6708  0063  00A1               	movwf	___ftmul@f1+1
  6709  0064  303F               	movlw	63
  6710  0065  00A2               	movwf	___ftmul@f1+2
  6711  0066  084B               	movf	_D2cycles+1,w	;volatile
  6712  0067  00F9               	movwf	___awtoft@c+1
  6713  0068  084A               	movf	_D2cycles,w	;volatile
  6714  0069  00F8               	movwf	___awtoft@c
  6715  006A  318D  2594  3180   	fcall	___awtoft
  6716  006D  0878               	movf	?___awtoft,w
  6717  006E  0020               	movlb	0	; select bank0
  6718  006F  00A3               	movwf	___ftmul@f2
  6719  0070  0879               	movf	?___awtoft+1,w
  6720  0071  00A4               	movwf	___ftmul@f2+1
  6721  0072  087A               	movf	?___awtoft+2,w
  6722  0073  00A5               	movwf	___ftmul@f2+2
  6723  0074  3185  25AB  3180   	fcall	___ftmul
  6724  0077  0020               	movlb	0	; select bank0
  6725  0078  0820               	movf	?___ftmul,w
  6726  0079  00B0               	movwf	___ftge@ff1
  6727  007A  0821               	movf	?___ftmul+1,w
  6728  007B  00B1               	movwf	___ftge@ff1+1
  6729  007C  0822               	movf	?___ftmul+2,w
  6730  007D  00B2               	movwf	___ftge@ff1+2
  6731  007E  0849               	movf	_D1cycles+1,w	;volatile
  6732  007F  00F9               	movwf	___awtoft@c+1
  6733  0080  0848               	movf	_D1cycles,w	;volatile
  6734  0081  00F8               	movwf	___awtoft@c
  6735  0082  318D  2594  3180   	fcall	___awtoft
  6736  0085  0878               	movf	?___awtoft,w
  6737  0086  0020               	movlb	0	; select bank0
  6738  0087  00B3               	movwf	___ftge@ff2
  6739  0088  0879               	movf	?___awtoft+1,w
  6740  0089  00B4               	movwf	___ftge@ff2+1
  6741  008A  087A               	movf	?___awtoft+2,w
  6742  008B  00B5               	movwf	___ftge@ff2+2
  6743  008C  318E  2616  3180   	fcall	___ftge
  6744  008F  1C03               	btfss	3,0
  6745  0090  295C               	goto	i1l174
  6746  0091  30CD               	movlw	205
  6747  0092  0020               	movlb	0	; select bank0
  6748  0093  00A0               	movwf	___ftmul@f1
  6749  0094  308C               	movlw	140
  6750  0095  00A1               	movwf	___ftmul@f1+1
  6751  0096  303F               	movlw	63
  6752  0097  00A2               	movwf	___ftmul@f1+2
  6753  0098  0849               	movf	_D1cycles+1,w	;volatile
  6754  0099  00F9               	movwf	___awtoft@c+1
  6755  009A  0848               	movf	_D1cycles,w	;volatile
  6756  009B  00F8               	movwf	___awtoft@c
  6757  009C  318D  2594  3180   	fcall	___awtoft
  6758  009F  0878               	movf	?___awtoft,w
  6759  00A0  0020               	movlb	0	; select bank0
  6760  00A1  00A3               	movwf	___ftmul@f2
  6761  00A2  0879               	movf	?___awtoft+1,w
  6762  00A3  00A4               	movwf	___ftmul@f2+1
  6763  00A4  087A               	movf	?___awtoft+2,w
  6764  00A5  00A5               	movwf	___ftmul@f2+2
  6765  00A6  3185  25AB  3180   	fcall	___ftmul
  6766  00A9  0020               	movlb	0	; select bank0
  6767  00AA  0820               	movf	?___ftmul,w
  6768  00AB  00B0               	movwf	___ftge@ff1
  6769  00AC  0821               	movf	?___ftmul+1,w
  6770  00AD  00B1               	movwf	___ftge@ff1+1
  6771  00AE  0822               	movf	?___ftmul+2,w
  6772  00AF  00B2               	movwf	___ftge@ff1+2
  6773  00B0  084B               	movf	_D2cycles+1,w	;volatile
  6774  00B1  00F9               	movwf	___awtoft@c+1
  6775  00B2  084A               	movf	_D2cycles,w	;volatile
  6776  00B3  00F8               	movwf	___awtoft@c
  6777  00B4  318D  2594  3180   	fcall	___awtoft
  6778  00B7  0878               	movf	?___awtoft,w
  6779  00B8  0020               	movlb	0	; select bank0
  6780  00B9  00B3               	movwf	___ftge@ff2
  6781  00BA  0879               	movf	?___awtoft+1,w
  6782  00BB  00B4               	movwf	___ftge@ff2+1
  6783  00BC  087A               	movf	?___awtoft+2,w
  6784  00BD  00B5               	movwf	___ftge@ff2+2
  6785  00BE  318E  2616  3180   	fcall	___ftge
  6786  00C1  1C03               	btfss	3,0
  6787  00C2  295C               	goto	i1l174
  6788                           
  6789                           ;interrupt.c: 101: }
  6790                           ;interrupt.c: 103: Davgcycles = (D1cycles + D2cycles) / 2;
  6791                           
  6792                           ;interrupt.c: 99: {
  6793                           ;interrupt.c: 100: return;
  6794  00C3  3002               	movlw	2
  6795  00C4  00F0               	movwf	___awdiv@divisor
  6796  00C5  3000               	movlw	0
  6797  00C6  00F1               	movwf	___awdiv@divisor+1
  6798  00C7  0020               	movlb	0	; select bank0
  6799  00C8  084A               	movf	_D2cycles,w	;volatile
  6800  00C9  0748               	addwf	_D1cycles,w	;volatile
  6801  00CA  00F2               	movwf	___awdiv@dividend
  6802  00CB  084B               	movf	_D2cycles+1,w	;volatile
  6803  00CC  3D49               	addwfc	_D1cycles+1,w	;volatile
  6804  00CD  00F3               	movwf	___awdiv@dividend+1
  6805  00CE  318E  269F  3180   	fcall	___awdiv
  6806  00D1  0871               	movf	?___awdiv+1,w
  6807  00D2  0020               	movlb	0	; select bank0
  6808  00D3  00CD               	movwf	_Davgcycles+1	;volatile
  6809  00D4  0870               	movf	?___awdiv,w
  6810  00D5  00CC               	movwf	_Davgcycles	;volatile
  6811                           
  6812                           ;interrupt.c: 104: numPackets = Davgcycles * 17.85;
  6813  00D6  084D               	movf	_Davgcycles+1,w	;volatile
  6814  00D7  00F9               	movwf	___awtoft@c+1
  6815  00D8  084C               	movf	_Davgcycles,w	;volatile
  6816  00D9  00F8               	movwf	___awtoft@c
  6817  00DA  318D  2594  3180   	fcall	___awtoft
  6818  00DD  0878               	movf	?___awtoft,w
  6819  00DE  0020               	movlb	0	; select bank0
  6820  00DF  00A3               	movwf	___ftmul@f2
  6821  00E0  0879               	movf	?___awtoft+1,w
  6822  00E1  00A4               	movwf	___ftmul@f2+1
  6823  00E2  087A               	movf	?___awtoft+2,w
  6824  00E3  00A5               	movwf	___ftmul@f2+2
  6825  00E4  30CD               	movlw	205
  6826  00E5  00A0               	movwf	___ftmul@f1
  6827  00E6  308E               	movlw	142
  6828  00E7  00A1               	movwf	___ftmul@f1+1
  6829  00E8  3041               	movlw	65
  6830  00E9  00A2               	movwf	___ftmul@f1+2
  6831  00EA  3185  25AB  3180   	fcall	___ftmul
  6832  00ED  0020               	movlb	0	; select bank0
  6833  00EE  0820               	movf	?___ftmul,w
  6834  00EF  00B0               	movwf	___fttol@f1
  6835  00F0  0821               	movf	?___ftmul+1,w
  6836  00F1  00B1               	movwf	___fttol@f1+1
  6837  00F2  0822               	movf	?___ftmul+2,w
  6838  00F3  00B2               	movwf	___fttol@f1+2
  6839  00F4  318E  26F0  3180   	fcall	___fttol
  6840  00F7  0020               	movlb	0	; select bank0
  6841  00F8  0831               	movf	?___fttol+1,w
  6842  00F9  00CF               	movwf	_numPackets+1	;volatile
  6843  00FA  0830               	movf	?___fttol,w
  6844  00FB  00CE               	movwf	_numPackets	;volatile
  6845                           
  6846                           ;interrupt.c: 106: if(numPackets >= 6000 && numPackets <7500)
  6847  00FC  084F               	movf	_numPackets+1,w	;volatile
  6848  00FD  3A80               	xorlw	128
  6849  00FE  00BE               	movwf	??_isr
  6850  00FF  3097               	movlw	151
  6851  0100  023E               	subwf	??_isr,w
  6852  0101  1D03               	skipz
  6853  0102  2905               	goto	u249_25
  6854  0103  3070               	movlw	112
  6855  0104  024E               	subwf	_numPackets,w	;volatile
  6856  0105                     u249_25:	
  6857  0105  1C03               	skipc
  6858  0106  291A               	goto	i1l3070
  6859  0107  0020               	movlb	0	; select bank0
  6860  0108  084F               	movf	_numPackets+1,w	;volatile
  6861  0109  3A80               	xorlw	128
  6862  010A  00BE               	movwf	??_isr
  6863  010B  309D               	movlw	157
  6864  010C  023E               	subwf	??_isr,w
  6865  010D  1D03               	skipz
  6866  010E  2911               	goto	u250_25
  6867  010F  304C               	movlw	76
  6868  0110  024E               	subwf	_numPackets,w	;volatile
  6869  0111                     u250_25:	
  6870  0111  1803               	skipnc
  6871  0112  291A               	goto	i1l3070
  6872                           
  6873                           ;interrupt.c: 107: {
  6874                           ;interrupt.c: 108: if(health > 0)
  6875  0113  0021               	movlb	1	; select bank1
  6876  0114  0834               	movf	_health^(0+128),w
  6877  0115  1903               	btfsc	3,2
  6878  0116  295C               	goto	i1l174
  6879                           
  6880                           ;interrupt.c: 109: {
  6881                           ;interrupt.c: 110: health--;
  6882  0117  3001               	movlw	1
  6883  0118  02B4               	subwf	_health^(0+128),f
  6884                           
  6885                           ;interrupt.c: 113: }
  6886                           
  6887                           ;interrupt.c: 111: }
  6888                           ;interrupt.c: 112: return;
  6889  0119  295C               	goto	i1l174
  6890  011A                     i1l3070:	
  6891                           
  6892                           ;interrupt.c: 114: else if(numPackets >= 10000 && numPackets < 12000)
  6893  011A  0020               	movlb	0	; select bank0
  6894  011B  084F               	movf	_numPackets+1,w	;volatile
  6895  011C  3A80               	xorlw	128
  6896  011D  00BE               	movwf	??_isr
  6897  011E  30A7               	movlw	167
  6898  011F  023E               	subwf	??_isr,w
  6899  0120  1D03               	skipz
  6900  0121  2924               	goto	u252_25
  6901  0122  3010               	movlw	16
  6902  0123  024E               	subwf	_numPackets,w	;volatile
  6903  0124                     u252_25:	
  6904  0124  1C03               	skipc
  6905  0125  293E               	goto	i1l3082
  6906  0126  0020               	movlb	0	; select bank0
  6907  0127  084F               	movf	_numPackets+1,w	;volatile
  6908  0128  3A80               	xorlw	128
  6909  0129  00BE               	movwf	??_isr
  6910  012A  30AE               	movlw	174
  6911  012B  023E               	subwf	??_isr,w
  6912  012C  1D03               	skipz
  6913  012D  2930               	goto	u253_25
  6914  012E  30E0               	movlw	224
  6915  012F  024E               	subwf	_numPackets,w	;volatile
  6916  0130                     u253_25:	
  6917  0130  1803               	skipnc
  6918  0131  293E               	goto	i1l3082
  6919                           
  6920                           ;interrupt.c: 115: {
  6921                           ;interrupt.c: 116: if(health < 50)
  6922  0132  3032               	movlw	50
  6923  0133  0021               	movlb	1	; select bank1
  6924  0134  0234               	subwf	_health^(0+128),w
  6925  0135  1803               	skipnc
  6926  0136  295C               	goto	i1l174
  6927                           
  6928                           ;interrupt.c: 117: {
  6929                           ;interrupt.c: 118: health++;
  6930  0137  3001               	movlw	1
  6931  0138  0020               	movlb	0	; select bank0
  6932  0139  00BE               	movwf	??_isr
  6933  013A  083E               	movf	??_isr,w
  6934  013B  0021               	movlb	1	; select bank1
  6935  013C  07B4               	addwf	_health^(0+128),f
  6936                           
  6937                           ;interrupt.c: 121: }
  6938                           
  6939                           ;interrupt.c: 119: }
  6940                           ;interrupt.c: 120: return;
  6941  013D  295C               	goto	i1l174
  6942  013E                     i1l3082:	
  6943                           
  6944                           ;interrupt.c: 122: else if(numPackets >= 13000 && numPackets < 15000)
  6945  013E  0020               	movlb	0	; select bank0
  6946  013F  084F               	movf	_numPackets+1,w	;volatile
  6947  0140  3A80               	xorlw	128
  6948  0141  00BE               	movwf	??_isr
  6949  0142  30B2               	movlw	178
  6950  0143  023E               	subwf	??_isr,w
  6951  0144  1D03               	skipz
  6952  0145  2948               	goto	u255_25
  6953  0146  30C8               	movlw	200
  6954  0147  024E               	subwf	_numPackets,w	;volatile
  6955  0148                     u255_25:	
  6956  0148  1C03               	skipc
  6957  0149  295C               	goto	i1l174
  6958  014A  0020               	movlb	0	; select bank0
  6959  014B  084F               	movf	_numPackets+1,w	;volatile
  6960  014C  3A80               	xorlw	128
  6961  014D  00BE               	movwf	??_isr
  6962  014E  30BA               	movlw	186
  6963  014F  023E               	subwf	??_isr,w
  6964  0150  1D03               	skipz
  6965  0151  2954               	goto	u256_25
  6966  0152  3098               	movlw	152
  6967  0153  024E               	subwf	_numPackets,w	;volatile
  6968  0154                     u256_25:	
  6969  0154  1803               	skipnc
  6970  0155  295C               	goto	i1l174
  6971                           
  6972                           ;interrupt.c: 123: {
  6973                           ;interrupt.c: 124: stun_counter++;
  6974  0156  3001               	movlw	1
  6975  0157  0020               	movlb	0	; select bank0
  6976  0158  00BE               	movwf	??_isr
  6977  0159  083E               	movf	??_isr,w
  6978  015A  0021               	movlb	1	; select bank1
  6979  015B  07B3               	addwf	_stun_counter^(0+128),f
  6980  015C                     i1l174:	
  6981                           ;interrupt.c: 126: }
  6982                           ;interrupt.c: 127: return;
  6983                           
  6984                           ;interrupt.c: 125: return;
  6985                           
  6986  015C  0020               	movlb	0	; select bank0
  6987  015D  083F               	movf	??_isr+1,w
  6988  015E  00FF               	movwf	127
  6989  015F  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  6990  0160  0009               	retfie
  6991  0161                     __end_of_isr:	
  6992                           
  6993                           	psect	text15
  6994  02F9                     __ptext15:	
  6995 ;; *************** function i1_display_blade_lights *****************
  6996 ;; Defined at:
  6997 ;;		line 193 in file "../../source/lighting.c"
  6998 ;; Parameters:    Size  Location     Type
  6999 ;;  mode            1    wreg     unsigned char 
  7000 ;; Auto vars:     Size  Location     Type
  7001 ;;  mode            1    0[BANK0 ] unsigned char 
  7002 ;;  display_blad    2    7[BANK0 ] int 
  7003 ;;  display_blad    2    5[BANK0 ] int 
  7004 ;;  display_blad    2    3[BANK0 ] int 
  7005 ;;  display_blad    2    1[BANK0 ] int 
  7006 ;;  display_blad    1   10[BANK0 ] unsigned char 
  7007 ;;  display_blad    1    9[BANK0 ] unsigned char 
  7008 ;; Return value:  Size  Location     Type
  7009 ;;		None               void
  7010 ;; Registers used:
  7011 ;;		wreg, status,2, status,0, pclath, cstack
  7012 ;; Tracked objects:
  7013 ;;		On entry : 0/0
  7014 ;;		On exit  : 0/0
  7015 ;;		Unchanged: 0/0
  7016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7018 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7019 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7020 ;;      Totals:         2      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7021 ;;Total ram usage:       13 bytes
  7022 ;; Hardware stack levels used:    1
  7023 ;; Hardware stack levels required when called:    1
  7024 ;; This function calls:
  7025 ;;		i1_writespi
  7026 ;; This function is called by:
  7027 ;;		_isr
  7028 ;; This function uses a non-reentrant model
  7029 ;;
  7030                           
  7031                           
  7032                           ;psect for function i1_display_blade_lights
  7033  02F9                     i1_display_blade_lights:	
  7034                           
  7035                           ;incstack = 0
  7036                           ; Regs used in i1_display_blade_lights: [wreg+status,2+status,0+pclath+cstack]
  7037                           ;i1display_blade_lights@mode stored from wreg
  7038  02F9  0020               	movlb	0	; select bank0
  7039  02FA  00A0               	movwf	i1display_blade_lights@mode
  7040                           
  7041                           ;lighting.c: 195: if( (mode == 0)
  7042                           ;lighting.c: 196: || (mode == 1)
  7043                           ;lighting.c: 197: || (mode == 2) )
  7044  02FB  0820               	movf	i1display_blade_lights@mode,w
  7045  02FC  1903               	btfsc	3,2
  7046  02FD  2B05               	goto	i1l2870
  7047  02FE  0320               	decf	i1display_blade_lights@mode,w
  7048  02FF  1903               	btfsc	3,2
  7049  0300  2B05               	goto	i1l2870
  7050  0301  3002               	movlw	2
  7051  0302  0620               	xorwf	i1display_blade_lights@mode,w
  7052  0303  1D03               	btfss	3,2
  7053  0304  0008               	return
  7054  0305                     i1l2870:	
  7055                           
  7056                           ;lighting.c: 198: {
  7057                           ;lighting.c: 199: for(unsigned char r = 0;r < 255; r+=5)
  7058  0305  01A9               	clrf	i1display_blade_lights@r
  7059  0306  0A29               	incf	i1display_blade_lights@r,w
  7060  0307  1903               	btfsc	3,2
  7061  0308  2BB6               	goto	i1l2908
  7062  0309                     i1l2876:	
  7063                           
  7064                           ;lighting.c: 200: {
  7065                           ;lighting.c: 202: for(int i = 0;i < 4; i++){
  7066  0309  01A1               	clrf	i1display_blade_lights@i
  7067  030A  01A2               	clrf	i1display_blade_lights@i+1
  7068  030B  0822               	movf	i1display_blade_lights@i+1,w
  7069  030C  3A80               	xorlw	128
  7070  030D  00F3               	movwf	??i1_display_blade_lights
  7071  030E  3080               	movlw	128
  7072  030F  0273               	subwf	??i1_display_blade_lights,w
  7073  0310  1D03               	skipz
  7074  0311  2B14               	goto	u215_25
  7075  0312  3004               	movlw	4
  7076  0313  0221               	subwf	i1display_blade_lights@i,w
  7077  0314                     u215_25:	
  7078  0314  1803               	btfsc	3,0
  7079  0315  2B2A               	goto	i1l2888
  7080  0316                     i1l2882:	
  7081                           
  7082                           ;lighting.c: 203: writespi(0x00);
  7083  0316  3000               	movlw	0
  7084  0317  318D  254C  3182   	fcall	i1_writespi
  7085  031A  3001               	movlw	1
  7086  031B  0020               	movlb	0	; select bank0
  7087  031C  07A1               	addwf	i1display_blade_lights@i,f
  7088  031D  3000               	movlw	0
  7089  031E  3DA2               	addwfc	i1display_blade_lights@i+1,f
  7090  031F  0822               	movf	i1display_blade_lights@i+1,w
  7091  0320  3A80               	xorlw	128
  7092  0321  00F3               	movwf	??i1_display_blade_lights
  7093  0322  3080               	movlw	128
  7094  0323  0273               	subwf	??i1_display_blade_lights,w
  7095  0324  1D03               	skipz
  7096  0325  2B28               	goto	u216_25
  7097  0326  3004               	movlw	4
  7098  0327  0221               	subwf	i1display_blade_lights@i,w
  7099  0328                     u216_25:	
  7100  0328  1C03               	skipc
  7101  0329  2B16               	goto	i1l2882
  7102  032A                     i1l2888:	
  7103                           
  7104                           ;lighting.c: 204: }
  7105                           ;lighting.c: 206: writespi(0xFF);
  7106  032A  30FF               	movlw	255
  7107  032B  318D  254C  3182   	fcall	i1_writespi
  7108                           
  7109                           ;lighting.c: 207: writespi(0x00);
  7110  032E  3000               	movlw	0
  7111  032F  318D  254C  3182   	fcall	i1_writespi
  7112                           
  7113                           ;lighting.c: 208: writespi(0x00);
  7114  0332  3000               	movlw	0
  7115  0333  318D  254C  3182   	fcall	i1_writespi
  7116                           
  7117                           ;lighting.c: 209: writespi(r);
  7118  0336  0020               	movlb	0	; select bank0
  7119  0337  0829               	movf	i1display_blade_lights@r,w
  7120  0338  318D  254C  3182   	fcall	i1_writespi
  7121                           
  7122                           ;lighting.c: 211: writespi(0xFF);
  7123  033B  30FF               	movlw	255
  7124  033C  318D  254C  3182   	fcall	i1_writespi
  7125                           
  7126                           ;lighting.c: 212: writespi(0x00);
  7127  033F  3000               	movlw	0
  7128  0340  318D  254C  3182   	fcall	i1_writespi
  7129                           
  7130                           ;lighting.c: 213: writespi(0x00);
  7131  0343  3000               	movlw	0
  7132  0344  318D  254C  3182   	fcall	i1_writespi
  7133                           
  7134                           ;lighting.c: 214: writespi(255 - r);
  7135  0347  0020               	movlb	0	; select bank0
  7136  0348  0329               	decf	i1display_blade_lights@r,w
  7137  0349  3AFF               	xorlw	255
  7138  034A  3EFF               	addlw	255
  7139  034B  318D  254C  3182   	fcall	i1_writespi
  7140                           
  7141                           ;lighting.c: 216: writespi(0xFF);
  7142  034E  30FF               	movlw	255
  7143  034F  318D  254C  3182   	fcall	i1_writespi
  7144                           
  7145                           ;lighting.c: 217: writespi(0x00);
  7146  0352  3000               	movlw	0
  7147  0353  318D  254C  3182   	fcall	i1_writespi
  7148                           
  7149                           ;lighting.c: 218: writespi(0x00);
  7150  0356  3000               	movlw	0
  7151  0357  318D  254C  3182   	fcall	i1_writespi
  7152                           
  7153                           ;lighting.c: 219: writespi(r);
  7154  035A  0020               	movlb	0	; select bank0
  7155  035B  0829               	movf	i1display_blade_lights@r,w
  7156  035C  318D  254C  3182   	fcall	i1_writespi
  7157                           
  7158                           ;lighting.c: 221: writespi(0xFF);
  7159  035F  30FF               	movlw	255
  7160  0360  318D  254C  3182   	fcall	i1_writespi
  7161                           
  7162                           ;lighting.c: 222: writespi(0x00);
  7163  0363  3000               	movlw	0
  7164  0364  318D  254C  3182   	fcall	i1_writespi
  7165                           
  7166                           ;lighting.c: 223: writespi(0x00);
  7167  0367  3000               	movlw	0
  7168  0368  318D  254C  3182   	fcall	i1_writespi
  7169                           
  7170                           ;lighting.c: 224: writespi(255-r);
  7171  036B  0020               	movlb	0	; select bank0
  7172  036C  0329               	decf	i1display_blade_lights@r,w
  7173  036D  3AFF               	xorlw	255
  7174  036E  3EFF               	addlw	255
  7175  036F  318D  254C  3182   	fcall	i1_writespi
  7176                           
  7177                           ;lighting.c: 226: writespi(0xFF);
  7178  0372  30FF               	movlw	255
  7179  0373  318D  254C  3182   	fcall	i1_writespi
  7180                           
  7181                           ;lighting.c: 227: writespi(0x00);
  7182  0376  3000               	movlw	0
  7183  0377  318D  254C  3182   	fcall	i1_writespi
  7184                           
  7185                           ;lighting.c: 228: writespi(0x00);
  7186  037A  3000               	movlw	0
  7187  037B  318D  254C  3182   	fcall	i1_writespi
  7188                           
  7189                           ;lighting.c: 229: writespi(r);
  7190  037E  0020               	movlb	0	; select bank0
  7191  037F  0829               	movf	i1display_blade_lights@r,w
  7192  0380  318D  254C  3182   	fcall	i1_writespi
  7193                           
  7194                           ;lighting.c: 231: for(int i = 0;i < 4; i++){
  7195  0383  0020               	movlb	0	; select bank0
  7196  0384  01A3               	clrf	i1display_blade_lights@i_478
  7197  0385  01A4               	clrf	i1display_blade_lights@i_478+1
  7198  0386  0824               	movf	i1display_blade_lights@i_478+1,w
  7199  0387  3A80               	xorlw	128
  7200  0388  00F3               	movwf	??i1_display_blade_lights
  7201  0389  3080               	movlw	128
  7202  038A  0273               	subwf	??i1_display_blade_lights,w
  7203  038B  1D03               	skipz
  7204  038C  2B8F               	goto	u217_25
  7205  038D  3004               	movlw	4
  7206  038E  0223               	subwf	i1display_blade_lights@i_478,w
  7207  038F                     u217_25:	
  7208  038F  1803               	btfsc	3,0
  7209  0390  2BA5               	goto	i1l2902
  7210  0391                     i1l2896:	
  7211                           
  7212                           ;lighting.c: 232: writespi(0xFF);
  7213  0391  30FF               	movlw	255
  7214  0392  318D  254C  3182   	fcall	i1_writespi
  7215  0395  3001               	movlw	1
  7216  0396  0020               	movlb	0	; select bank0
  7217  0397  07A3               	addwf	i1display_blade_lights@i_478,f
  7218  0398  3000               	movlw	0
  7219  0399  3DA4               	addwfc	i1display_blade_lights@i_478+1,f
  7220  039A  0824               	movf	i1display_blade_lights@i_478+1,w
  7221  039B  3A80               	xorlw	128
  7222  039C  00F3               	movwf	??i1_display_blade_lights
  7223  039D  3080               	movlw	128
  7224  039E  0273               	subwf	??i1_display_blade_lights,w
  7225  039F  1D03               	skipz
  7226  03A0  2BA3               	goto	u218_25
  7227  03A1  3004               	movlw	4
  7228  03A2  0223               	subwf	i1display_blade_lights@i_478,w
  7229  03A3                     u218_25:	
  7230  03A3  1C03               	skipc
  7231  03A4  2B91               	goto	i1l2896
  7232  03A5                     i1l2902:	
  7233                           
  7234                           ;lighting.c: 233: }
  7235                           ;lighting.c: 234: _delay((unsigned long)((20)*(32000000/4000.0)));
  7236  03A5  30D0               	movlw	208
  7237  03A6  00F4               	movwf	??i1_display_blade_lights+1
  7238  03A7  30C9               	movlw	201
  7239  03A8  00F3               	movwf	??i1_display_blade_lights
  7240  03A9                     u321_27:	
  7241  03A9  0BF3               	decfsz	??i1_display_blade_lights,f
  7242  03AA  2BA9               	goto	u321_27
  7243  03AB  0BF4               	decfsz	??i1_display_blade_lights+1,f
  7244  03AC  2BA9               	goto	u321_27
  7245  03AD  3200               	nop2
  7246  03AE  3005               	movlw	5
  7247  03AF  00F3               	movwf	??i1_display_blade_lights
  7248  03B0  0873               	movf	??i1_display_blade_lights,w
  7249  03B1  0020               	movlb	0	; select bank0
  7250  03B2  07A9               	addwf	i1display_blade_lights@r,f
  7251  03B3  0A29               	incf	i1display_blade_lights@r,w
  7252  03B4  1D03               	btfss	3,2
  7253  03B5  2B09               	goto	i1l2876
  7254  03B6                     i1l2908:	
  7255                           
  7256                           ;lighting.c: 235: }
  7257                           ;lighting.c: 239: for(unsigned char r = 255;r > 0; r-=5)
  7258  03B6  30FF               	movlw	255
  7259  03B7  00F3               	movwf	??i1_display_blade_lights
  7260  03B8  0873               	movf	??i1_display_blade_lights,w
  7261  03B9  00AA               	movwf	i1display_blade_lights@r_479
  7262  03BA                     L3:	
  7263  03BA  082A               	movf	i1display_blade_lights@r_479,w
  7264  03BB  1903               	btfsc	3,2
  7265  03BC  0008               	return
  7266                           
  7267                           ;lighting.c: 240: {
  7268                           ;lighting.c: 242: for(int i = 0;i < 4; i++){
  7269  03BD  01A5               	clrf	i1display_blade_lights@i_480
  7270  03BE  01A6               	clrf	i1display_blade_lights@i_480+1
  7271  03BF  0826               	movf	i1display_blade_lights@i_480+1,w
  7272  03C0  3A80               	xorlw	128
  7273  03C1  00F3               	movwf	??i1_display_blade_lights
  7274  03C2  3080               	movlw	128
  7275  03C3  0273               	subwf	??i1_display_blade_lights,w
  7276  03C4  1D03               	skipz
  7277  03C5  2BC8               	goto	u221_25
  7278  03C6  3004               	movlw	4
  7279  03C7  0225               	subwf	i1display_blade_lights@i_480,w
  7280  03C8                     u221_25:	
  7281  03C8  1803               	btfsc	3,0
  7282  03C9  2BDE               	goto	i1l2926
  7283  03CA                     i1l2920:	
  7284                           
  7285                           ;lighting.c: 243: writespi(0x00);
  7286  03CA  3000               	movlw	0
  7287  03CB  318D  254C  3182   	fcall	i1_writespi
  7288  03CE  3001               	movlw	1
  7289  03CF  0020               	movlb	0	; select bank0
  7290  03D0  07A5               	addwf	i1display_blade_lights@i_480,f
  7291  03D1  3000               	movlw	0
  7292  03D2  3DA6               	addwfc	i1display_blade_lights@i_480+1,f
  7293  03D3  0826               	movf	i1display_blade_lights@i_480+1,w
  7294  03D4  3A80               	xorlw	128
  7295  03D5  00F3               	movwf	??i1_display_blade_lights
  7296  03D6  3080               	movlw	128
  7297  03D7  0273               	subwf	??i1_display_blade_lights,w
  7298  03D8  1D03               	skipz
  7299  03D9  2BDC               	goto	u222_25
  7300  03DA  3004               	movlw	4
  7301  03DB  0225               	subwf	i1display_blade_lights@i_480,w
  7302  03DC                     u222_25:	
  7303  03DC  1C03               	skipc
  7304  03DD  2BCA               	goto	i1l2920
  7305  03DE                     i1l2926:	
  7306                           
  7307                           ;lighting.c: 244: }
  7308                           ;lighting.c: 246: writespi(0xFF);
  7309  03DE  30FF               	movlw	255
  7310  03DF  318D  254C  3182   	fcall	i1_writespi
  7311                           
  7312                           ;lighting.c: 247: writespi(0x00);
  7313  03E2  3000               	movlw	0
  7314  03E3  318D  254C  3182   	fcall	i1_writespi
  7315                           
  7316                           ;lighting.c: 248: writespi(0x00);
  7317  03E6  3000               	movlw	0
  7318  03E7  318D  254C  3182   	fcall	i1_writespi
  7319                           
  7320                           ;lighting.c: 249: writespi(r);
  7321  03EA  0020               	movlb	0	; select bank0
  7322  03EB  082A               	movf	i1display_blade_lights@r_479,w
  7323  03EC  318D  254C  3182   	fcall	i1_writespi
  7324                           
  7325                           ;lighting.c: 251: writespi(0xFF);
  7326  03EF  30FF               	movlw	255
  7327  03F0  318D  254C  3182   	fcall	i1_writespi
  7328                           
  7329                           ;lighting.c: 252: writespi(0x00);
  7330  03F3  3000               	movlw	0
  7331  03F4  318D  254C  3182   	fcall	i1_writespi
  7332                           
  7333                           ;lighting.c: 253: writespi(0x00);
  7334  03F7  3000               	movlw	0
  7335  03F8  318D  254C  3182   	fcall	i1_writespi
  7336                           
  7337                           ;lighting.c: 254: writespi(255 - r);
  7338  03FB  0020               	movlb	0	; select bank0
  7339  03FC  032A               	decf	i1display_blade_lights@r_479,w
  7340  03FD  3AFF               	xorlw	255
  7341  03FE  3EFF               	addlw	255
  7342  03FF  318D  254C  3182   	fcall	i1_writespi
  7343                           
  7344                           ;lighting.c: 256: writespi(0xFF);
  7345  0402  30FF               	movlw	255
  7346  0403  318D  254C  3182   	fcall	i1_writespi
  7347                           
  7348                           ;lighting.c: 257: writespi(0x00);
  7349  0406  3000               	movlw	0
  7350  0407  318D  254C  3182   	fcall	i1_writespi
  7351                           
  7352                           ;lighting.c: 258: writespi(0x00);
  7353  040A  3000               	movlw	0
  7354  040B  318D  254C  3182   	fcall	i1_writespi
  7355                           
  7356                           ;lighting.c: 259: writespi(r);
  7357  040E  0020               	movlb	0	; select bank0
  7358  040F  082A               	movf	i1display_blade_lights@r_479,w
  7359  0410  318D  254C  3182   	fcall	i1_writespi
  7360                           
  7361                           ;lighting.c: 261: writespi(0xFF);
  7362  0413  30FF               	movlw	255
  7363  0414  318D  254C  3182   	fcall	i1_writespi
  7364                           
  7365                           ;lighting.c: 262: writespi(0x00);
  7366  0417  3000               	movlw	0
  7367  0418  318D  254C  3182   	fcall	i1_writespi
  7368                           
  7369                           ;lighting.c: 263: writespi(0x00);
  7370  041B  3000               	movlw	0
  7371  041C  318D  254C  3182   	fcall	i1_writespi
  7372                           
  7373                           ;lighting.c: 264: writespi(255-r);
  7374  041F  0020               	movlb	0	; select bank0
  7375  0420  032A               	decf	i1display_blade_lights@r_479,w
  7376  0421  3AFF               	xorlw	255
  7377  0422  3EFF               	addlw	255
  7378  0423  318D  254C  3182   	fcall	i1_writespi
  7379                           
  7380                           ;lighting.c: 266: writespi(0xFF);
  7381  0426  30FF               	movlw	255
  7382  0427  318D  254C  3182   	fcall	i1_writespi
  7383                           
  7384                           ;lighting.c: 267: writespi(0x00);
  7385  042A  3000               	movlw	0
  7386  042B  318D  254C  3182   	fcall	i1_writespi
  7387                           
  7388                           ;lighting.c: 268: writespi(0x00);
  7389  042E  3000               	movlw	0
  7390  042F  318D  254C  3182   	fcall	i1_writespi
  7391                           
  7392                           ;lighting.c: 269: writespi(r);
  7393  0432  0020               	movlb	0	; select bank0
  7394  0433  082A               	movf	i1display_blade_lights@r_479,w
  7395  0434  318D  254C  3182   	fcall	i1_writespi
  7396                           
  7397                           ;lighting.c: 271: for(int i = 0;i < 4; i++){
  7398  0437  0020               	movlb	0	; select bank0
  7399  0438  01A7               	clrf	i1display_blade_lights@i_481
  7400  0439  01A8               	clrf	i1display_blade_lights@i_481+1
  7401  043A  0828               	movf	i1display_blade_lights@i_481+1,w
  7402  043B  3A80               	xorlw	128
  7403  043C  00F3               	movwf	??i1_display_blade_lights
  7404  043D  3080               	movlw	128
  7405  043E  0273               	subwf	??i1_display_blade_lights,w
  7406  043F  1D03               	skipz
  7407  0440  2C43               	goto	u223_25
  7408  0441  3004               	movlw	4
  7409  0442  0227               	subwf	i1display_blade_lights@i_481,w
  7410  0443                     u223_25:	
  7411  0443  1803               	btfsc	3,0
  7412  0444  2C59               	goto	i1l2940
  7413  0445                     i1l2934:	
  7414                           
  7415                           ;lighting.c: 272: writespi(0xFF);
  7416  0445  30FF               	movlw	255
  7417  0446  318D  254C  3182   	fcall	i1_writespi
  7418  0449  3001               	movlw	1
  7419  044A  0020               	movlb	0	; select bank0
  7420  044B  07A7               	addwf	i1display_blade_lights@i_481,f
  7421  044C  3000               	movlw	0
  7422  044D  3DA8               	addwfc	i1display_blade_lights@i_481+1,f
  7423  044E  0828               	movf	i1display_blade_lights@i_481+1,w
  7424  044F  3A80               	xorlw	128
  7425  0450  00F3               	movwf	??i1_display_blade_lights
  7426  0451  3080               	movlw	128
  7427  0452  0273               	subwf	??i1_display_blade_lights,w
  7428  0453  1D03               	skipz
  7429  0454  2C57               	goto	u224_25
  7430  0455  3004               	movlw	4
  7431  0456  0227               	subwf	i1display_blade_lights@i_481,w
  7432  0457                     u224_25:	
  7433  0457  1C03               	skipc
  7434  0458  2C45               	goto	i1l2934
  7435  0459                     i1l2940:	
  7436                           
  7437                           ;lighting.c: 273: }
  7438                           ;lighting.c: 274: _delay((unsigned long)((20)*(32000000/4000.0)));
  7439  0459  30D0               	movlw	208
  7440  045A  00F4               	movwf	??i1_display_blade_lights+1
  7441  045B  30C9               	movlw	201
  7442  045C  00F3               	movwf	??i1_display_blade_lights
  7443  045D                     u322_27:	
  7444  045D  0BF3               	decfsz	??i1_display_blade_lights,f
  7445  045E  2C5D               	goto	u322_27
  7446  045F  0BF4               	decfsz	??i1_display_blade_lights+1,f
  7447  0460  2C5D               	goto	u322_27
  7448  0461  3200               	nop2
  7449  0462  3005               	movlw	5
  7450  0463  0020               	movlb	0	; select bank0
  7451  0464  02AA               	subwf	i1display_blade_lights@r_479,f
  7452  0465  2BBA               	goto	L3
  7453  0466                     __end_ofi1_display_blade_lights:	
  7454                           
  7455                           	psect	text16
  7456  0D4C                     __ptext16:	
  7457 ;; *************** function i1_writespi *****************
  7458 ;; Defined at:
  7459 ;;		line 279 in file "../../source/lighting.c"
  7460 ;; Parameters:    Size  Location     Type
  7461 ;;  data_out        1    wreg     unsigned char 
  7462 ;; Auto vars:     Size  Location     Type
  7463 ;;  data_out        1    2[COMMON] unsigned char 
  7464 ;;  writespi        1    1[COMMON] unsigned char 
  7465 ;; Return value:  Size  Location     Type
  7466 ;;		None               void
  7467 ;; Registers used:
  7468 ;;		wreg
  7469 ;; Tracked objects:
  7470 ;;		On entry : 0/0
  7471 ;;		On exit  : 0/0
  7472 ;;		Unchanged: 0/0
  7473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7475 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7476 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7477 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7478 ;;Total ram usage:        3 bytes
  7479 ;; Hardware stack levels used:    1
  7480 ;; This function calls:
  7481 ;;		Nothing
  7482 ;; This function is called by:
  7483 ;;		i1_display_blade_lights
  7484 ;; This function uses a non-reentrant model
  7485 ;;
  7486                           
  7487                           
  7488                           ;psect for function i1_writespi
  7489  0D4C                     i1_writespi:	
  7490                           
  7491                           ;incstack = 0
  7492                           ; Regs used in i1_writespi: [wreg]
  7493                           ;i1writespi@data_out stored from wreg
  7494  0D4C  00F2               	movwf	i1writespi@data_out
  7495                           
  7496                           ;lighting.c: 281: unsigned char TempVar;
  7497                           ;lighting.c: 282: TempVar = SSPBUF;
  7498  0D4D  0024               	movlb	4	; select bank4
  7499  0D4E  0811               	movf	17,w	;volatile
  7500  0D4F  00F0               	movwf	??i1_writespi
  7501  0D50  0870               	movf	??i1_writespi,w
  7502  0D51  00F1               	movwf	i1writespi@TempVar
  7503                           
  7504                           ;lighting.c: 283: PIR1bits.SSP1IF = 0;
  7505  0D52  0020               	movlb	0	; select bank0
  7506  0D53  1191               	bcf	17,3	;volatile
  7507                           
  7508                           ;lighting.c: 284: SSPCON1bits.WCOL = 0;
  7509  0D54  0024               	movlb	4	; select bank4
  7510  0D55  1395               	bcf	21,7	;volatile
  7511                           
  7512                           ;lighting.c: 285: SSPBUF = data_out;
  7513  0D56  0872               	movf	i1writespi@data_out,w
  7514  0D57  0091               	movwf	17	;volatile
  7515  0D58                     i1l587:	
  7516                           ;lighting.c: 290: while( !PIR1bits.SSP1IF );
  7517                           
  7518  0D58  0020               	movlb	0	; select bank0
  7519  0D59  1991               	btfsc	17,3	;volatile
  7520  0D5A  0008               	return
  7521  0D5B  2D58               	goto	i1l587
  7522  0D5C                     __end_ofi1_writespi:	
  7523                           
  7524                           	psect	text17
  7525  0EF0                     __ptext17:	
  7526 ;; *************** function ___fttol *****************
  7527 ;; Defined at:
  7528 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fttol.c"
  7529 ;; Parameters:    Size  Location     Type
  7530 ;;  f1              3   16[BANK0 ] float 
  7531 ;; Auto vars:     Size  Location     Type
  7532 ;;  lval            4   25[BANK0 ] unsigned long 
  7533 ;;  exp1            1   29[BANK0 ] unsigned char 
  7534 ;;  sign1           1   24[BANK0 ] unsigned char 
  7535 ;; Return value:  Size  Location     Type
  7536 ;;                  4   16[BANK0 ] long 
  7537 ;; Registers used:
  7538 ;;		wreg, status,2, status,0
  7539 ;; Tracked objects:
  7540 ;;		On entry : 0/0
  7541 ;;		On exit  : 0/0
  7542 ;;		Unchanged: 0/0
  7543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7544 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7545 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7546 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7547 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7548 ;;Total ram usage:       14 bytes
  7549 ;; Hardware stack levels used:    1
  7550 ;; This function calls:
  7551 ;;		Nothing
  7552 ;; This function is called by:
  7553 ;;		_isr
  7554 ;; This function uses a non-reentrant model
  7555 ;;
  7556                           
  7557                           
  7558                           ;psect for function ___fttol
  7559  0EF0                     ___fttol:	
  7560                           
  7561                           ;incstack = 0
  7562                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  7563  0EF0  0020               	movlb	0	; select bank0
  7564  0EF1  0830               	movf	___fttol@f1,w
  7565  0EF2  00B4               	movwf	??___fttol
  7566  0EF3  0831               	movf	___fttol@f1+1,w
  7567  0EF4  00B5               	movwf	??___fttol+1
  7568  0EF5  0832               	movf	___fttol@f1+2,w
  7569  0EF6  00B6               	movwf	??___fttol+2
  7570  0EF7  1003               	clrc
  7571  0EF8  0D35               	rlf	??___fttol+1,w
  7572  0EF9  0D36               	rlf	??___fttol+2,w
  7573  0EFA  00B7               	movwf	??___fttol+3
  7574  0EFB  0837               	movf	??___fttol+3,w
  7575  0EFC  00BD               	movwf	___fttol@exp1
  7576  0EFD  083D               	movf	___fttol@exp1,w
  7577  0EFE  1D03               	btfss	3,2
  7578  0EFF  2F09               	goto	i1l2828
  7579  0F00  3000               	movlw	0
  7580  0F01  00B3               	movwf	?___fttol+3
  7581  0F02  3000               	movlw	0
  7582  0F03  00B2               	movwf	?___fttol+2
  7583  0F04  3000               	movlw	0
  7584  0F05  00B1               	movwf	?___fttol+1
  7585  0F06  3000               	movlw	0
  7586  0F07  00B0               	movwf	?___fttol
  7587  0F08  0008               	return
  7588  0F09                     i1l2828:	
  7589  0F09  0830               	movf	___fttol@f1,w
  7590  0F0A  00B4               	movwf	??___fttol
  7591  0F0B  0831               	movf	___fttol@f1+1,w
  7592  0F0C  00B5               	movwf	??___fttol+1
  7593  0F0D  0832               	movf	___fttol@f1+2,w
  7594  0F0E  00B6               	movwf	??___fttol+2
  7595  0F0F  3017               	movlw	23
  7596  0F10                     u202_25:	
  7597  0F10  36B6               	lsrf	??___fttol+2,f
  7598  0F11  0CB5               	rrf	??___fttol+1,f
  7599  0F12  0CB4               	rrf	??___fttol,f
  7600  0F13  0B89               	decfsz	9,f
  7601  0F14  2F10               	goto	u202_25
  7602  0F15  0834               	movf	??___fttol,w
  7603  0F16  00B7               	movwf	??___fttol+3
  7604  0F17  0837               	movf	??___fttol+3,w
  7605  0F18  00B8               	movwf	___fttol@sign1
  7606  0F19  17B1               	bsf	___fttol@f1+1,7
  7607  0F1A  30FF               	movlw	255
  7608  0F1B  05B0               	andwf	___fttol@f1,f
  7609  0F1C  30FF               	movlw	255
  7610  0F1D  05B1               	andwf	___fttol@f1+1,f
  7611  0F1E  3000               	movlw	0
  7612  0F1F  05B2               	andwf	___fttol@f1+2,f
  7613  0F20  0830               	movf	___fttol@f1,w
  7614  0F21  00B9               	movwf	___fttol@lval
  7615  0F22  0831               	movf	___fttol@f1+1,w
  7616  0F23  00BA               	movwf	___fttol@lval+1
  7617  0F24  0832               	movf	___fttol@f1+2,w
  7618  0F25  00BB               	movwf	___fttol@lval+2
  7619  0F26  01BC               	clrf	___fttol@lval+3
  7620  0F27  308E               	movlw	142
  7621  0F28  02BD               	subwf	___fttol@exp1,f
  7622  0F29  1FBD               	btfss	___fttol@exp1,7
  7623  0F2A  2F47               	goto	i1l2848
  7624  0F2B  083D               	movf	___fttol@exp1,w
  7625  0F2C  3A80               	xorlw	128
  7626  0F2D  3E8F               	addlw	143
  7627  0F2E  1803               	skipnc
  7628  0F2F  2F39               	goto	i1l2846
  7629  0F30  3000               	movlw	0
  7630  0F31  00B3               	movwf	?___fttol+3
  7631  0F32  3000               	movlw	0
  7632  0F33  00B2               	movwf	?___fttol+2
  7633  0F34  3000               	movlw	0
  7634  0F35  00B1               	movwf	?___fttol+1
  7635  0F36  3000               	movlw	0
  7636  0F37  00B0               	movwf	?___fttol
  7637  0F38  0008               	return
  7638  0F39                     i1l2846:	
  7639  0F39  3001               	movlw	1
  7640  0F3A                     u205_25:	
  7641  0F3A  36BC               	lsrf	___fttol@lval+3,f
  7642  0F3B  0CBB               	rrf	___fttol@lval+2,f
  7643  0F3C  0CBA               	rrf	___fttol@lval+1,f
  7644  0F3D  0CB9               	rrf	___fttol@lval,f
  7645  0F3E  0B89               	decfsz	9,f
  7646  0F3F  2F3A               	goto	u205_25
  7647  0F40  3001               	movlw	1
  7648  0F41  00B4               	movwf	??___fttol
  7649  0F42  0834               	movf	??___fttol,w
  7650  0F43  07BD               	addwf	___fttol@exp1,f
  7651  0F44  1903               	btfsc	3,2
  7652  0F45  2F60               	goto	i1l2856
  7653  0F46  2F39               	goto	i1l2846
  7654  0F47                     i1l2848:	
  7655  0F47  3018               	movlw	24
  7656  0F48  023D               	subwf	___fttol@exp1,w
  7657  0F49  1C03               	skipc
  7658  0F4A  2F5D               	goto	i1l936
  7659  0F4B  3000               	movlw	0
  7660  0F4C  00B3               	movwf	?___fttol+3
  7661  0F4D  3000               	movlw	0
  7662  0F4E  00B2               	movwf	?___fttol+2
  7663  0F4F  3000               	movlw	0
  7664  0F50  00B1               	movwf	?___fttol+1
  7665  0F51  3000               	movlw	0
  7666  0F52  00B0               	movwf	?___fttol
  7667  0F53  0008               	return
  7668  0F54                     i1l2854:	
  7669  0F54  3001               	movlw	1
  7670  0F55                     u208_25:	
  7671  0F55  35B9               	lslf	___fttol@lval,f
  7672  0F56  0DBA               	rlf	___fttol@lval+1,f
  7673  0F57  0DBB               	rlf	___fttol@lval+2,f
  7674  0F58  0DBC               	rlf	___fttol@lval+3,f
  7675  0F59  0B89               	decfsz	9,f
  7676  0F5A  2F55               	goto	u208_25
  7677  0F5B  3001               	movlw	1
  7678  0F5C  02BD               	subwf	___fttol@exp1,f
  7679  0F5D                     i1l936:	
  7680  0F5D  083D               	movf	___fttol@exp1,w
  7681  0F5E  1D03               	btfss	3,2
  7682  0F5F  2F54               	goto	i1l2854
  7683  0F60                     i1l2856:	
  7684  0F60  0838               	movf	___fttol@sign1,w
  7685  0F61  1903               	btfsc	3,2
  7686  0F62  2F6E               	goto	i1l2860
  7687  0F63  09B9               	comf	___fttol@lval,f
  7688  0F64  09BA               	comf	___fttol@lval+1,f
  7689  0F65  09BB               	comf	___fttol@lval+2,f
  7690  0F66  09BC               	comf	___fttol@lval+3,f
  7691  0F67  0AB9               	incf	___fttol@lval,f
  7692  0F68  1903               	skipnz
  7693  0F69  0ABA               	incf	___fttol@lval+1,f
  7694  0F6A  1903               	skipnz
  7695  0F6B  0ABB               	incf	___fttol@lval+2,f
  7696  0F6C  1903               	skipnz
  7697  0F6D  0ABC               	incf	___fttol@lval+3,f
  7698  0F6E                     i1l2860:	
  7699  0F6E  083C               	movf	___fttol@lval+3,w
  7700  0F6F  00B3               	movwf	?___fttol+3
  7701  0F70  083B               	movf	___fttol@lval+2,w
  7702  0F71  00B2               	movwf	?___fttol+2
  7703  0F72  083A               	movf	___fttol@lval+1,w
  7704  0F73  00B1               	movwf	?___fttol+1
  7705  0F74  0839               	movf	___fttol@lval,w
  7706  0F75  00B0               	movwf	?___fttol
  7707  0F76  0008               	return
  7708  0F77                     __end_of___fttol:	
  7709                           
  7710                           	psect	text18
  7711  05AB                     __ptext18:	
  7712 ;; *************** function ___ftmul *****************
  7713 ;; Defined at:
  7714 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftmul.c"
  7715 ;; Parameters:    Size  Location     Type
  7716 ;;  f1              3    0[BANK0 ] float 
  7717 ;;  f2              3    3[BANK0 ] float 
  7718 ;; Auto vars:     Size  Location     Type
  7719 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  7720 ;;  sign            1   15[BANK0 ] unsigned char 
  7721 ;;  cntr            1   14[BANK0 ] unsigned char 
  7722 ;;  exp             1   10[BANK0 ] unsigned char 
  7723 ;; Return value:  Size  Location     Type
  7724 ;;                  3    0[BANK0 ] float 
  7725 ;; Registers used:
  7726 ;;		wreg, status,2, status,0, pclath, cstack
  7727 ;; Tracked objects:
  7728 ;;		On entry : 0/0
  7729 ;;		On exit  : 0/0
  7730 ;;		Unchanged: 0/0
  7731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7732 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7733 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7734 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7735 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7736 ;;Total ram usage:       16 bytes
  7737 ;; Hardware stack levels used:    1
  7738 ;; Hardware stack levels required when called:    1
  7739 ;; This function calls:
  7740 ;;		___ftpack
  7741 ;; This function is called by:
  7742 ;;		_isr
  7743 ;; This function uses a non-reentrant model
  7744 ;;
  7745                           
  7746                           
  7747                           ;psect for function ___ftmul
  7748  05AB                     ___ftmul:	
  7749                           
  7750                           ;incstack = 0
  7751                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  7752  05AB  0020               	movlb	0	; select bank0
  7753  05AC  0820               	movf	___ftmul@f1,w
  7754  05AD  00A6               	movwf	??___ftmul
  7755  05AE  0821               	movf	___ftmul@f1+1,w
  7756  05AF  00A7               	movwf	??___ftmul+1
  7757  05B0  0822               	movf	___ftmul@f1+2,w
  7758  05B1  00A8               	movwf	??___ftmul+2
  7759  05B2  1003               	clrc
  7760  05B3  0D27               	rlf	??___ftmul+1,w
  7761  05B4  0D28               	rlf	??___ftmul+2,w
  7762  05B5  00A9               	movwf	??___ftmul+3
  7763  05B6  0829               	movf	??___ftmul+3,w
  7764  05B7  00AA               	movwf	___ftmul@exp
  7765  05B8  082A               	movf	___ftmul@exp,w
  7766  05B9  1D03               	btfss	3,2
  7767  05BA  2DC2               	goto	i1l2778
  7768  05BB  3000               	movlw	0
  7769  05BC  00A0               	movwf	?___ftmul
  7770  05BD  3000               	movlw	0
  7771  05BE  00A1               	movwf	?___ftmul+1
  7772  05BF  3000               	movlw	0
  7773  05C0  00A2               	movwf	?___ftmul+2
  7774  05C1  0008               	return
  7775  05C2                     i1l2778:	
  7776  05C2  0823               	movf	___ftmul@f2,w
  7777  05C3  00A6               	movwf	??___ftmul
  7778  05C4  0824               	movf	___ftmul@f2+1,w
  7779  05C5  00A7               	movwf	??___ftmul+1
  7780  05C6  0825               	movf	___ftmul@f2+2,w
  7781  05C7  00A8               	movwf	??___ftmul+2
  7782  05C8  1003               	clrc
  7783  05C9  0D27               	rlf	??___ftmul+1,w
  7784  05CA  0D28               	rlf	??___ftmul+2,w
  7785  05CB  00A9               	movwf	??___ftmul+3
  7786  05CC  0829               	movf	??___ftmul+3,w
  7787  05CD  00AF               	movwf	___ftmul@sign
  7788  05CE  082F               	movf	___ftmul@sign,w
  7789  05CF  1D03               	btfss	3,2
  7790  05D0  2DD8               	goto	i1l2784
  7791  05D1  3000               	movlw	0
  7792  05D2  00A0               	movwf	?___ftmul
  7793  05D3  3000               	movlw	0
  7794  05D4  00A1               	movwf	?___ftmul+1
  7795  05D5  3000               	movlw	0
  7796  05D6  00A2               	movwf	?___ftmul+2
  7797  05D7  0008               	return
  7798  05D8                     i1l2784:	
  7799  05D8  082F               	movf	___ftmul@sign,w
  7800  05D9  3E7B               	addlw	123
  7801  05DA  00A6               	movwf	??___ftmul
  7802  05DB  0826               	movf	??___ftmul,w
  7803  05DC  07AA               	addwf	___ftmul@exp,f
  7804  05DD  0820               	movf	___ftmul@f1,w
  7805  05DE  00A6               	movwf	??___ftmul
  7806  05DF  0821               	movf	___ftmul@f1+1,w
  7807  05E0  00A7               	movwf	??___ftmul+1
  7808  05E1  0822               	movf	___ftmul@f1+2,w
  7809  05E2  00A8               	movwf	??___ftmul+2
  7810  05E3  3010               	movlw	16
  7811  05E4                     u191_25:	
  7812  05E4  36A8               	lsrf	??___ftmul+2,f
  7813  05E5  0CA7               	rrf	??___ftmul+1,f
  7814  05E6  0CA6               	rrf	??___ftmul,f
  7815  05E7  0B89               	decfsz	9,f
  7816  05E8  2DE4               	goto	u191_25
  7817  05E9  0826               	movf	??___ftmul,w
  7818  05EA  00A9               	movwf	??___ftmul+3
  7819  05EB  0829               	movf	??___ftmul+3,w
  7820  05EC  00AF               	movwf	___ftmul@sign
  7821  05ED  0823               	movf	___ftmul@f2,w
  7822  05EE  00A6               	movwf	??___ftmul
  7823  05EF  0824               	movf	___ftmul@f2+1,w
  7824  05F0  00A7               	movwf	??___ftmul+1
  7825  05F1  0825               	movf	___ftmul@f2+2,w
  7826  05F2  00A8               	movwf	??___ftmul+2
  7827  05F3  3010               	movlw	16
  7828  05F4                     u192_25:	
  7829  05F4  36A8               	lsrf	??___ftmul+2,f
  7830  05F5  0CA7               	rrf	??___ftmul+1,f
  7831  05F6  0CA6               	rrf	??___ftmul,f
  7832  05F7  0B89               	decfsz	9,f
  7833  05F8  2DF4               	goto	u192_25
  7834  05F9  0826               	movf	??___ftmul,w
  7835  05FA  00A9               	movwf	??___ftmul+3
  7836  05FB  0829               	movf	??___ftmul+3,w
  7837  05FC  06AF               	xorwf	___ftmul@sign,f
  7838  05FD  3080               	movlw	128
  7839  05FE  00A6               	movwf	??___ftmul
  7840  05FF  0826               	movf	??___ftmul,w
  7841  0600  05AF               	andwf	___ftmul@sign,f
  7842  0601  17A1               	bsf	___ftmul@f1+1,7
  7843  0602  17A4               	bsf	___ftmul@f2+1,7
  7844  0603  30FF               	movlw	255
  7845  0604  05A3               	andwf	___ftmul@f2,f
  7846  0605  30FF               	movlw	255
  7847  0606  05A4               	andwf	___ftmul@f2+1,f
  7848  0607  3000               	movlw	0
  7849  0608  05A5               	andwf	___ftmul@f2+2,f
  7850  0609  3000               	movlw	0
  7851  060A  00AB               	movwf	___ftmul@f3_as_product
  7852  060B  3000               	movlw	0
  7853  060C  00AC               	movwf	___ftmul@f3_as_product+1
  7854  060D  3000               	movlw	0
  7855  060E  00AD               	movwf	___ftmul@f3_as_product+2
  7856  060F  3007               	movlw	7
  7857  0610  00A6               	movwf	??___ftmul
  7858  0611  0826               	movf	??___ftmul,w
  7859  0612  00AE               	movwf	___ftmul@cntr
  7860  0613                     i1l2796:	
  7861  0613  1C20               	btfss	___ftmul@f1,0
  7862  0614  2E1B               	goto	i1l2800
  7863  0615  0823               	movf	___ftmul@f2,w
  7864  0616  07AB               	addwf	___ftmul@f3_as_product,f
  7865  0617  0824               	movf	___ftmul@f2+1,w
  7866  0618  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  7867  0619  0825               	movf	___ftmul@f2+2,w
  7868  061A  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  7869  061B                     i1l2800:	
  7870  061B  3001               	movlw	1
  7871  061C                     u194_25:	
  7872  061C  36A2               	lsrf	___ftmul@f1+2,f
  7873  061D  0CA1               	rrf	___ftmul@f1+1,f
  7874  061E  0CA0               	rrf	___ftmul@f1,f
  7875  061F  0B89               	decfsz	9,f
  7876  0620  2E1C               	goto	u194_25
  7877  0621  3001               	movlw	1
  7878  0622                     u195_25:	
  7879  0622  35A3               	lslf	___ftmul@f2,f
  7880  0623  0DA4               	rlf	___ftmul@f2+1,f
  7881  0624  0DA5               	rlf	___ftmul@f2+2,f
  7882  0625  0B89               	decfsz	9,f
  7883  0626  2E22               	goto	u195_25
  7884  0627  3001               	movlw	1
  7885  0628  02AE               	subwf	___ftmul@cntr,f
  7886  0629  1D03               	btfss	3,2
  7887  062A  2E13               	goto	i1l2796
  7888  062B  3009               	movlw	9
  7889  062C  00A6               	movwf	??___ftmul
  7890  062D  0826               	movf	??___ftmul,w
  7891  062E  00AE               	movwf	___ftmul@cntr
  7892  062F                     i1l2808:	
  7893  062F  1C20               	btfss	___ftmul@f1,0
  7894  0630  2E37               	goto	i1l2812
  7895  0631  0823               	movf	___ftmul@f2,w
  7896  0632  07AB               	addwf	___ftmul@f3_as_product,f
  7897  0633  0824               	movf	___ftmul@f2+1,w
  7898  0634  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  7899  0635  0825               	movf	___ftmul@f2+2,w
  7900  0636  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  7901  0637                     i1l2812:	
  7902  0637  3001               	movlw	1
  7903  0638                     u198_25:	
  7904  0638  36A2               	lsrf	___ftmul@f1+2,f
  7905  0639  0CA1               	rrf	___ftmul@f1+1,f
  7906  063A  0CA0               	rrf	___ftmul@f1,f
  7907  063B  0B89               	decfsz	9,f
  7908  063C  2E38               	goto	u198_25
  7909  063D  3001               	movlw	1
  7910  063E                     u199_25:	
  7911  063E  36AD               	lsrf	___ftmul@f3_as_product+2,f
  7912  063F  0CAC               	rrf	___ftmul@f3_as_product+1,f
  7913  0640  0CAB               	rrf	___ftmul@f3_as_product,f
  7914  0641  0B89               	decfsz	9,f
  7915  0642  2E3E               	goto	u199_25
  7916  0643  3001               	movlw	1
  7917  0644  02AE               	subwf	___ftmul@cntr,f
  7918  0645  1D03               	btfss	3,2
  7919  0646  2E2F               	goto	i1l2808
  7920  0647  082B               	movf	___ftmul@f3_as_product,w
  7921  0648  00F0               	movwf	___ftpack@arg
  7922  0649  082C               	movf	___ftmul@f3_as_product+1,w
  7923  064A  00F1               	movwf	___ftpack@arg+1
  7924  064B  082D               	movf	___ftmul@f3_as_product+2,w
  7925  064C  00F2               	movwf	___ftpack@arg+2
  7926  064D  082A               	movf	___ftmul@exp,w
  7927  064E  00A6               	movwf	??___ftmul
  7928  064F  0826               	movf	??___ftmul,w
  7929  0650  00F3               	movwf	___ftpack@exp
  7930  0651  082F               	movf	___ftmul@sign,w
  7931  0652  00A7               	movwf	??___ftmul+1
  7932  0653  0827               	movf	??___ftmul+1,w
  7933  0654  00F4               	movwf	___ftpack@sign
  7934  0655  3187  279A         	fcall	___ftpack
  7935  0657  0870               	movf	?___ftpack,w
  7936  0658  0020               	movlb	0	; select bank0
  7937  0659  00A0               	movwf	?___ftmul
  7938  065A  0871               	movf	?___ftpack+1,w
  7939  065B  00A1               	movwf	?___ftmul+1
  7940  065C  0872               	movf	?___ftpack+2,w
  7941  065D  00A2               	movwf	?___ftmul+2
  7942  065E  0008               	return
  7943  065F                     __end_of___ftmul:	
  7944                           
  7945                           	psect	text19
  7946  0E16                     __ptext19:	
  7947 ;; *************** function ___ftge *****************
  7948 ;; Defined at:
  7949 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftge.c"
  7950 ;; Parameters:    Size  Location     Type
  7951 ;;  ff1             3   16[BANK0 ] float 
  7952 ;;  ff2             3   19[BANK0 ] float 
  7953 ;; Auto vars:     Size  Location     Type
  7954 ;;		None
  7955 ;; Return value:  Size  Location     Type
  7956 ;;		None               void
  7957 ;; Registers used:
  7958 ;;		wreg, status,2, status,0
  7959 ;; Tracked objects:
  7960 ;;		On entry : 0/0
  7961 ;;		On exit  : 0/0
  7962 ;;		Unchanged: 0/0
  7963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7964 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7966 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7967 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7968 ;;Total ram usage:        9 bytes
  7969 ;; Hardware stack levels used:    1
  7970 ;; This function calls:
  7971 ;;		Nothing
  7972 ;; This function is called by:
  7973 ;;		_isr
  7974 ;; This function uses a non-reentrant model
  7975 ;;
  7976                           
  7977                           
  7978                           ;psect for function ___ftge
  7979  0E16                     ___ftge:	
  7980                           
  7981                           ;incstack = 0
  7982                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  7983  0E16  0020               	movlb	0	; select bank0
  7984  0E17  1FB2               	btfss	___ftge@ff1+2,7
  7985  0E18  2E2D               	goto	i1l2756
  7986  0E19  0930               	comf	___ftge@ff1,w
  7987  0E1A  00B6               	movwf	??___ftge
  7988  0E1B  0931               	comf	___ftge@ff1+1,w
  7989  0E1C  00B7               	movwf	??___ftge+1
  7990  0E1D  0932               	comf	___ftge@ff1+2,w
  7991  0E1E  00B8               	movwf	??___ftge+2
  7992  0E1F  0AB6               	incf	??___ftge,f
  7993  0E20  1903               	skipnz
  7994  0E21  0AB7               	incf	??___ftge+1,f
  7995  0E22  1903               	skipnz
  7996  0E23  0AB8               	incf	??___ftge+2,f
  7997  0E24  3000               	movlw	0
  7998  0E25  0736               	addwf	??___ftge,w
  7999  0E26  00B0               	movwf	___ftge@ff1
  8000  0E27  3000               	movlw	0
  8001  0E28  3D37               	addwfc	??___ftge+1,w
  8002  0E29  00B1               	movwf	___ftge@ff1+1
  8003  0E2A  3080               	movlw	128
  8004  0E2B  3D38               	addwfc	??___ftge+2,w
  8005  0E2C  00B2               	movwf	___ftge@ff1+2
  8006  0E2D                     i1l2756:	
  8007  0E2D  1FB5               	btfss	___ftge@ff2+2,7
  8008  0E2E  2E43               	goto	i1l2760
  8009  0E2F  0933               	comf	___ftge@ff2,w
  8010  0E30  00B6               	movwf	??___ftge
  8011  0E31  0934               	comf	___ftge@ff2+1,w
  8012  0E32  00B7               	movwf	??___ftge+1
  8013  0E33  0935               	comf	___ftge@ff2+2,w
  8014  0E34  00B8               	movwf	??___ftge+2
  8015  0E35  0AB6               	incf	??___ftge,f
  8016  0E36  1903               	skipnz
  8017  0E37  0AB7               	incf	??___ftge+1,f
  8018  0E38  1903               	skipnz
  8019  0E39  0AB8               	incf	??___ftge+2,f
  8020  0E3A  3000               	movlw	0
  8021  0E3B  0736               	addwf	??___ftge,w
  8022  0E3C  00B3               	movwf	___ftge@ff2
  8023  0E3D  3000               	movlw	0
  8024  0E3E  3D37               	addwfc	??___ftge+1,w
  8025  0E3F  00B4               	movwf	___ftge@ff2+1
  8026  0E40  3080               	movlw	128
  8027  0E41  3D38               	addwfc	??___ftge+2,w
  8028  0E42  00B5               	movwf	___ftge@ff2+2
  8029  0E43                     i1l2760:	
  8030  0E43  3080               	movlw	128
  8031  0E44  06B2               	xorwf	___ftge@ff1+2,f
  8032  0E45  3080               	movlw	128
  8033  0E46  06B5               	xorwf	___ftge@ff2+2,f
  8034  0E47  0835               	movf	___ftge@ff2+2,w
  8035  0E48  0232               	subwf	___ftge@ff1+2,w
  8036  0E49  1D03               	skipz
  8037  0E4A  0008               	return
  8038  0E4B  0834               	movf	___ftge@ff2+1,w
  8039  0E4C  0231               	subwf	___ftge@ff1+1,w
  8040  0E4D  1D03               	skipz
  8041  0E4E  0008               	return
  8042  0E4F  0833               	movf	___ftge@ff2,w
  8043  0E50  0230               	subwf	___ftge@ff1,w
  8044  0E51  0008               	return
  8045  0E52                     __end_of___ftge:	
  8046                           
  8047                           	psect	text20
  8048  0D94                     __ptext20:	
  8049 ;; *************** function ___awtoft *****************
  8050 ;; Defined at:
  8051 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awtoft.c"
  8052 ;; Parameters:    Size  Location     Type
  8053 ;;  c               2    8[COMMON] int 
  8054 ;; Auto vars:     Size  Location     Type
  8055 ;;  sign            1   13[COMMON] unsigned char 
  8056 ;; Return value:  Size  Location     Type
  8057 ;;                  3    8[COMMON] float 
  8058 ;; Registers used:
  8059 ;;		wreg, status,2, status,0, pclath, cstack
  8060 ;; Tracked objects:
  8061 ;;		On entry : 0/0
  8062 ;;		On exit  : 0/0
  8063 ;;		Unchanged: 0/0
  8064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8065 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8066 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8067 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8068 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8069 ;;Total ram usage:        6 bytes
  8070 ;; Hardware stack levels used:    1
  8071 ;; Hardware stack levels required when called:    1
  8072 ;; This function calls:
  8073 ;;		___ftpack
  8074 ;; This function is called by:
  8075 ;;		_isr
  8076 ;; This function uses a non-reentrant model
  8077 ;;
  8078                           
  8079                           
  8080                           ;psect for function ___awtoft
  8081  0D94                     ___awtoft:	
  8082                           
  8083                           ;incstack = 0
  8084                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  8085  0D94  01FD               	clrf	___awtoft@sign
  8086  0D95  1FF9               	btfss	___awtoft@c+1,7
  8087  0D96  2D9E               	goto	i1l2748
  8088  0D97  09F8               	comf	___awtoft@c,f
  8089  0D98  09F9               	comf	___awtoft@c+1,f
  8090  0D99  0AF8               	incf	___awtoft@c,f
  8091  0D9A  1903               	skipnz
  8092  0D9B  0AF9               	incf	___awtoft@c+1,f
  8093  0D9C  01FD               	clrf	___awtoft@sign
  8094  0D9D  0AFD               	incf	___awtoft@sign,f
  8095  0D9E                     i1l2748:	
  8096  0D9E  0878               	movf	___awtoft@c,w
  8097  0D9F  00F0               	movwf	___ftpack@arg
  8098  0DA0  0879               	movf	___awtoft@c+1,w
  8099  0DA1  00F1               	movwf	___ftpack@arg+1
  8100  0DA2  01F2               	clrf	___ftpack@arg+2
  8101  0DA3  308E               	movlw	142
  8102  0DA4  00FB               	movwf	??___awtoft
  8103  0DA5  087B               	movf	??___awtoft,w
  8104  0DA6  00F3               	movwf	___ftpack@exp
  8105  0DA7  087D               	movf	___awtoft@sign,w
  8106  0DA8  00FC               	movwf	??___awtoft+1
  8107  0DA9  087C               	movf	??___awtoft+1,w
  8108  0DAA  00F4               	movwf	___ftpack@sign
  8109  0DAB  3187  279A         	fcall	___ftpack
  8110  0DAD  0870               	movf	?___ftpack,w
  8111  0DAE  00F8               	movwf	?___awtoft
  8112  0DAF  0871               	movf	?___ftpack+1,w
  8113  0DB0  00F9               	movwf	?___awtoft+1
  8114  0DB1  0872               	movf	?___ftpack+2,w
  8115  0DB2  00FA               	movwf	?___awtoft+2
  8116  0DB3  0008               	return
  8117  0DB4                     __end_of___awtoft:	
  8118                           
  8119                           	psect	text21
  8120  079A                     __ptext21:	
  8121 ;; *************** function ___ftpack *****************
  8122 ;; Defined at:
  8123 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\float.c"
  8124 ;; Parameters:    Size  Location     Type
  8125 ;;  arg             3    0[COMMON] unsigned um
  8126 ;;  exp             1    3[COMMON] unsigned char 
  8127 ;;  sign            1    4[COMMON] unsigned char 
  8128 ;; Auto vars:     Size  Location     Type
  8129 ;;		None
  8130 ;; Return value:  Size  Location     Type
  8131 ;;                  3    0[COMMON] float 
  8132 ;; Registers used:
  8133 ;;		wreg, status,2, status,0
  8134 ;; Tracked objects:
  8135 ;;		On entry : 0/0
  8136 ;;		On exit  : 0/0
  8137 ;;		Unchanged: 0/0
  8138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8139 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8141 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8142 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8143 ;;Total ram usage:        8 bytes
  8144 ;; Hardware stack levels used:    1
  8145 ;; This function calls:
  8146 ;;		Nothing
  8147 ;; This function is called by:
  8148 ;;		___awtoft
  8149 ;;		___ftmul
  8150 ;; This function uses a non-reentrant model
  8151 ;;
  8152                           
  8153                           
  8154                           ;psect for function ___ftpack
  8155  079A                     ___ftpack:	
  8156                           
  8157                           ;incstack = 0
  8158                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  8159  079A  0873               	movf	___ftpack@exp,w
  8160  079B  1903               	btfsc	3,2
  8161  079C  2FA2               	goto	i1l2128
  8162  079D  0872               	movf	___ftpack@arg+2,w
  8163  079E  0471               	iorwf	___ftpack@arg+1,w
  8164  079F  0470               	iorwf	___ftpack@arg,w
  8165  07A0  1D03               	skipz
  8166  07A1  2FB3               	goto	i1l2134
  8167  07A2                     i1l2128:	
  8168  07A2  3000               	movlw	0
  8169  07A3  00F0               	movwf	?___ftpack
  8170  07A4  3000               	movlw	0
  8171  07A5  00F1               	movwf	?___ftpack+1
  8172  07A6  3000               	movlw	0
  8173  07A7  00F2               	movwf	?___ftpack+2
  8174  07A8  0008               	return
  8175  07A9                     i1l2132:	
  8176  07A9  3001               	movlw	1
  8177  07AA  00F5               	movwf	??___ftpack
  8178  07AB  0875               	movf	??___ftpack,w
  8179  07AC  07F3               	addwf	___ftpack@exp,f
  8180  07AD  3001               	movlw	1
  8181  07AE                     u134_25:	
  8182  07AE  36F2               	lsrf	___ftpack@arg+2,f
  8183  07AF  0CF1               	rrf	___ftpack@arg+1,f
  8184  07B0  0CF0               	rrf	___ftpack@arg,f
  8185  07B1  0B89               	decfsz	9,f
  8186  07B2  2FAE               	goto	u134_25
  8187  07B3                     i1l2134:	
  8188  07B3  30FE               	movlw	254
  8189  07B4  0572               	andwf	___ftpack@arg+2,w
  8190  07B5  1903               	btfsc	3,2
  8191  07B6  2FCC               	goto	i1l845
  8192  07B7  2FA9               	goto	i1l2132
  8193  07B8                     i1l2136:	
  8194  07B8  3001               	movlw	1
  8195  07B9  00F5               	movwf	??___ftpack
  8196  07BA  0875               	movf	??___ftpack,w
  8197  07BB  07F3               	addwf	___ftpack@exp,f
  8198  07BC  3001               	movlw	1
  8199  07BD  07F0               	addwf	___ftpack@arg,f
  8200  07BE  3000               	movlw	0
  8201  07BF  1803               	skipnc
  8202  07C0  3001               	movlw	1
  8203  07C1  07F1               	addwf	___ftpack@arg+1,f
  8204  07C2  3000               	movlw	0
  8205  07C3  1803               	skipnc
  8206  07C4  3001               	movlw	1
  8207  07C5  07F2               	addwf	___ftpack@arg+2,f
  8208  07C6  3001               	movlw	1
  8209  07C7                     u136_25:	
  8210  07C7  36F2               	lsrf	___ftpack@arg+2,f
  8211  07C8  0CF1               	rrf	___ftpack@arg+1,f
  8212  07C9  0CF0               	rrf	___ftpack@arg,f
  8213  07CA  0B89               	decfsz	9,f
  8214  07CB  2FC7               	goto	u136_25
  8215  07CC                     i1l845:	
  8216  07CC  30FF               	movlw	255
  8217  07CD  0572               	andwf	___ftpack@arg+2,w
  8218  07CE  1903               	btfsc	3,2
  8219  07CF  2FD9               	goto	i1l2144
  8220  07D0  2FB8               	goto	i1l2136
  8221  07D1                     i1l2142:	
  8222  07D1  3001               	movlw	1
  8223  07D2  02F3               	subwf	___ftpack@exp,f
  8224  07D3  3001               	movlw	1
  8225  07D4                     u138_25:	
  8226  07D4  35F0               	lslf	___ftpack@arg,f
  8227  07D5  0DF1               	rlf	___ftpack@arg+1,f
  8228  07D6  0DF2               	rlf	___ftpack@arg+2,f
  8229  07D7  0B89               	decfsz	9,f
  8230  07D8  2FD4               	goto	u138_25
  8231  07D9                     i1l2144:	
  8232  07D9  1BF1               	btfsc	___ftpack@arg+1,7
  8233  07DA  2FDF               	goto	i1l852
  8234  07DB  3002               	movlw	2
  8235  07DC  0273               	subwf	___ftpack@exp,w
  8236  07DD  1803               	skipnc
  8237  07DE  2FD1               	goto	i1l2142
  8238  07DF                     i1l852:	
  8239  07DF  1873               	btfsc	___ftpack@exp,0
  8240  07E0  2FE7               	goto	i1l853
  8241  07E1  30FF               	movlw	255
  8242  07E2  05F0               	andwf	___ftpack@arg,f
  8243  07E3  307F               	movlw	127
  8244  07E4  05F1               	andwf	___ftpack@arg+1,f
  8245  07E5  30FF               	movlw	255
  8246  07E6  05F2               	andwf	___ftpack@arg+2,f
  8247  07E7                     i1l853:	
  8248  07E7  1003               	clrc
  8249  07E8  0CF3               	rrf	___ftpack@exp,f
  8250  07E9  0873               	movf	___ftpack@exp,w
  8251  07EA  00F5               	movwf	??___ftpack
  8252  07EB  01F6               	clrf	??___ftpack+1
  8253  07EC  01F7               	clrf	??___ftpack+2
  8254  07ED  3010               	movlw	16
  8255  07EE                     u142_25:	
  8256  07EE  35F5               	lslf	??___ftpack,f
  8257  07EF  0DF6               	rlf	??___ftpack+1,f
  8258  07F0  0DF7               	rlf	??___ftpack+2,f
  8259  07F1  0B89               	decfsz	9,f
  8260  07F2  2FEE               	goto	u142_25
  8261  07F3  0875               	movf	??___ftpack,w
  8262  07F4  04F0               	iorwf	___ftpack@arg,f
  8263  07F5  0876               	movf	??___ftpack+1,w
  8264  07F6  04F1               	iorwf	___ftpack@arg+1,f
  8265  07F7  0877               	movf	??___ftpack+2,w
  8266  07F8  04F2               	iorwf	___ftpack@arg+2,f
  8267  07F9  0874               	movf	___ftpack@sign,w
  8268  07FA  1903               	btfsc	3,2
  8269  07FB  0008               	return
  8270  07FC  17F2               	bsf	___ftpack@arg+2,7
  8271  07FD  0008               	return
  8272  07FE                     __end_of___ftpack:	
  8273                           
  8274                           	psect	text22
  8275  0E9F                     __ptext22:	
  8276 ;; *************** function ___awdiv *****************
  8277 ;; Defined at:
  8278 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  8279 ;; Parameters:    Size  Location     Type
  8280 ;;  divisor         2    0[COMMON] int 
  8281 ;;  dividend        2    2[COMMON] int 
  8282 ;; Auto vars:     Size  Location     Type
  8283 ;;  quotient        2    7[COMMON] int 
  8284 ;;  sign            1    6[COMMON] unsigned char 
  8285 ;;  counter         1    5[COMMON] unsigned char 
  8286 ;; Return value:  Size  Location     Type
  8287 ;;                  2    0[COMMON] int 
  8288 ;; Registers used:
  8289 ;;		wreg, status,2, status,0
  8290 ;; Tracked objects:
  8291 ;;		On entry : 0/0
  8292 ;;		On exit  : 0/0
  8293 ;;		Unchanged: 0/0
  8294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8295 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8296 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8297 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8298 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8299 ;;Total ram usage:        9 bytes
  8300 ;; Hardware stack levels used:    1
  8301 ;; This function calls:
  8302 ;;		Nothing
  8303 ;; This function is called by:
  8304 ;;		_isr
  8305 ;; This function uses a non-reentrant model
  8306 ;;
  8307                           
  8308                           
  8309                           ;psect for function ___awdiv
  8310  0E9F                     ___awdiv:	
  8311                           
  8312                           ;incstack = 0
  8313                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  8314  0E9F  01F6               	clrf	___awdiv@sign
  8315  0EA0  1FF1               	btfss	___awdiv@divisor+1,7
  8316  0EA1  2EA9               	goto	i1l2704
  8317  0EA2  09F0               	comf	___awdiv@divisor,f
  8318  0EA3  09F1               	comf	___awdiv@divisor+1,f
  8319  0EA4  0AF0               	incf	___awdiv@divisor,f
  8320  0EA5  1903               	skipnz
  8321  0EA6  0AF1               	incf	___awdiv@divisor+1,f
  8322  0EA7  01F6               	clrf	___awdiv@sign
  8323  0EA8  0AF6               	incf	___awdiv@sign,f
  8324  0EA9                     i1l2704:	
  8325  0EA9  1FF3               	btfss	___awdiv@dividend+1,7
  8326  0EAA  2EB4               	goto	i1l2710
  8327  0EAB  09F2               	comf	___awdiv@dividend,f
  8328  0EAC  09F3               	comf	___awdiv@dividend+1,f
  8329  0EAD  0AF2               	incf	___awdiv@dividend,f
  8330  0EAE  1903               	skipnz
  8331  0EAF  0AF3               	incf	___awdiv@dividend+1,f
  8332  0EB0  3001               	movlw	1
  8333  0EB1  00F4               	movwf	??___awdiv
  8334  0EB2  0874               	movf	??___awdiv,w
  8335  0EB3  06F6               	xorwf	___awdiv@sign,f
  8336  0EB4                     i1l2710:	
  8337  0EB4  01F7               	clrf	___awdiv@quotient
  8338  0EB5  01F8               	clrf	___awdiv@quotient+1
  8339  0EB6  0870               	movf	___awdiv@divisor,w
  8340  0EB7  0471               	iorwf	___awdiv@divisor+1,w
  8341  0EB8  1903               	btfsc	3,2
  8342  0EB9  2EE3               	goto	i1l2732
  8343  0EBA  01F5               	clrf	___awdiv@counter
  8344  0EBB  0AF5               	incf	___awdiv@counter,f
  8345  0EBC                     i1l2720:	
  8346  0EBC  1BF1               	btfsc	___awdiv@divisor+1,7
  8347  0EBD  2EC8               	goto	i1l2722
  8348  0EBE  3001               	movlw	1
  8349  0EBF                     u178_25:	
  8350  0EBF  35F0               	lslf	___awdiv@divisor,f
  8351  0EC0  0DF1               	rlf	___awdiv@divisor+1,f
  8352  0EC1  0B89               	decfsz	9,f
  8353  0EC2  2EBF               	goto	u178_25
  8354  0EC3  3001               	movlw	1
  8355  0EC4  00F4               	movwf	??___awdiv
  8356  0EC5  0874               	movf	??___awdiv,w
  8357  0EC6  07F5               	addwf	___awdiv@counter,f
  8358  0EC7  2EBC               	goto	i1l2720
  8359  0EC8                     i1l2722:	
  8360  0EC8  3001               	movlw	1
  8361  0EC9                     u180_25:	
  8362  0EC9  35F7               	lslf	___awdiv@quotient,f
  8363  0ECA  0DF8               	rlf	___awdiv@quotient+1,f
  8364  0ECB  0B89               	decfsz	9,f
  8365  0ECC  2EC9               	goto	u180_25
  8366  0ECD  0871               	movf	___awdiv@divisor+1,w
  8367  0ECE  0273               	subwf	___awdiv@dividend+1,w
  8368  0ECF  1D03               	skipz
  8369  0ED0  2ED3               	goto	u181_25
  8370  0ED1  0870               	movf	___awdiv@divisor,w
  8371  0ED2  0272               	subwf	___awdiv@dividend,w
  8372  0ED3                     u181_25:	
  8373  0ED3  1C03               	skipc
  8374  0ED4  2EDA               	goto	i1l2728
  8375  0ED5  0870               	movf	___awdiv@divisor,w
  8376  0ED6  02F2               	subwf	___awdiv@dividend,f
  8377  0ED7  0871               	movf	___awdiv@divisor+1,w
  8378  0ED8  3BF3               	subwfb	___awdiv@dividend+1,f
  8379  0ED9  1477               	bsf	___awdiv@quotient,0
  8380  0EDA                     i1l2728:	
  8381  0EDA  3001               	movlw	1
  8382  0EDB                     u182_25:	
  8383  0EDB  36F1               	lsrf	___awdiv@divisor+1,f
  8384  0EDC  0CF0               	rrf	___awdiv@divisor,f
  8385  0EDD  0B89               	decfsz	9,f
  8386  0EDE  2EDB               	goto	u182_25
  8387  0EDF  3001               	movlw	1
  8388  0EE0  02F5               	subwf	___awdiv@counter,f
  8389  0EE1  1D03               	btfss	3,2
  8390  0EE2  2EC8               	goto	i1l2722
  8391  0EE3                     i1l2732:	
  8392  0EE3  0876               	movf	___awdiv@sign,w
  8393  0EE4  1903               	btfsc	3,2
  8394  0EE5  2EEB               	goto	i1l2736
  8395  0EE6  09F7               	comf	___awdiv@quotient,f
  8396  0EE7  09F8               	comf	___awdiv@quotient+1,f
  8397  0EE8  0AF7               	incf	___awdiv@quotient,f
  8398  0EE9  1903               	skipnz
  8399  0EEA  0AF8               	incf	___awdiv@quotient+1,f
  8400  0EEB                     i1l2736:	
  8401  0EEB  0878               	movf	___awdiv@quotient+1,w
  8402  0EEC  00F1               	movwf	?___awdiv+1
  8403  0EED  0877               	movf	___awdiv@quotient,w
  8404  0EEE  00F0               	movwf	?___awdiv
  8405  0EEF  0008               	return
  8406  0EF0                     __end_of___awdiv:	
  8407  007E                     btemp	set	126	;btemp
  8408  007E                     int$flags	set	126
  8409  007E                     wtemp	set	126
  8410  007E                     wtemp0	set	126
  8411  0080                     wtemp1	set	128
  8412  0082                     wtemp2	set	130
  8413  0084                     wtemp3	set	132
  8414  0086                     wtemp4	set	134
  8415  0088                     wtemp5	set	136
  8416  007F                     wtemp6	set	127
  8417  007E                     ttemp	set	126
  8418  007E                     ttemp0	set	126
  8419  0081                     ttemp1	set	129
  8420  0084                     ttemp2	set	132
  8421  0087                     ttemp3	set	135
  8422  007F                     ttemp4	set	127
  8423  007E                     ltemp	set	126
  8424  007E                     ltemp0	set	126
  8425  0082                     ltemp1	set	130
  8426  0086                     ltemp2	set	134
  8427  0080                     ltemp3	set	128


Data Sizes:
    Strings     131
    Constant    0
    Data        1
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     40      48
    BANK1            80     16      21
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    determine_packets_to_send@packets	PTR unsigned char  size(1) Largest target is 3
		 -> main@pkt_arr(BANK1[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___awtoft
    i1_display_blade_lights->i1_writespi
    ___fttol->___awtoft
    ___ftmul->___awtoft
    ___ftge->___awtoft
    ___awtoft->___ftpack

Critical Paths under _main in BANK0

    _main->_display_blade_lights
    _display_blade_lights->_writespi

Critical Paths under _isr in BANK0

    _isr->___fttol
    ___fttol->___ftmul
    ___ftge->___ftmul

Critical Paths under _main in BANK1

    _main->_determine_sword_was_swung

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _isr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _isr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _isr in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _isr in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _isr in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _isr in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _isr in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _isr in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _isr in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _isr in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0    1812
                                             37 BANK0      3     3      0
                                             12 BANK1      4     4      0
        _determine_omega_mode_active
          _determine_packets_to_send
          _determine_sword_was_swung
               _display_blade_lights
                     _display_health
                         _init_accel
                          _init_conn
                            _init_ir
                           _init_isr
                          _init_leds
                           _init_pic
                          _output_ir
 ---------------------------------------------------------------------------------
 (1) _output_ir                                           10     9      1     331
                                             32 BANK0      3     2      1
                                              0 BANK1      7     7      0
 ---------------------------------------------------------------------------------
 (1) _init_pic                                             1     1      0       0
                                             32 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_leds                                            1     1      0       0
                                             32 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_isr                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_ir                                              1     1      0       0
                                             32 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_conn                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_accel                                           1     1      0       0
                                             32 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _display_health                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display_blade_lights                                13    13      0     845
                                             35 BANK0      2     2      0
                                              0 BANK1     11    11      0
                           _writespi
 ---------------------------------------------------------------------------------
 (2) _writespi                                             3     3      0      34
                                             32 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _determine_sword_was_swung                           13    13      0     175
                                             32 BANK0      1     1      0
                                              0 BANK1     12    12      0
 ---------------------------------------------------------------------------------
 (1) _determine_packets_to_send                            2     2      0     159
                                             32 BANK0      2     2      0
        _determine_omega_mode_active
 ---------------------------------------------------------------------------------
 (2) _determine_omega_mode_active                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0    5902
                                             30 BANK0      2     2      0
                            ___awdiv
                           ___awtoft
                             ___ftge
                            ___ftmul
                            ___fttol
             i1_display_blade_lights
 ---------------------------------------------------------------------------------
 (4) i1_display_blade_lights                              13    13      0     585
                                              3 COMMON     2     2      0
                                              0 BANK0     11    11      0
                         i1_writespi
 ---------------------------------------------------------------------------------
 (5) i1_writespi                                           3     3      0      23
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             14    10      4     305
                                             16 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    2273
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftge                                               9     3      6     348
                                             16 BANK0      9     3      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awtoft                                             6     3      3    1985
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    1629
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _determine_omega_mode_active
   _determine_packets_to_send
     _determine_omega_mode_active
   _determine_sword_was_swung
   _display_blade_lights
     _writespi
   _display_health
   _init_accel
   _init_conn
   _init_ir
   _init_isr
   _init_leds
   _init_pic
   _output_ir

 _isr (ROOT)
   ___awdiv
   ___awtoft
     ___ftpack
   ___ftge
     ___awtoft (ARG)
       ___ftpack
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
   ___fttol
     ___awtoft (ARG)
       ___ftpack
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
   i1_display_blade_lights
     i1_writespi

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     28      30       5       60.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     10      15       7       26.3%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0      53      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0      53      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              50      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24              50      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25              20      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Wed Nov 04 17:47:45 2015

                         __CFG_CP$OFF 0000                                    l55 077C  
                                  l58 0798                          ___awdiv@sign 0076  
              __end_of_display_health 0E9F                                   l321 0FB9  
                                 l324 0FD3                                   l318 0F9F  
                                 l327 0FFC                                   l329 0FF8  
                                 l274 046D                                   l283 0544  
                                 l279 04DA                                   l587 0D7C  
                                 _GIE 005F                                   _RA1 0061  
                                 _RB3 006B                                   _RC4 0074  
                                 _RC7 0077                          __CFG_CPD$OFF 0000  
                                 _isr 0004                          __CFG_BORV$LO 0000  
                                 wreg 0009                          __CFG_IESO$ON 0000  
                    writespi@data_out 0042              ??i1_display_blade_lights 0073  
                        __CFG_LVP$OFF 0000            i1display_blade_lights@mode 0020  
                                l3102 0F7C                                  l3202 0183  
                                l3220 01AC                                  l3214 0196  
                                l3240 023E                                  l3208 0187  
                                l3304 0741                                  l3234 022B  
                                l3322 076E                                  l3314 0754  
                                l3330 077A                                  l3252 0256  
                                l3228 0215                                  l2460 0E6C  
                                l3158 04D4                                  l3326 0774  
                                l3272 02EB                                  l3328 0776  
                                l3266 02D5                                  l3258 026C  
                                l2482 0E8A                                  l3178 0541  
                                l3338 078E                                  l2548 0DCB  
                                l3296 072E                                  ?_isr 0070  
                                _ADGO 04E9                                  STR_1 106A  
                                STR_2 1031                                  STR_3 1000  
                                STR_4 1050                                  _BRGH 0CF2  
                                _CREN 0CEC                                  u3007 04BB  
                                u3017 04C7                                  u3107 0562  
                                u3027 04EC                                  u3117 056E  
                                u3037 04F8                                  u3207 0FCC  
                                u3127 057A                                  u3047 0504  
                                u3137 0586                                  u3057 0510  
                                u3147 0592                                  u3067 051C  
                                u3157 059E                                  u3077 0528  
                                u3167 0230                                  u3087 0534  
                                u2625 0FEC                                  u3177 02F0  
                                u3097 0556                                  _PIE4 0094  
                                u2635 0FF6                                  u3187 0F98  
                                u3197 0FB2                                  u2805 026A  
                                u2815 02D3                                  u2735 0194  
                                u2655 0478                                  u2825 02E9  
                                u2745 01AA                                  u2755 0213  
                                u2675 04E5                                  u2765 0229  
                                u2685 054F                                  u2937 0719  
                                u2795 0254                                  u2947 0784  
                                _RCIE 048D                                  _RCIF 008D  
                                u2957 047F                                  u2967 048B  
                                u2977 0497                                  u2987 04A3  
                                u2997 04AF     __end_of_determine_sword_was_swung 1000  
                                _TMR1 0016                                  _SPEN 0CEF  
                                _TRMT 0CF1                                  _TXEN 0CF5  
                                _SYNC 0CF4                          __CFG_WRT$OFF 0000  
                       __CFG_FCMEN$ON 0000                                  _main 0707  
                        ___ftpack@arg 0070                           main@pkt_arr 00AC  
                        ___ftpack@exp 0073                                  fsr1h 0007  
                                indf1 0001                                  fsr1l 0006  
                                btemp 007E                                  ltemp 007E  
                                start 0161                                  ttemp 007E  
                                wtemp 007E                            _Davgcycles 004C  
                       __CFG_MCLRE$ON 0000                          ___ftmul@cntr 002E  
                        ___ftmul@sign 002F                          ___fttol@exp1 003D  
                        ___fttol@lval 0039                                 ??_isr 003E  
                          i1_writespi 0D4C             _determine_packets_to_send 0DB4  
                               ?_main 0070                       ?_display_health 0070  
                     __end_of___awdiv 0EF0                                 _BRG16 0CFB  
                       __CFG_WDTE$OFF 0000                       __end_of___ftmul 065F  
                     ___awdiv@divisor 0070                                 _T1CON 0018  
                     __end_of___fttol 0F77                                 _IOCAF 0393  
                               _IOCAN 0392                                 _IOCAP 0391  
                               i1l171 001C                                 i1l180 0036  
                               i1l174 015C                                 i1l184 0046  
                               i1l176 002A                                 i1l168 0014  
                               i1l188 0052                                 i1l587 0D58  
                               i1l852 07DF                                 i1l853 07E7  
                               i1l845 07CC                                 i1l936 0F5D  
                     ___awdiv@counter 0075                                 _RCREG 0199  
                               _SPBRG 019B                     i1writespi@TempVar 0071  
                               _TRISA 008C                                 _TRISB 008D  
                               _TRISC 008E                                 _SSPEN 10AD  
                               _TXREG 019A                         ___awtoft@sign 007D  
                     __end_of_init_ir 0E16                         ___ftpack@sign 0074  
                               main@i 00AF                        __CFG_BOREN$OFF 0000  
                               ltemp0 007E                                 ltemp1 0082  
                               ltemp2 0086                                 ltemp3 0080  
                               ttemp0 007E                                 ttemp1 0081  
                               ttemp2 0084                                 ttemp3 0087  
                               ttemp4 007F                                 status 0003  
                               wtemp0 007E                                 wtemp1 0080  
                               wtemp2 0082                                 wtemp3 0084  
                               wtemp4 0086                                 wtemp5 0088  
                               wtemp6 007F                       __initialization 0163  
                        __end_of_main 079A                        __CFG_LPBOR$OFF 0000  
                              ??_main 0045                         ___fttol@sign1 0038  
                      __CFG_PLLEN$OFF 0000          __end_of_display_blade_lights 02F9  
                        _stun_counter 00B3       __size_ofi1_display_blade_lights 016D  
                              _ADCON0 009D                                _ADCON1 009E  
                              _ADCON2 009F                                _ADRESH 009C  
                              _ADRESL 009B                      ___awdiv@dividend 0072  
                    __end_of___awtoft 0DB4                                _ANSELA 018C  
                              _ANSELB 018D                      __end_of___ftpack 07FE  
                              _IOCAF1 1C99                                i1l2132 07A9  
                              i1l2142 07D1                                i1l2134 07B3  
                              i1l3030 0034                                i1l2144 07D9  
                              i1l2136 07B8                                i1l2128 07A2  
                              i1l3024 0028                                i1l3050 005C  
                              i1l3044 0050                                i1l3036 0040  
                              i1l3070 011A                                i1l3082 013E  
                              i1l2710 0EB4                                i1l2720 0EBC  
                              i1l2704 0EA9                                i1l2800 061B  
                              i1l2722 0EC8                                i1l2732 0EE3  
                              i1l2812 0637                                u202_25 0F10  
                              i1l2902 03A5                                i1l2736 0EEB  
                              i1l2728 0EDA                                i1l2760 0E43  
                              i1l2808 062F                                i1l2920 03CA  
                              i1l2748 0D9E                                i1l2756 0E2D  
                              i1l2860 0F6E                                i1l2828 0F09  
                              i1l2940 0459                                i1l2908 03B6  
                              i1l2854 0F54                                i1l2846 0F39  
                              i1l2934 0445                                i1l2926 03DE  
                              i1l2870 0305                                i1l2784 05D8  
                              i1l2856 0F60                                i1l2848 0F47  
                              i1l2778 05C2                                i1l2882 0316  
                              i1l2796 0613                                i1l2876 0309  
                              i1l2896 0391                                i1l2888 032A  
                              u205_25 0F3A                                u221_25 03C8  
                              u142_25 07EE                                u134_25 07AE  
                              u222_25 03DC                                u223_25 0443  
                              u215_25 0314                                u136_25 07C7  
                              u208_25 0F55                                u224_25 0457  
                              u216_25 0328                                _INTCON 000B  
                              u217_25 038F                                u321_27 03A9  
                              u138_25 07D4                                u218_25 03A3  
                              u250_25 0111                                u322_27 045D  
                              u180_25 0EC9                                u252_25 0124  
                              u181_25 0ED3                                u253_25 0130  
                              u182_25 0EDB                                u191_25 05E4  
                              u255_25 0148                                u192_25 05F4  
                              u256_25 0154                                u249_25 0105  
                              u178_25 0EBF                                u194_25 061C  
                              u195_25 0622                                u198_25 0638  
                              _SDISEL 08EB                                _SCKSEL 08EC  
                              u199_25 063E                                _OSCCON 0099  
                              _SDOSEL 08ED                                _SSPBUF 0211  
                      __CFG_PWRTE$OFF 0000                                ___ftge 0E16  
                           ??___awdiv 0074                        __CFG_STVREN$ON 0000  
                           ??___ftmul 0026                             ??___fttol 0034  
                              _health 00B4                           ?i1_writespi 0070  
                    __end_of_init_pic 0D6D                      __end_of_init_isr 0D4C  
                    ___awdiv@quotient 0077                    i1writespi@data_out 0072  
               ___ftmul@f3_as_product 002B                             ??_init_ir 0040  
                    __end_of_writespi 0D80               __end_of__initialization 0173  
                          ___ftge@ff1 0030                            ___ftge@ff2 0033  
                          ___awtoft@c 0078                            ___ftmul@f1 0020  
                          ___ftmul@f2 0023                            ___fttol@f1 0030  
                      __pcstackCOMMON 0070                i1_display_blade_lights 02F9  
                        __pidataBANK1 07FE    __size_of_determine_packets_to_send 0029  
                          __pbssBANK0 0048                            __pbssBANK1 00B0  
                 __size_ofi1_writespi 0010                       __CFG_VCAPEN$OFF 0000  
                  __size_of_init_conn 0003                    __size_of_init_leds 00A8  
                          __pmaintext 0707                               ?___ftge 0030  
                    ??_display_health 0040                  _display_blade_lights 0177  
 determine_sword_was_swung@neg_thresh 00A9                            __pintentry 0004  
                      output_ir@i_251 00A2                        output_ir@i_252 00A4  
                           ?___awtoft 0078                             ?___ftpack 0070  
             i1display_blade_lights@i 0021               i1display_blade_lights@r 0029  
                             _PSMC2LD 758E                               _PSMC3LD 768E  
                             _PSMC4LD 788E                               _SSPCON1 0215  
   __end_of_determine_packets_to_send 0DDD                    __size_of_output_ir 0145  
          ?_determine_sword_was_swung 0070                             ?_init_pic 0070  
                           ?_init_isr 0070                 ?_display_blade_lights 0070  
                     __size_of___ftge 003C                               ___awdiv 0E9F  
                             ___ftmul 05AB                               ___fttol 0EF0  
                          _init_accel 0D80                            ??___awtoft 007B  
                          ??___ftpack 0075                               __ptext1 0466  
                             __ptext2 0D5C                               __ptext3 065F  
                             __ptext4 0D3D                               __ptext5 0DDD  
                             __ptext6 0D35                               __ptext7 0D80  
                             __ptext8 0E52                               __ptext9 0177  
                           ?_writespi 0070   determine_sword_was_swung@pos_thresh 00A7  
                             _init_ir 0DDD                     __end_of_init_conn 0D38  
                        __size_of_isr 015D                     __end_of_init_leds 0707  
        ?_determine_omega_mode_active 0070                             _IOCAFbits 0393  
                end_of_initialization 0173                            ??_init_pic 0040  
                          ??_init_isr 0040                            _numPackets 004E  
                           _PSMC1FEBS 0E99                             _PSMC1BLKF 0EAC  
                           _PSMC1ASDC 0E9D                             _PSMC1BLNK 0E97  
                           _PSMC1BLKR 0EAB                             _PSMC1ASDL 0E9E  
                           _PSMC2FEBS 0EB9                             _PSMC2BLKF 0ECC  
                           _PSMC2ASDC 0EBD                             _PSMC1ASDS 0E9F  
                           _PSMC2BLNK 0EB7                             _PSMC2BLKR 0ECB  
                           _PSMC2ASDL 0EBE                             _PSMC3FEBS 0ED9  
                           _PSMC3BLKF 0EEC                             _PSMC3ASDC 0EDD  
                           _PSMC2ASDS 0EBF                             _PSMC3BLNK 0ED7  
                           _PSMC3BLKR 0EEB                             _PSMC3ASDL 0EDE  
                           _PSMC4FEBS 0F19                             _PSMC4BLKF 0F2C  
                           _PSMC4ASDC 0F1D                             _PSMC3ASDS 0EDF  
                           _PSMC4BLNK 0F17                             _PSMC4BLKR 0F2B  
                           _PSMC4ASDL 0F1E                             _PSMC4ASDS 0F1F  
                           _PSMC1REBS 0E98                             _PSMC2REBS 0EB8  
                           _PSMC3REBS 0ED8                             _PSMC4REBS 0F18  
                           _PSMC1STR0 0EAE                             _PSMC1STR1 0EAF  
                           _PSMC2STR0 0ECE                             _PSMC2STR1 0ECF  
                           _PSMC1SYNC 0E93                             _PSMC3STR0 0EEE  
                           _PSMC3STR1 0EEF                             _PSMC2SYNC 0EB3  
                           _PSMC4STR0 0F2E                             _PSMC4STR1 0F2F  
                           _PSMC3SYNC 0ED3                             _PSMC4SYNC 0F13  
                        __pstringtext 1000                          ??i1_writespi 0070  
                   __end_of_output_ir 05AB                             _PORTAbits 000C  
                          ??_writespi 0040                      __CFG_FOSC$INTOSC 0000  
                           _TRISBbits 008D                 display_blade_lights@i 00A0  
               display_blade_lights@r 00A9                       writespi@TempVar 0041  
                  __end_ofi1_writespi 0D5C               ?i1_display_blade_lights 0070  
              ??_display_blade_lights 0043                           ___ftmul@exp 002A  
                         ?_init_accel 0070                        __end_of___ftge 0E52  
                 start_initialization 0163             display_blade_lights@i_480 00A4  
           display_blade_lights@i_481 00A6             display_blade_lights@i_478 00A2  
                         __end_of_isr 0161             display_blade_lights@r_479 00AA  
      __end_ofi1_display_blade_lights 0466  __size_of_determine_omega_mode_active 0005  
                            ??___ftge 0036                           __pdataBANK1 00B4  
                   __size_of___awtoft 0020                     __size_of___ftpack 0064  
                           ___latbits 0003                         __pcstackBANK0 0020  
                       __pcstackBANK1 00A0                   __size_of_init_accel 0014  
         ??_determine_sword_was_swung 0040                     __size_of_init_pic 0011  
                   __size_of_init_isr 000F           i1display_blade_lights@i_480 0025  
         i1display_blade_lights@i_481 0027           i1display_blade_lights@i_478 0023  
         i1display_blade_lights@r_479 002A                              ?___awdiv 0070  
                            ?___ftmul 0020                              ?___fttol 0030  
                            ?_init_ir 0070                     __size_of_writespi 0013  
                     output_ir@amount 0040                              _P1MDLBIT 7495  
                           _init_conn 0D35                             _init_leds 065F  
                            _D1cycles 0048                              _D2cycles 004A  
          ?_determine_packets_to_send 0070                              _PIR1bits 0011  
                            _PSMC1DBF 0EAA                              _PSMC1DCH 0EA4  
                            _PSMC2DBF 0ECA                              _PSMC1DCL 0EA3  
                            _PSMC1FFA 0EAD                              _PSMC2DCH 0EC4  
                            _PSMC1DBR 0EA9                              _PSMC1DCS 0E9B  
                            _PSMC3DBF 0EEA                              _PSMC2DCL 0EC3  
                            _PSMC2FFA 0ECD                              _PSMC3DCH 0EE4  
                            _PSMC2DBR 0EC9                              _PSMC1CLK 0E94  
                            _PSMC2DCS 0EBB                              _PSMC4DBF 0F2A  
                            _PSMC3DCL 0EE3                              _PSMC3FFA 0EED  
                            _PSMC4DCH 0F24                              _PSMC3DBR 0EE9  
                            _PSMC2CLK 0EB4                              _PSMC1CON 0E91  
                            _PSMC3DCS 0EDB                              _PSMC4DCL 0F23  
                            _PSMC4FFA 0F2D                              _PSMC4DBR 0F29  
                            _PSMC3CLK 0ED4                              _PSMC2CON 0EB1  
                            _PSMC4DCS 0F1B                              _PSMC4CLK 0F14  
                            _PSMC3CON 0ED1                              _PSMC1MDL 0E92  
                            _PSMC4CON 0F11                              _PSMC2MDL 0EB2  
                            _PSMC1OEN 0E95                              _PSMC1INT 0EA0  
                            _PSMC3MDL 0ED2                              _PSMC1PHH 0EA2  
                            _PSMC2OEN 0EB5                              _PSMC2INT 0EC0  
                            _PSMC1PHL 0EA1                              _PSMC4MDL 0F12  
                            _PSMC2PHH 0EC2                              _PSMC1PHS 0E9A  
                            _PSMC3OEN 0ED5                              _PSMC3INT 0EE0  
                            _PSMC2PHL 0EC1                              _PSMC3PHH 0EE2  
                            _PSMC1POL 0E96                              _PSMC2PHS 0EBA  
                            _PSMC4OEN 0F15                              _PSMC4INT 0F20  
                            _PSMC3PHL 0EE1                              _PSMC1PRH 0EA6  
                            _PSMC4PHH 0F22                              _PSMC1PRL 0EA5  
                            _PSMC2POL 0EB6                              _PSMC3PHS 0EDA  
                            _PSMC4PHL 0F21                              _PSMC2PRH 0EC6  
                            _PSMC1PRS 0E9C                              _PSMC2PRL 0EC5  
                            _PSMC3POL 0ED6                              _PSMC4PHS 0F1A  
                            _PSMC3PRH 0EE6                              _PSMC2PRS 0EBC  
                            _PSMC3PRL 0EE5                              _PSMC4POL 0F16  
                            _PSMC4PRH 0F26                              _PSMC3PRS 0EDC  
                            _PSMC4PRL 0F25                              _PSMC4PRS 0F1C  
                           main@F7231 00B0             _determine_sword_was_swung 0F77  
                           _output_ir 0466               __size_of_display_health 004D  
                          ?_init_conn 0070                            ?_init_leds 0070  
                        ??_init_accel 0040                      __size_of___awdiv 0051  
                    __size_of___ftmul 00B4                      __size_of___fttol 0087  
                            ___awtoft 0D94                              ___ftpack 079A  
                   output_ir@pkt_type 00A6           determine_sword_was_swung@xh 00AB  
         determine_sword_was_swung@yh 00A2           determine_sword_was_swung@xl 00A4  
         determine_sword_was_swung@zh 00A3           determine_sword_was_swung@yl 00A5  
         determine_sword_was_swung@zl 00A6                            ?_output_ir 0040  
                    __size_of_init_ir 0039                            output_ir@i 00A0  
                            __ptext10 0D6D                              __ptext11 0F77  
                            __ptext20 0D94                              __ptext12 0DB4  
                            __ptext21 079A                              __ptext13 0D38  
                            __ptext22 0E9F                              __ptext15 02F9  
                            __ptext16 0D4C                              __ptext17 0EF0  
                            __ptext18 05AB                              __ptext19 0E16  
                  __end_of_init_accel 0D94                         __size_of_main 0093  
                            _init_pic 0D5C                              _init_isr 0D3D  
    determine_packets_to_send@packets 0041         __size_of_display_blade_lights 0182  
                            int$flags 007E                              _writespi 0D6D  
 __end_of_determine_omega_mode_active 0D3D           _determine_omega_mode_active 0D38  
   determine_sword_was_swung@midpoint 00A0                           ??_init_conn 0040  
                         ??_init_leds 0040                              intlevel1 0000  
       ??_determine_omega_mode_active 0040                     __CFG_CLKOUTEN$OFF 0000  
                      _display_health 0E52                           ??_output_ir 0041  
                         _SSPCON1bits 0215    __size_of_determine_sword_was_swung 0089  
         ??_determine_packets_to_send 0040              display_blade_lights@mode 00A8  
