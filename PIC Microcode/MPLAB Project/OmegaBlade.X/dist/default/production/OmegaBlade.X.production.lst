

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sun Oct 18 17:36:09 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F1788
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext,global,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	dabs	1,0x7E,2
    31  0000                     	;# 
    32  0001                     	;# 
    33  0002                     	;# 
    34  0003                     	;# 
    35  0004                     	;# 
    36  0005                     	;# 
    37  0006                     	;# 
    38  0007                     	;# 
    39  0008                     	;# 
    40  0009                     	;# 
    41  000A                     	;# 
    42  000B                     	;# 
    43  000C                     	;# 
    44  000D                     	;# 
    45  000E                     	;# 
    46  0010                     	;# 
    47  0011                     	;# 
    48  0012                     	;# 
    49  0013                     	;# 
    50  0014                     	;# 
    51  0015                     	;# 
    52  0016                     	;# 
    53  0016                     	;# 
    54  0017                     	;# 
    55  0018                     	;# 
    56  0019                     	;# 
    57  001A                     	;# 
    58  001B                     	;# 
    59  001C                     	;# 
    60  008C                     	;# 
    61  008D                     	;# 
    62  008E                     	;# 
    63  0090                     	;# 
    64  0091                     	;# 
    65  0092                     	;# 
    66  0093                     	;# 
    67  0094                     	;# 
    68  0095                     	;# 
    69  0096                     	;# 
    70  0097                     	;# 
    71  0098                     	;# 
    72  0099                     	;# 
    73  009A                     	;# 
    74  009B                     	;# 
    75  009B                     	;# 
    76  009C                     	;# 
    77  009D                     	;# 
    78  009E                     	;# 
    79  009F                     	;# 
    80  010C                     	;# 
    81  010D                     	;# 
    82  010E                     	;# 
    83  0111                     	;# 
    84  0112                     	;# 
    85  0113                     	;# 
    86  0114                     	;# 
    87  0115                     	;# 
    88  0116                     	;# 
    89  0117                     	;# 
    90  0118                     	;# 
    91  0119                     	;# 
    92  011A                     	;# 
    93  011B                     	;# 
    94  011C                     	;# 
    95  011D                     	;# 
    96  011D                     	;# 
    97  011D                     	;# 
    98  011E                     	;# 
    99  011F                     	;# 
   100  018C                     	;# 
   101  018D                     	;# 
   102  018E                     	;# 
   103  0191                     	;# 
   104  0191                     	;# 
   105  0192                     	;# 
   106  0193                     	;# 
   107  0193                     	;# 
   108  0193                     	;# 
   109  0194                     	;# 
   110  0195                     	;# 
   111  0196                     	;# 
   112  0197                     	;# 
   113  0199                     	;# 
   114  0199                     	;# 
   115  0199                     	;# 
   116  019A                     	;# 
   117  019A                     	;# 
   118  019A                     	;# 
   119  019B                     	;# 
   120  019B                     	;# 
   121  019B                     	;# 
   122  019B                     	;# 
   123  019B                     	;# 
   124  019C                     	;# 
   125  019C                     	;# 
   126  019C                     	;# 
   127  019D                     	;# 
   128  019D                     	;# 
   129  019D                     	;# 
   130  019E                     	;# 
   131  019E                     	;# 
   132  019E                     	;# 
   133  019F                     	;# 
   134  019F                     	;# 
   135  019F                     	;# 
   136  019F                     	;# 
   137  019F                     	;# 
   138  020C                     	;# 
   139  020D                     	;# 
   140  020E                     	;# 
   141  0210                     	;# 
   142  0211                     	;# 
   143  0211                     	;# 
   144  0212                     	;# 
   145  0212                     	;# 
   146  0213                     	;# 
   147  0213                     	;# 
   148  0214                     	;# 
   149  0214                     	;# 
   150  0215                     	;# 
   151  0215                     	;# 
   152  0215                     	;# 
   153  0215                     	;# 
   154  0216                     	;# 
   155  0216                     	;# 
   156  0217                     	;# 
   157  0217                     	;# 
   158  028C                     	;# 
   159  028D                     	;# 
   160  028E                     	;# 
   161  0291                     	;# 
   162  0291                     	;# 
   163  0292                     	;# 
   164  0293                     	;# 
   165  0298                     	;# 
   166  0298                     	;# 
   167  0299                     	;# 
   168  029A                     	;# 
   169  030C                     	;# 
   170  030D                     	;# 
   171  030E                     	;# 
   172  0311                     	;# 
   173  0311                     	;# 
   174  0312                     	;# 
   175  0313                     	;# 
   176  038C                     	;# 
   177  038D                     	;# 
   178  038E                     	;# 
   179  0390                     	;# 
   180  0391                     	;# 
   181  0392                     	;# 
   182  0393                     	;# 
   183  0394                     	;# 
   184  0395                     	;# 
   185  0396                     	;# 
   186  0397                     	;# 
   187  0398                     	;# 
   188  0399                     	;# 
   189  039D                     	;# 
   190  039E                     	;# 
   191  039F                     	;# 
   192  0511                     	;# 
   193  0513                     	;# 
   194  051A                     	;# 
   195  0591                     	;# 
   196  0592                     	;# 
   197  0592                     	;# 
   198  0593                     	;# 
   199  0594                     	;# 
   200  0594                     	;# 
   201  0595                     	;# 
   202  0596                     	;# 
   203  0596                     	;# 
   204  0E91                     	;# 
   205  0E92                     	;# 
   206  0E93                     	;# 
   207  0E94                     	;# 
   208  0E95                     	;# 
   209  0E96                     	;# 
   210  0E97                     	;# 
   211  0E98                     	;# 
   212  0E99                     	;# 
   213  0E9A                     	;# 
   214  0E9B                     	;# 
   215  0E9C                     	;# 
   216  0E9D                     	;# 
   217  0E9E                     	;# 
   218  0E9F                     	;# 
   219  0EA0                     	;# 
   220  0EA1                     	;# 
   221  0EA1                     	;# 
   222  0EA2                     	;# 
   223  0EA3                     	;# 
   224  0EA3                     	;# 
   225  0EA4                     	;# 
   226  0EA5                     	;# 
   227  0EA5                     	;# 
   228  0EA6                     	;# 
   229  0EA7                     	;# 
   230  0EA7                     	;# 
   231  0EA8                     	;# 
   232  0EA9                     	;# 
   233  0EAA                     	;# 
   234  0EAB                     	;# 
   235  0EAC                     	;# 
   236  0EAD                     	;# 
   237  0EAE                     	;# 
   238  0EAF                     	;# 
   239  0EB1                     	;# 
   240  0EB2                     	;# 
   241  0EB3                     	;# 
   242  0EB4                     	;# 
   243  0EB5                     	;# 
   244  0EB6                     	;# 
   245  0EB7                     	;# 
   246  0EB8                     	;# 
   247  0EB9                     	;# 
   248  0EBA                     	;# 
   249  0EBB                     	;# 
   250  0EBC                     	;# 
   251  0EBD                     	;# 
   252  0EBE                     	;# 
   253  0EBF                     	;# 
   254  0EC0                     	;# 
   255  0EC1                     	;# 
   256  0EC1                     	;# 
   257  0EC2                     	;# 
   258  0EC3                     	;# 
   259  0EC3                     	;# 
   260  0EC4                     	;# 
   261  0EC5                     	;# 
   262  0EC5                     	;# 
   263  0EC6                     	;# 
   264  0EC7                     	;# 
   265  0EC7                     	;# 
   266  0EC8                     	;# 
   267  0EC9                     	;# 
   268  0ECA                     	;# 
   269  0ECB                     	;# 
   270  0ECC                     	;# 
   271  0ECD                     	;# 
   272  0ECE                     	;# 
   273  0ECF                     	;# 
   274  0ED1                     	;# 
   275  0ED2                     	;# 
   276  0ED3                     	;# 
   277  0ED4                     	;# 
   278  0ED5                     	;# 
   279  0ED6                     	;# 
   280  0ED7                     	;# 
   281  0ED8                     	;# 
   282  0ED9                     	;# 
   283  0EDA                     	;# 
   284  0EDB                     	;# 
   285  0EDC                     	;# 
   286  0EDD                     	;# 
   287  0EDE                     	;# 
   288  0EDF                     	;# 
   289  0EE0                     	;# 
   290  0EE1                     	;# 
   291  0EE1                     	;# 
   292  0EE2                     	;# 
   293  0EE3                     	;# 
   294  0EE3                     	;# 
   295  0EE4                     	;# 
   296  0EE5                     	;# 
   297  0EE5                     	;# 
   298  0EE6                     	;# 
   299  0EE7                     	;# 
   300  0EE7                     	;# 
   301  0EE8                     	;# 
   302  0EE9                     	;# 
   303  0EEA                     	;# 
   304  0EEB                     	;# 
   305  0EEC                     	;# 
   306  0EED                     	;# 
   307  0EEE                     	;# 
   308  0EEF                     	;# 
   309  0F11                     	;# 
   310  0F12                     	;# 
   311  0F13                     	;# 
   312  0F14                     	;# 
   313  0F15                     	;# 
   314  0F16                     	;# 
   315  0F17                     	;# 
   316  0F18                     	;# 
   317  0F19                     	;# 
   318  0F1A                     	;# 
   319  0F1B                     	;# 
   320  0F1C                     	;# 
   321  0F1D                     	;# 
   322  0F1E                     	;# 
   323  0F1F                     	;# 
   324  0F20                     	;# 
   325  0F21                     	;# 
   326  0F21                     	;# 
   327  0F22                     	;# 
   328  0F23                     	;# 
   329  0F23                     	;# 
   330  0F24                     	;# 
   331  0F25                     	;# 
   332  0F25                     	;# 
   333  0F26                     	;# 
   334  0F27                     	;# 
   335  0F27                     	;# 
   336  0F28                     	;# 
   337  0F29                     	;# 
   338  0F2A                     	;# 
   339  0F2B                     	;# 
   340  0F2C                     	;# 
   341  0F2D                     	;# 
   342  0F2E                     	;# 
   343  0F2F                     	;# 
   344  0FE4                     	;# 
   345  0FE5                     	;# 
   346  0FE6                     	;# 
   347  0FE7                     	;# 
   348  0FE8                     	;# 
   349  0FE9                     	;# 
   350  0FEA                     	;# 
   351  0FEB                     	;# 
   352  0FED                     	;# 
   353  0FEE                     	;# 
   354  0FEF                     	;# 
   355  0000                     	;# 
   356  0001                     	;# 
   357  0002                     	;# 
   358  0003                     	;# 
   359  0004                     	;# 
   360  0005                     	;# 
   361  0006                     	;# 
   362  0007                     	;# 
   363  0008                     	;# 
   364  0009                     	;# 
   365  000A                     	;# 
   366  000B                     	;# 
   367  000C                     	;# 
   368  000D                     	;# 
   369  000E                     	;# 
   370  0010                     	;# 
   371  0011                     	;# 
   372  0012                     	;# 
   373  0013                     	;# 
   374  0014                     	;# 
   375  0015                     	;# 
   376  0016                     	;# 
   377  0016                     	;# 
   378  0017                     	;# 
   379  0018                     	;# 
   380  0019                     	;# 
   381  001A                     	;# 
   382  001B                     	;# 
   383  001C                     	;# 
   384  008C                     	;# 
   385  008D                     	;# 
   386  008E                     	;# 
   387  0090                     	;# 
   388  0091                     	;# 
   389  0092                     	;# 
   390  0093                     	;# 
   391  0094                     	;# 
   392  0095                     	;# 
   393  0096                     	;# 
   394  0097                     	;# 
   395  0098                     	;# 
   396  0099                     	;# 
   397  009A                     	;# 
   398  009B                     	;# 
   399  009B                     	;# 
   400  009C                     	;# 
   401  009D                     	;# 
   402  009E                     	;# 
   403  009F                     	;# 
   404  010C                     	;# 
   405  010D                     	;# 
   406  010E                     	;# 
   407  0111                     	;# 
   408  0112                     	;# 
   409  0113                     	;# 
   410  0114                     	;# 
   411  0115                     	;# 
   412  0116                     	;# 
   413  0117                     	;# 
   414  0118                     	;# 
   415  0119                     	;# 
   416  011A                     	;# 
   417  011B                     	;# 
   418  011C                     	;# 
   419  011D                     	;# 
   420  011D                     	;# 
   421  011D                     	;# 
   422  011E                     	;# 
   423  011F                     	;# 
   424  018C                     	;# 
   425  018D                     	;# 
   426  018E                     	;# 
   427  0191                     	;# 
   428  0191                     	;# 
   429  0192                     	;# 
   430  0193                     	;# 
   431  0193                     	;# 
   432  0193                     	;# 
   433  0194                     	;# 
   434  0195                     	;# 
   435  0196                     	;# 
   436  0197                     	;# 
   437  0199                     	;# 
   438  0199                     	;# 
   439  0199                     	;# 
   440  019A                     	;# 
   441  019A                     	;# 
   442  019A                     	;# 
   443  019B                     	;# 
   444  019B                     	;# 
   445  019B                     	;# 
   446  019B                     	;# 
   447  019B                     	;# 
   448  019C                     	;# 
   449  019C                     	;# 
   450  019C                     	;# 
   451  019D                     	;# 
   452  019D                     	;# 
   453  019D                     	;# 
   454  019E                     	;# 
   455  019E                     	;# 
   456  019E                     	;# 
   457  019F                     	;# 
   458  019F                     	;# 
   459  019F                     	;# 
   460  019F                     	;# 
   461  019F                     	;# 
   462  020C                     	;# 
   463  020D                     	;# 
   464  020E                     	;# 
   465  0210                     	;# 
   466  0211                     	;# 
   467  0211                     	;# 
   468  0212                     	;# 
   469  0212                     	;# 
   470  0213                     	;# 
   471  0213                     	;# 
   472  0214                     	;# 
   473  0214                     	;# 
   474  0215                     	;# 
   475  0215                     	;# 
   476  0215                     	;# 
   477  0215                     	;# 
   478  0216                     	;# 
   479  0216                     	;# 
   480  0217                     	;# 
   481  0217                     	;# 
   482  028C                     	;# 
   483  028D                     	;# 
   484  028E                     	;# 
   485  0291                     	;# 
   486  0291                     	;# 
   487  0292                     	;# 
   488  0293                     	;# 
   489  0298                     	;# 
   490  0298                     	;# 
   491  0299                     	;# 
   492  029A                     	;# 
   493  030C                     	;# 
   494  030D                     	;# 
   495  030E                     	;# 
   496  0311                     	;# 
   497  0311                     	;# 
   498  0312                     	;# 
   499  0313                     	;# 
   500  038C                     	;# 
   501  038D                     	;# 
   502  038E                     	;# 
   503  0390                     	;# 
   504  0391                     	;# 
   505  0392                     	;# 
   506  0393                     	;# 
   507  0394                     	;# 
   508  0395                     	;# 
   509  0396                     	;# 
   510  0397                     	;# 
   511  0398                     	;# 
   512  0399                     	;# 
   513  039D                     	;# 
   514  039E                     	;# 
   515  039F                     	;# 
   516  0511                     	;# 
   517  0513                     	;# 
   518  051A                     	;# 
   519  0591                     	;# 
   520  0592                     	;# 
   521  0592                     	;# 
   522  0593                     	;# 
   523  0594                     	;# 
   524  0594                     	;# 
   525  0595                     	;# 
   526  0596                     	;# 
   527  0596                     	;# 
   528  0E91                     	;# 
   529  0E92                     	;# 
   530  0E93                     	;# 
   531  0E94                     	;# 
   532  0E95                     	;# 
   533  0E96                     	;# 
   534  0E97                     	;# 
   535  0E98                     	;# 
   536  0E99                     	;# 
   537  0E9A                     	;# 
   538  0E9B                     	;# 
   539  0E9C                     	;# 
   540  0E9D                     	;# 
   541  0E9E                     	;# 
   542  0E9F                     	;# 
   543  0EA0                     	;# 
   544  0EA1                     	;# 
   545  0EA1                     	;# 
   546  0EA2                     	;# 
   547  0EA3                     	;# 
   548  0EA3                     	;# 
   549  0EA4                     	;# 
   550  0EA5                     	;# 
   551  0EA5                     	;# 
   552  0EA6                     	;# 
   553  0EA7                     	;# 
   554  0EA7                     	;# 
   555  0EA8                     	;# 
   556  0EA9                     	;# 
   557  0EAA                     	;# 
   558  0EAB                     	;# 
   559  0EAC                     	;# 
   560  0EAD                     	;# 
   561  0EAE                     	;# 
   562  0EAF                     	;# 
   563  0EB1                     	;# 
   564  0EB2                     	;# 
   565  0EB3                     	;# 
   566  0EB4                     	;# 
   567  0EB5                     	;# 
   568  0EB6                     	;# 
   569  0EB7                     	;# 
   570  0EB8                     	;# 
   571  0EB9                     	;# 
   572  0EBA                     	;# 
   573  0EBB                     	;# 
   574  0EBC                     	;# 
   575  0EBD                     	;# 
   576  0EBE                     	;# 
   577  0EBF                     	;# 
   578  0EC0                     	;# 
   579  0EC1                     	;# 
   580  0EC1                     	;# 
   581  0EC2                     	;# 
   582  0EC3                     	;# 
   583  0EC3                     	;# 
   584  0EC4                     	;# 
   585  0EC5                     	;# 
   586  0EC5                     	;# 
   587  0EC6                     	;# 
   588  0EC7                     	;# 
   589  0EC7                     	;# 
   590  0EC8                     	;# 
   591  0EC9                     	;# 
   592  0ECA                     	;# 
   593  0ECB                     	;# 
   594  0ECC                     	;# 
   595  0ECD                     	;# 
   596  0ECE                     	;# 
   597  0ECF                     	;# 
   598  0ED1                     	;# 
   599  0ED2                     	;# 
   600  0ED3                     	;# 
   601  0ED4                     	;# 
   602  0ED5                     	;# 
   603  0ED6                     	;# 
   604  0ED7                     	;# 
   605  0ED8                     	;# 
   606  0ED9                     	;# 
   607  0EDA                     	;# 
   608  0EDB                     	;# 
   609  0EDC                     	;# 
   610  0EDD                     	;# 
   611  0EDE                     	;# 
   612  0EDF                     	;# 
   613  0EE0                     	;# 
   614  0EE1                     	;# 
   615  0EE1                     	;# 
   616  0EE2                     	;# 
   617  0EE3                     	;# 
   618  0EE3                     	;# 
   619  0EE4                     	;# 
   620  0EE5                     	;# 
   621  0EE5                     	;# 
   622  0EE6                     	;# 
   623  0EE7                     	;# 
   624  0EE7                     	;# 
   625  0EE8                     	;# 
   626  0EE9                     	;# 
   627  0EEA                     	;# 
   628  0EEB                     	;# 
   629  0EEC                     	;# 
   630  0EED                     	;# 
   631  0EEE                     	;# 
   632  0EEF                     	;# 
   633  0F11                     	;# 
   634  0F12                     	;# 
   635  0F13                     	;# 
   636  0F14                     	;# 
   637  0F15                     	;# 
   638  0F16                     	;# 
   639  0F17                     	;# 
   640  0F18                     	;# 
   641  0F19                     	;# 
   642  0F1A                     	;# 
   643  0F1B                     	;# 
   644  0F1C                     	;# 
   645  0F1D                     	;# 
   646  0F1E                     	;# 
   647  0F1F                     	;# 
   648  0F20                     	;# 
   649  0F21                     	;# 
   650  0F21                     	;# 
   651  0F22                     	;# 
   652  0F23                     	;# 
   653  0F23                     	;# 
   654  0F24                     	;# 
   655  0F25                     	;# 
   656  0F25                     	;# 
   657  0F26                     	;# 
   658  0F27                     	;# 
   659  0F27                     	;# 
   660  0F28                     	;# 
   661  0F29                     	;# 
   662  0F2A                     	;# 
   663  0F2B                     	;# 
   664  0F2C                     	;# 
   665  0F2D                     	;# 
   666  0F2E                     	;# 
   667  0F2F                     	;# 
   668  0FE4                     	;# 
   669  0FE5                     	;# 
   670  0FE6                     	;# 
   671  0FE7                     	;# 
   672  0FE8                     	;# 
   673  0FE9                     	;# 
   674  0FEA                     	;# 
   675  0FEB                     	;# 
   676  0FED                     	;# 
   677  0FEE                     	;# 
   678  0FEF                     	;# 
   679  0000                     	;# 
   680  0001                     	;# 
   681  0002                     	;# 
   682  0003                     	;# 
   683  0004                     	;# 
   684  0005                     	;# 
   685  0006                     	;# 
   686  0007                     	;# 
   687  0008                     	;# 
   688  0009                     	;# 
   689  000A                     	;# 
   690  000B                     	;# 
   691  000C                     	;# 
   692  000D                     	;# 
   693  000E                     	;# 
   694  0010                     	;# 
   695  0011                     	;# 
   696  0012                     	;# 
   697  0013                     	;# 
   698  0014                     	;# 
   699  0015                     	;# 
   700  0016                     	;# 
   701  0016                     	;# 
   702  0017                     	;# 
   703  0018                     	;# 
   704  0019                     	;# 
   705  001A                     	;# 
   706  001B                     	;# 
   707  001C                     	;# 
   708  008C                     	;# 
   709  008D                     	;# 
   710  008E                     	;# 
   711  0090                     	;# 
   712  0091                     	;# 
   713  0092                     	;# 
   714  0093                     	;# 
   715  0094                     	;# 
   716  0095                     	;# 
   717  0096                     	;# 
   718  0097                     	;# 
   719  0098                     	;# 
   720  0099                     	;# 
   721  009A                     	;# 
   722  009B                     	;# 
   723  009B                     	;# 
   724  009C                     	;# 
   725  009D                     	;# 
   726  009E                     	;# 
   727  009F                     	;# 
   728  010C                     	;# 
   729  010D                     	;# 
   730  010E                     	;# 
   731  0111                     	;# 
   732  0112                     	;# 
   733  0113                     	;# 
   734  0114                     	;# 
   735  0115                     	;# 
   736  0116                     	;# 
   737  0117                     	;# 
   738  0118                     	;# 
   739  0119                     	;# 
   740  011A                     	;# 
   741  011B                     	;# 
   742  011C                     	;# 
   743  011D                     	;# 
   744  011D                     	;# 
   745  011D                     	;# 
   746  011E                     	;# 
   747  011F                     	;# 
   748  018C                     	;# 
   749  018D                     	;# 
   750  018E                     	;# 
   751  0191                     	;# 
   752  0191                     	;# 
   753  0192                     	;# 
   754  0193                     	;# 
   755  0193                     	;# 
   756  0193                     	;# 
   757  0194                     	;# 
   758  0195                     	;# 
   759  0196                     	;# 
   760  0197                     	;# 
   761  0199                     	;# 
   762  0199                     	;# 
   763  0199                     	;# 
   764  019A                     	;# 
   765  019A                     	;# 
   766  019A                     	;# 
   767  019B                     	;# 
   768  019B                     	;# 
   769  019B                     	;# 
   770  019B                     	;# 
   771  019B                     	;# 
   772  019C                     	;# 
   773  019C                     	;# 
   774  019C                     	;# 
   775  019D                     	;# 
   776  019D                     	;# 
   777  019D                     	;# 
   778  019E                     	;# 
   779  019E                     	;# 
   780  019E                     	;# 
   781  019F                     	;# 
   782  019F                     	;# 
   783  019F                     	;# 
   784  019F                     	;# 
   785  019F                     	;# 
   786  020C                     	;# 
   787  020D                     	;# 
   788  020E                     	;# 
   789  0210                     	;# 
   790  0211                     	;# 
   791  0211                     	;# 
   792  0212                     	;# 
   793  0212                     	;# 
   794  0213                     	;# 
   795  0213                     	;# 
   796  0214                     	;# 
   797  0214                     	;# 
   798  0215                     	;# 
   799  0215                     	;# 
   800  0215                     	;# 
   801  0215                     	;# 
   802  0216                     	;# 
   803  0216                     	;# 
   804  0217                     	;# 
   805  0217                     	;# 
   806  028C                     	;# 
   807  028D                     	;# 
   808  028E                     	;# 
   809  0291                     	;# 
   810  0291                     	;# 
   811  0292                     	;# 
   812  0293                     	;# 
   813  0298                     	;# 
   814  0298                     	;# 
   815  0299                     	;# 
   816  029A                     	;# 
   817  030C                     	;# 
   818  030D                     	;# 
   819  030E                     	;# 
   820  0311                     	;# 
   821  0311                     	;# 
   822  0312                     	;# 
   823  0313                     	;# 
   824  038C                     	;# 
   825  038D                     	;# 
   826  038E                     	;# 
   827  0390                     	;# 
   828  0391                     	;# 
   829  0392                     	;# 
   830  0393                     	;# 
   831  0394                     	;# 
   832  0395                     	;# 
   833  0396                     	;# 
   834  0397                     	;# 
   835  0398                     	;# 
   836  0399                     	;# 
   837  039D                     	;# 
   838  039E                     	;# 
   839  039F                     	;# 
   840  0511                     	;# 
   841  0513                     	;# 
   842  051A                     	;# 
   843  0591                     	;# 
   844  0592                     	;# 
   845  0592                     	;# 
   846  0593                     	;# 
   847  0594                     	;# 
   848  0594                     	;# 
   849  0595                     	;# 
   850  0596                     	;# 
   851  0596                     	;# 
   852  0E91                     	;# 
   853  0E92                     	;# 
   854  0E93                     	;# 
   855  0E94                     	;# 
   856  0E95                     	;# 
   857  0E96                     	;# 
   858  0E97                     	;# 
   859  0E98                     	;# 
   860  0E99                     	;# 
   861  0E9A                     	;# 
   862  0E9B                     	;# 
   863  0E9C                     	;# 
   864  0E9D                     	;# 
   865  0E9E                     	;# 
   866  0E9F                     	;# 
   867  0EA0                     	;# 
   868  0EA1                     	;# 
   869  0EA1                     	;# 
   870  0EA2                     	;# 
   871  0EA3                     	;# 
   872  0EA3                     	;# 
   873  0EA4                     	;# 
   874  0EA5                     	;# 
   875  0EA5                     	;# 
   876  0EA6                     	;# 
   877  0EA7                     	;# 
   878  0EA7                     	;# 
   879  0EA8                     	;# 
   880  0EA9                     	;# 
   881  0EAA                     	;# 
   882  0EAB                     	;# 
   883  0EAC                     	;# 
   884  0EAD                     	;# 
   885  0EAE                     	;# 
   886  0EAF                     	;# 
   887  0EB1                     	;# 
   888  0EB2                     	;# 
   889  0EB3                     	;# 
   890  0EB4                     	;# 
   891  0EB5                     	;# 
   892  0EB6                     	;# 
   893  0EB7                     	;# 
   894  0EB8                     	;# 
   895  0EB9                     	;# 
   896  0EBA                     	;# 
   897  0EBB                     	;# 
   898  0EBC                     	;# 
   899  0EBD                     	;# 
   900  0EBE                     	;# 
   901  0EBF                     	;# 
   902  0EC0                     	;# 
   903  0EC1                     	;# 
   904  0EC1                     	;# 
   905  0EC2                     	;# 
   906  0EC3                     	;# 
   907  0EC3                     	;# 
   908  0EC4                     	;# 
   909  0EC5                     	;# 
   910  0EC5                     	;# 
   911  0EC6                     	;# 
   912  0EC7                     	;# 
   913  0EC7                     	;# 
   914  0EC8                     	;# 
   915  0EC9                     	;# 
   916  0ECA                     	;# 
   917  0ECB                     	;# 
   918  0ECC                     	;# 
   919  0ECD                     	;# 
   920  0ECE                     	;# 
   921  0ECF                     	;# 
   922  0ED1                     	;# 
   923  0ED2                     	;# 
   924  0ED3                     	;# 
   925  0ED4                     	;# 
   926  0ED5                     	;# 
   927  0ED6                     	;# 
   928  0ED7                     	;# 
   929  0ED8                     	;# 
   930  0ED9                     	;# 
   931  0EDA                     	;# 
   932  0EDB                     	;# 
   933  0EDC                     	;# 
   934  0EDD                     	;# 
   935  0EDE                     	;# 
   936  0EDF                     	;# 
   937  0EE0                     	;# 
   938  0EE1                     	;# 
   939  0EE1                     	;# 
   940  0EE2                     	;# 
   941  0EE3                     	;# 
   942  0EE3                     	;# 
   943  0EE4                     	;# 
   944  0EE5                     	;# 
   945  0EE5                     	;# 
   946  0EE6                     	;# 
   947  0EE7                     	;# 
   948  0EE7                     	;# 
   949  0EE8                     	;# 
   950  0EE9                     	;# 
   951  0EEA                     	;# 
   952  0EEB                     	;# 
   953  0EEC                     	;# 
   954  0EED                     	;# 
   955  0EEE                     	;# 
   956  0EEF                     	;# 
   957  0F11                     	;# 
   958  0F12                     	;# 
   959  0F13                     	;# 
   960  0F14                     	;# 
   961  0F15                     	;# 
   962  0F16                     	;# 
   963  0F17                     	;# 
   964  0F18                     	;# 
   965  0F19                     	;# 
   966  0F1A                     	;# 
   967  0F1B                     	;# 
   968  0F1C                     	;# 
   969  0F1D                     	;# 
   970  0F1E                     	;# 
   971  0F1F                     	;# 
   972  0F20                     	;# 
   973  0F21                     	;# 
   974  0F21                     	;# 
   975  0F22                     	;# 
   976  0F23                     	;# 
   977  0F23                     	;# 
   978  0F24                     	;# 
   979  0F25                     	;# 
   980  0F25                     	;# 
   981  0F26                     	;# 
   982  0F27                     	;# 
   983  0F27                     	;# 
   984  0F28                     	;# 
   985  0F29                     	;# 
   986  0F2A                     	;# 
   987  0F2B                     	;# 
   988  0F2C                     	;# 
   989  0F2D                     	;# 
   990  0F2E                     	;# 
   991  0F2F                     	;# 
   992  0FE4                     	;# 
   993  0FE5                     	;# 
   994  0FE6                     	;# 
   995  0FE7                     	;# 
   996  0FE8                     	;# 
   997  0FE9                     	;# 
   998  0FEA                     	;# 
   999  0FEB                     	;# 
  1000  0FED                     	;# 
  1001  0FEE                     	;# 
  1002  0FEF                     	;# 
  1003                           
  1004                           	psect	idataBANK0
  1005  021D                     __pidataBANK0:	
  1006                           
  1007                           ;initializer for _health
  1008  021D  3432               	retlw	50
  1009                           
  1010                           	psect	stringtext
  1011  0800                     __pstringtext:	
  1012  0800                     _dpowers:	
  1013  0800  3401               	retlw	1
  1014  0801  3400               	retlw	0
  1015  0802  340A               	retlw	10
  1016  0803  3400               	retlw	0
  1017  0804  3464               	retlw	100
  1018  0805  3400               	retlw	0
  1019  0806  34E8               	retlw	232
  1020  0807  3403               	retlw	3
  1021  0808  3410               	retlw	16
  1022  0809  3427               	retlw	39
  1023  080A                     __end_of_dpowers:	
  1024  005F                     _GIE	set	95
  1025  006B                     _RB3	set	107
  1026  008D                     _RCIF	set	141
  1027  0099                     _OSCCON	set	153
  1028  008D                     _TRISB	set	141
  1029  008E                     _TRISC	set	142
  1030  048D                     _RCIE	set	1165
  1031  0199                     _RCREG	set	409
  1032  019B                     _SPBRG	set	411
  1033  019A                     _TXREG	set	410
  1034  0CFB                     _BRG16	set	3323
  1035  0CF2                     _BRGH	set	3314
  1036  0CEC                     _CREN	set	3308
  1037  0CEF                     _SPEN	set	3311
  1038  0CF4                     _SYNC	set	3316
  1039  0CF1                     _TRMT	set	3313
  1040  0CF5                     _TXEN	set	3317
  1041  080A                     STR_26:	
  1042  080A  3450               	retlw	80	;'P'
  1043  080B  3472               	retlw	114	;'r'
  1044  080C  3465               	retlw	101	;'e'
  1045  080D  3473               	retlw	115	;'s'
  1046  080E  3473               	retlw	115	;'s'
  1047  080F  3420               	retlw	32	;' '
  1048  0810  3427               	retlw	39	;'''
  1049  0811  3464               	retlw	100	;'d'
  1050  0812  3427               	retlw	39	;'''
  1051  0813  342C               	retlw	44	;','
  1052  0814  3420               	retlw	32	;' '
  1053  0815  3427               	retlw	39	;'''
  1054  0816  3468               	retlw	104	;'h'
  1055  0817  3427               	retlw	39	;'''
  1056  0818  342C               	retlw	44	;','
  1057  0819  3420               	retlw	32	;' '
  1058  081A  346F               	retlw	111	;'o'
  1059  081B  3472               	retlw	114	;'r'
  1060  081C  3420               	retlw	32	;' '
  1061  081D  3427               	retlw	39	;'''
  1062  081E  3474               	retlw	116	;'t'
  1063  081F  3427               	retlw	39	;'''
  1064  0820  3420               	retlw	32	;' '
  1065  0821  3474               	retlw	116	;'t'
  1066  0822  346F               	retlw	111	;'o'
  1067  0823  3420               	retlw	32	;' '
  1068  0824  3473               	retlw	115	;'s'
  1069  0825  3465               	retlw	101	;'e'
  1070  0826  346E               	retlw	110	;'n'
  1071  0827  3464               	retlw	100	;'d'
  1072  0828  3420               	retlw	32	;' '
  1073  0829  3464               	retlw	100	;'d'
  1074  082A  3461               	retlw	97	;'a'
  1075  082B  346D               	retlw	109	;'m'
  1076  082C  3461               	retlw	97	;'a'
  1077  082D  3467               	retlw	103	;'g'
  1078  082E  3465               	retlw	101	;'e'
  1079  082F  342C               	retlw	44	;','
  1080  0830  3420               	retlw	32	;' '
  1081  0831  3468               	retlw	104	;'h'
  1082  0832  3465               	retlw	101	;'e'
  1083  0833  3461               	retlw	97	;'a'
  1084  0834  346C               	retlw	108	;'l'
  1085  0835  3474               	retlw	116	;'t'
  1086  0836  3468               	retlw	104	;'h'
  1087  0837  342C               	retlw	44	;','
  1088  0838  3420               	retlw	32	;' '
  1089  0839  346F               	retlw	111	;'o'
  1090  083A  3472               	retlw	114	;'r'
  1091  083B  3420               	retlw	32	;' '
  1092  083C  3473               	retlw	115	;'s'
  1093  083D  3474               	retlw	116	;'t'
  1094  083E  3475               	retlw	117	;'u'
  1095  083F  346E               	retlw	110	;'n'
  1096  0840  3420               	retlw	32	;' '
  1097  0841  3470               	retlw	112	;'p'
  1098  0842  3461               	retlw	97	;'a'
  1099  0843  3463               	retlw	99	;'c'
  1100  0844  346B               	retlw	107	;'k'
  1101  0845  3465               	retlw	101	;'e'
  1102  0846  3474               	retlw	116	;'t'
  1103  0847  3473               	retlw	115	;'s'
  1104  0848  342E               	retlw	46	;'.'
  1105  0849  340A               	retlw	10
  1106  084A  340D               	retlw	13
  1107  084B  3400               	retlw	0
  1108  084C                     STR_14:	
  1109  084C  340A               	retlw	10
  1110  084D  340D               	retlw	13
  1111  084E  3457               	retlw	87	;'W'
  1112  084F  3468               	retlw	104	;'h'
  1113  0850  3469               	retlw	105	;'i'
  1114  0851  3463               	retlw	99	;'c'
  1115  0852  3468               	retlw	104	;'h'
  1116  0853  3420               	retlw	32	;' '
  1117  0854  3462               	retlw	98	;'b'
  1118  0855  346C               	retlw	108	;'l'
  1119  0856  3461               	retlw	97	;'a'
  1120  0857  3464               	retlw	100	;'d'
  1121  0858  3465               	retlw	101	;'e'
  1122  0859  3420               	retlw	32	;' '
  1123  085A  3477               	retlw	119	;'w'
  1124  085B  346F               	retlw	111	;'o'
  1125  085C  3475               	retlw	117	;'u'
  1126  085D  346C               	retlw	108	;'l'
  1127  085E  3464               	retlw	100	;'d'
  1128  085F  3420               	retlw	32	;' '
  1129  0860  3479               	retlw	121	;'y'
  1130  0861  346F               	retlw	111	;'o'
  1131  0862  3475               	retlw	117	;'u'
  1132  0863  3420               	retlw	32	;' '
  1133  0864  346C               	retlw	108	;'l'
  1134  0865  3469               	retlw	105	;'i'
  1135  0866  346B               	retlw	107	;'k'
  1136  0867  3465               	retlw	101	;'e'
  1137  0868  3420               	retlw	32	;' '
  1138  0869  3474               	retlw	116	;'t'
  1139  086A  346F               	retlw	111	;'o'
  1140  086B  3420               	retlw	32	;' '
  1141  086C  3474               	retlw	116	;'t'
  1142  086D  3465               	retlw	101	;'e'
  1143  086E  3473               	retlw	115	;'s'
  1144  086F  3474               	retlw	116	;'t'
  1145  0870  343F               	retlw	63	;'?'
  1146  0871  3420               	retlw	32	;' '
  1147  0872  3445               	retlw	69	;'E'
  1148  0873  346E               	retlw	110	;'n'
  1149  0874  3474               	retlw	116	;'t'
  1150  0875  3465               	retlw	101	;'e'
  1151  0876  3472               	retlw	114	;'r'
  1152  0877  3420               	retlw	32	;' '
  1153  0878  3461               	retlw	97	;'a'
  1154  0879  3420               	retlw	32	;' '
  1155  087A  3466               	retlw	102	;'f'
  1156  087B  346F               	retlw	111	;'o'
  1157  087C  3472               	retlw	114	;'r'
  1158  087D  3420               	retlw	32	;' '
  1159  087E  3441               	retlw	65	;'A'
  1160  087F  346C               	retlw	108	;'l'
  1161  0880  3470               	retlw	112	;'p'
  1162  0881  3468               	retlw	104	;'h'
  1163  0882  3461               	retlw	97	;'a'
  1164  0883  342C               	retlw	44	;','
  1165  0884  3420               	retlw	32	;' '
  1166  0885  3462               	retlw	98	;'b'
  1167  0886  3420               	retlw	32	;' '
  1168  0887  3466               	retlw	102	;'f'
  1169  0888  346F               	retlw	111	;'o'
  1170  0889  3472               	retlw	114	;'r'
  1171  088A  340A               	retlw	10
  1172  088B  340D               	retlw	13
  1173  088C  3400               	retlw	0
  1174  088D                     STR_13:	
  1175  088D  340A               	retlw	10
  1176  088E  340D               	retlw	13
  1177  088F  343D               	retlw	61	;'='
  1178  0890  343D               	retlw	61	;'='
  1179  0891  343D               	retlw	61	;'='
  1180  0892  343D               	retlw	61	;'='
  1181  0893  343D               	retlw	61	;'='
  1182  0894  343D               	retlw	61	;'='
  1183  0895  343D               	retlw	61	;'='
  1184  0896  343D               	retlw	61	;'='
  1185  0897  343D               	retlw	61	;'='
  1186  0898  343D               	retlw	61	;'='
  1187  0899  343D               	retlw	61	;'='
  1188  089A  343D               	retlw	61	;'='
  1189  089B  343D               	retlw	61	;'='
  1190  089C  343D               	retlw	61	;'='
  1191  089D  343D               	retlw	61	;'='
  1192  089E  343D               	retlw	61	;'='
  1193  089F  343D               	retlw	61	;'='
  1194  08A0  343D               	retlw	61	;'='
  1195  08A1  343D               	retlw	61	;'='
  1196  08A2  343D               	retlw	61	;'='
  1197  08A3  343D               	retlw	61	;'='
  1198  08A4  343D               	retlw	61	;'='
  1199  08A5  343D               	retlw	61	;'='
  1200  08A6  343D               	retlw	61	;'='
  1201  08A7  343D               	retlw	61	;'='
  1202  08A8  343D               	retlw	61	;'='
  1203  08A9  343D               	retlw	61	;'='
  1204  08AA  343D               	retlw	61	;'='
  1205  08AB  343D               	retlw	61	;'='
  1206  08AC  343D               	retlw	61	;'='
  1207  08AD  343D               	retlw	61	;'='
  1208  08AE  343D               	retlw	61	;'='
  1209  08AF  343D               	retlw	61	;'='
  1210  08B0  343D               	retlw	61	;'='
  1211  08B1  343D               	retlw	61	;'='
  1212  08B2  343D               	retlw	61	;'='
  1213  08B3  343D               	retlw	61	;'='
  1214  08B4  343D               	retlw	61	;'='
  1215  08B5  343D               	retlw	61	;'='
  1216  08B6  343D               	retlw	61	;'='
  1217  08B7  343D               	retlw	61	;'='
  1218  08B8  343D               	retlw	61	;'='
  1219  08B9  343D               	retlw	61	;'='
  1220  08BA  343D               	retlw	61	;'='
  1221  08BB  343D               	retlw	61	;'='
  1222  08BC  343D               	retlw	61	;'='
  1223  08BD  343D               	retlw	61	;'='
  1224  08BE  343D               	retlw	61	;'='
  1225  08BF  343D               	retlw	61	;'='
  1226  08C0  343D               	retlw	61	;'='
  1227  08C1  343D               	retlw	61	;'='
  1228  08C2  343D               	retlw	61	;'='
  1229  08C3  343D               	retlw	61	;'='
  1230  08C4  343D               	retlw	61	;'='
  1231  08C5  343D               	retlw	61	;'='
  1232  08C6  343D               	retlw	61	;'='
  1233  08C7  343D               	retlw	61	;'='
  1234  08C8  340A               	retlw	10
  1235  08C9  340D               	retlw	13
  1236  08CA  3400               	retlw	0
  1237  08CB                     STR_25:	
  1238  08CB  3450               	retlw	80	;'P'
  1239  08CC  3472               	retlw	114	;'r'
  1240  08CD  3465               	retlw	101	;'e'
  1241  08CE  3473               	retlw	115	;'s'
  1242  08CF  3473               	retlw	115	;'s'
  1243  08D0  3420               	retlw	32	;' '
  1244  08D1  3427               	retlw	39	;'''
  1245  08D2  3473               	retlw	115	;'s'
  1246  08D3  3427               	retlw	39	;'''
  1247  08D4  3420               	retlw	32	;' '
  1248  08D5  3474               	retlw	116	;'t'
  1249  08D6  346F               	retlw	111	;'o'
  1250  08D7  3420               	retlw	32	;' '
  1251  08D8  3473               	retlw	115	;'s'
  1252  08D9  3477               	retlw	119	;'w'
  1253  08DA  3469               	retlw	105	;'i'
  1254  08DB  346E               	retlw	110	;'n'
  1255  08DC  3467               	retlw	103	;'g'
  1256  08DD  3420               	retlw	32	;' '
  1257  08DE  3474               	retlw	116	;'t'
  1258  08DF  3468               	retlw	104	;'h'
  1259  08E0  3465               	retlw	101	;'e'
  1260  08E1  3420               	retlw	32	;' '
  1261  08E2  3473               	retlw	115	;'s'
  1262  08E3  3477               	retlw	119	;'w'
  1263  08E4  346F               	retlw	111	;'o'
  1264  08E5  3472               	retlw	114	;'r'
  1265  08E6  3464               	retlw	100	;'d'
  1266  08E7  3420               	retlw	32	;' '
  1267  08E8  3461               	retlw	97	;'a'
  1268  08E9  346E               	retlw	110	;'n'
  1269  08EA  3464               	retlw	100	;'d'
  1270  08EB  3420               	retlw	32	;' '
  1271  08EC  3473               	retlw	115	;'s'
  1272  08ED  3465               	retlw	101	;'e'
  1273  08EE  3465               	retlw	101	;'e'
  1274  08EF  3420               	retlw	32	;' '
  1275  08F0  3477               	retlw	119	;'w'
  1276  08F1  3468               	retlw	104	;'h'
  1277  08F2  3461               	retlw	97	;'a'
  1278  08F3  3474               	retlw	116	;'t'
  1279  08F4  3420               	retlw	32	;' '
  1280  08F5  3468               	retlw	104	;'h'
  1281  08F6  3461               	retlw	97	;'a'
  1282  08F7  3470               	retlw	112	;'p'
  1283  08F8  3470               	retlw	112	;'p'
  1284  08F9  3465               	retlw	101	;'e'
  1285  08FA  346E               	retlw	110	;'n'
  1286  08FB  3473               	retlw	115	;'s'
  1287  08FC  3421               	retlw	33	;'!'
  1288  08FD  340A               	retlw	10
  1289  08FE  340D               	retlw	13
  1290  08FF  3400               	retlw	0
  1291  0900                     STR_52:	
  1292  0900  340A               	retlw	10
  1293  0901  340D               	retlw	13
  1294  0902  3447               	retlw	71	;'G'
  1295  0903  346F               	retlw	111	;'o'
  1296  0904  346F               	retlw	111	;'o'
  1297  0905  3464               	retlw	100	;'d'
  1298  0906  3420               	retlw	32	;' '
  1299  0907  346A               	retlw	106	;'j'
  1300  0908  346F               	retlw	111	;'o'
  1301  0909  3462               	retlw	98	;'b'
  1302  090A  342E               	retlw	46	;'.'
  1303  090B  3420               	retlw	32	;' '
  1304  090C  3459               	retlw	89	;'Y'
  1305  090D  346F               	retlw	111	;'o'
  1306  090E  3475               	retlw	117	;'u'
  1307  090F  3420               	retlw	32	;' '
  1308  0910  346B               	retlw	107	;'k'
  1309  0911  346E               	retlw	110	;'n'
  1310  0912  346F               	retlw	111	;'o'
  1311  0913  3477               	retlw	119	;'w'
  1312  0914  3420               	retlw	32	;' '
  1313  0915  3468               	retlw	104	;'h'
  1314  0916  346F               	retlw	111	;'o'
  1315  0917  3477               	retlw	119	;'w'
  1316  0918  3420               	retlw	32	;' '
  1317  0919  3474               	retlw	116	;'t'
  1318  091A  346F               	retlw	111	;'o'
  1319  091B  3420               	retlw	32	;' '
  1320  091C  3472               	retlw	114	;'r'
  1321  091D  3465               	retlw	101	;'e'
  1322  091E  3461               	retlw	97	;'a'
  1323  091F  3464               	retlw	100	;'d'
  1324  0920  3420               	retlw	32	;' '
  1325  0921  3469               	retlw	105	;'i'
  1326  0922  346E               	retlw	110	;'n'
  1327  0923  3473               	retlw	115	;'s'
  1328  0924  3474               	retlw	116	;'t'
  1329  0925  3472               	retlw	114	;'r'
  1330  0926  3475               	retlw	117	;'u'
  1331  0927  3463               	retlw	99	;'c'
  1332  0928  3474               	retlw	116	;'t'
  1333  0929  3469               	retlw	105	;'i'
  1334  092A  346F               	retlw	111	;'o'
  1335  092B  346E               	retlw	110	;'n'
  1336  092C  3473               	retlw	115	;'s'
  1337  092D  342E               	retlw	46	;'.'
  1338  092E  340A               	retlw	10
  1339  092F  340A               	retlw	10
  1340  0930  3400               	retlw	0
  1341  0931                     STR_10:	
  1342  0931  3444               	retlw	68	;'D'
  1343  0932  3469               	retlw	105	;'i'
  1344  0933  3473               	retlw	115	;'s'
  1345  0934  3470               	retlw	112	;'p'
  1346  0935  346C               	retlw	108	;'l'
  1347  0936  3461               	retlw	97	;'a'
  1348  0937  3479               	retlw	121	;'y'
  1349  0938  3465               	retlw	101	;'e'
  1350  0939  3464               	retlw	100	;'d'
  1351  093A  3420               	retlw	32	;' '
  1352  093B  3469               	retlw	105	;'i'
  1353  093C  346E               	retlw	110	;'n'
  1354  093D  3464               	retlw	100	;'d'
  1355  093E  3469               	retlw	105	;'i'
  1356  093F  3476               	retlw	118	;'v'
  1357  0940  3469               	retlw	105	;'i'
  1358  0941  3464               	retlw	100	;'d'
  1359  0942  3475               	retlw	117	;'u'
  1360  0943  3461               	retlw	97	;'a'
  1361  0944  346C               	retlw	108	;'l'
  1362  0945  3420               	retlw	32	;' '
  1363  0946  3473               	retlw	115	;'s'
  1364  0947  3477               	retlw	119	;'w'
  1365  0948  346F               	retlw	111	;'o'
  1366  0949  3472               	retlw	114	;'r'
  1367  094A  3464               	retlw	100	;'d'
  1368  094B  3420               	retlw	32	;' '
  1369  094C  3473               	retlw	115	;'s'
  1370  094D  3477               	retlw	119	;'w'
  1371  094E  3469               	retlw	105	;'i'
  1372  094F  346E               	retlw	110	;'n'
  1373  0950  3467               	retlw	103	;'g'
  1374  0951  3420               	retlw	32	;' '
  1375  0952  346C               	retlw	108	;'l'
  1376  0953  3469               	retlw	105	;'i'
  1377  0954  3467               	retlw	103	;'g'
  1378  0955  3468               	retlw	104	;'h'
  1379  0956  3474               	retlw	116	;'t'
  1380  0957  3420               	retlw	32	;' '
  1381  0958  3473               	retlw	115	;'s'
  1382  0959  3468               	retlw	104	;'h'
  1383  095A  346F               	retlw	111	;'o'
  1384  095B  3477               	retlw	119	;'w'
  1385  095C  342E               	retlw	46	;'.'
  1386  095D  340A               	retlw	10
  1387  095E  340D               	retlw	13
  1388  095F  3400               	retlw	0
  1389  0960                     STR_29:	
  1390  0960  3454               	retlw	84	;'T'
  1391  0961  3468               	retlw	104	;'h'
  1392  0962  3465               	retlw	101	;'e'
  1393  0963  3420               	retlw	32	;' '
  1394  0964  3462               	retlw	98	;'b'
  1395  0965  346C               	retlw	108	;'l'
  1396  0966  3461               	retlw	97	;'a'
  1397  0967  3464               	retlw	100	;'d'
  1398  0968  3465               	retlw	101	;'e'
  1399  0969  3420               	retlw	32	;' '
  1400  096A  3468               	retlw	104	;'h'
  1401  096B  3461               	retlw	97	;'a'
  1402  096C  3473               	retlw	115	;'s'
  1403  096D  3420               	retlw	32	;' '
  1404  096E  3462               	retlw	98	;'b'
  1405  096F  3465               	retlw	101	;'e'
  1406  0970  3465               	retlw	101	;'e'
  1407  0971  346E               	retlw	110	;'n'
  1408  0972  3420               	retlw	32	;' '
  1409  0973  3464               	retlw	100	;'d'
  1410  0974  3461               	retlw	97	;'a'
  1411  0975  346D               	retlw	109	;'m'
  1412  0976  3461               	retlw	97	;'a'
  1413  0977  3467               	retlw	103	;'g'
  1414  0978  3465               	retlw	101	;'e'
  1415  0979  3464               	retlw	100	;'d'
  1416  097A  342E               	retlw	46	;'.'
  1417  097B  3420               	retlw	32	;' '
  1418  097C  3448               	retlw	72	;'H'
  1419  097D  3465               	retlw	101	;'e'
  1420  097E  3461               	retlw	97	;'a'
  1421  097F  346C               	retlw	108	;'l'
  1422  0980  3474               	retlw	116	;'t'
  1423  0981  3468               	retlw	104	;'h'
  1424  0982  3420               	retlw	32	;' '
  1425  0983  343D               	retlw	61	;'='
  1426  0984  3420               	retlw	32	;' '
  1427  0985  3425               	retlw	37	;'%'
  1428  0986  3464               	retlw	100	;'d'
  1429  0987  342E               	retlw	46	;'.'
  1430  0988  340A               	retlw	10
  1431  0989  340D               	retlw	13
  1432  098A  3400               	retlw	0
  1433  098B                     STR_30:	
  1434  098B  3454               	retlw	84	;'T'
  1435  098C  3468               	retlw	104	;'h'
  1436  098D  3465               	retlw	101	;'e'
  1437  098E  3420               	retlw	32	;' '
  1438  098F  3462               	retlw	98	;'b'
  1439  0990  346C               	retlw	108	;'l'
  1440  0991  3461               	retlw	97	;'a'
  1441  0992  3464               	retlw	100	;'d'
  1442  0993  3465               	retlw	101	;'e'
  1443  0994  3420               	retlw	32	;' '
  1444  0995  3468               	retlw	104	;'h'
  1445  0996  3461               	retlw	97	;'a'
  1446  0997  3473               	retlw	115	;'s'
  1447  0998  3420               	retlw	32	;' '
  1448  0999  3462               	retlw	98	;'b'
  1449  099A  3465               	retlw	101	;'e'
  1450  099B  3465               	retlw	101	;'e'
  1451  099C  346E               	retlw	110	;'n'
  1452  099D  3420               	retlw	32	;' '
  1453  099E  3468               	retlw	104	;'h'
  1454  099F  3465               	retlw	101	;'e'
  1455  09A0  3461               	retlw	97	;'a'
  1456  09A1  346C               	retlw	108	;'l'
  1457  09A2  3465               	retlw	101	;'e'
  1458  09A3  3464               	retlw	100	;'d'
  1459  09A4  342E               	retlw	46	;'.'
  1460  09A5  3420               	retlw	32	;' '
  1461  09A6  3448               	retlw	72	;'H'
  1462  09A7  3465               	retlw	101	;'e'
  1463  09A8  3461               	retlw	97	;'a'
  1464  09A9  346C               	retlw	108	;'l'
  1465  09AA  3474               	retlw	116	;'t'
  1466  09AB  3468               	retlw	104	;'h'
  1467  09AC  3420               	retlw	32	;' '
  1468  09AD  343D               	retlw	61	;'='
  1469  09AE  3420               	retlw	32	;' '
  1470  09AF  3425               	retlw	37	;'%'
  1471  09B0  3464               	retlw	100	;'d'
  1472  09B1  342E               	retlw	46	;'.'
  1473  09B2  340A               	retlw	10
  1474  09B3  340D               	retlw	13
  1475  09B4  3400               	retlw	0
  1476  09B5                     STR_11:	
  1477  09B5  3444               	retlw	68	;'D'
  1478  09B6  3469               	retlw	105	;'i'
  1479  09B7  3473               	retlw	115	;'s'
  1480  09B8  3470               	retlw	112	;'p'
  1481  09B9  346C               	retlw	108	;'l'
  1482  09BA  3461               	retlw	97	;'a'
  1483  09BB  3479               	retlw	121	;'y'
  1484  09BC  3465               	retlw	101	;'e'
  1485  09BD  3464               	retlw	100	;'d'
  1486  09BE  3420               	retlw	32	;' '
  1487  09BF  344F               	retlw	79	;'O'
  1488  09C0  346D               	retlw	109	;'m'
  1489  09C1  3465               	retlw	101	;'e'
  1490  09C2  3467               	retlw	103	;'g'
  1491  09C3  3461               	retlw	97	;'a'
  1492  09C4  3420               	retlw	32	;' '
  1493  09C5  3462               	retlw	98	;'b'
  1494  09C6  346C               	retlw	108	;'l'
  1495  09C7  3461               	retlw	97	;'a'
  1496  09C8  3464               	retlw	100	;'d'
  1497  09C9  3465               	retlw	101	;'e'
  1498  09CA  3420               	retlw	32	;' '
  1499  09CB  3473               	retlw	115	;'s'
  1500  09CC  3477               	retlw	119	;'w'
  1501  09CD  3469               	retlw	105	;'i'
  1502  09CE  346E               	retlw	110	;'n'
  1503  09CF  3467               	retlw	103	;'g'
  1504  09D0  3420               	retlw	32	;' '
  1505  09D1  346C               	retlw	108	;'l'
  1506  09D2  3469               	retlw	105	;'i'
  1507  09D3  3467               	retlw	103	;'g'
  1508  09D4  3468               	retlw	104	;'h'
  1509  09D5  3474               	retlw	116	;'t'
  1510  09D6  3420               	retlw	32	;' '
  1511  09D7  3473               	retlw	115	;'s'
  1512  09D8  3468               	retlw	104	;'h'
  1513  09D9  346F               	retlw	111	;'o'
  1514  09DA  3477               	retlw	119	;'w'
  1515  09DB  342E               	retlw	46	;'.'
  1516  09DC  340A               	retlw	10
  1517  09DD  340D               	retlw	13
  1518  09DE  3400               	retlw	0
  1519  09DF                     STR_21:	
  1520  09DF  3441               	retlw	65	;'A'
  1521  09E0  3472               	retlw	114	;'r'
  1522  09E1  3465               	retlw	101	;'e'
  1523  09E2  3420               	retlw	32	;' '
  1524  09E3  3474               	retlw	116	;'t'
  1525  09E4  3468               	retlw	104	;'h'
  1526  09E5  3465               	retlw	101	;'e'
  1527  09E6  3420               	retlw	32	;' '
  1528  09E7  3462               	retlw	98	;'b'
  1529  09E8  346C               	retlw	108	;'l'
  1530  09E9  3461               	retlw	97	;'a'
  1531  09EA  3464               	retlw	100	;'d'
  1532  09EB  3465               	retlw	101	;'e'
  1533  09EC  3473               	retlw	115	;'s'
  1534  09ED  3420               	retlw	32	;' '
  1535  09EE  3469               	retlw	105	;'i'
  1536  09EF  346E               	retlw	110	;'n'
  1537  09F0  3420               	retlw	32	;' '
  1538  09F1  346F               	retlw	111	;'o'
  1539  09F2  346D               	retlw	109	;'m'
  1540  09F3  3465               	retlw	101	;'e'
  1541  09F4  3467               	retlw	103	;'g'
  1542  09F5  3461               	retlw	97	;'a'
  1543  09F6  3420               	retlw	32	;' '
  1544  09F7  346D               	retlw	109	;'m'
  1545  09F8  346F               	retlw	111	;'o'
  1546  09F9  3464               	retlw	100	;'d'
  1547  09FA  3465               	retlw	101	;'e'
  1548  09FB  343F               	retlw	63	;'?'
  1549  09FC  3420               	retlw	32	;' '
  1550  09FD  3428               	retlw	40	;'('
  1551  09FE  3479               	retlw	121	;'y'
  1552  09FF  342F               	retlw	47	;'/'
  1553  0A00  346E               	retlw	110	;'n'
  1554  0A01  3429               	retlw	41	;')'
  1555  0A02  340A               	retlw	10
  1556  0A03  340D               	retlw	13
  1557  0A04  3400               	retlw	0
  1558  0A05                     STR_15:	
  1559  0A05  3442               	retlw	66	;'B'
  1560  0A06  3465               	retlw	101	;'e'
  1561  0A07  3474               	retlw	116	;'t'
  1562  0A08  3461               	retlw	97	;'a'
  1563  0A09  342C               	retlw	44	;','
  1564  0A0A  3420               	retlw	32	;' '
  1565  0A0B  3464               	retlw	100	;'d'
  1566  0A0C  3420               	retlw	32	;' '
  1567  0A0D  3466               	retlw	102	;'f'
  1568  0A0E  346F               	retlw	111	;'o'
  1569  0A0F  3472               	retlw	114	;'r'
  1570  0A10  3420               	retlw	32	;' '
  1571  0A11  3444               	retlw	68	;'D'
  1572  0A12  3465               	retlw	101	;'e'
  1573  0A13  346C               	retlw	108	;'l'
  1574  0A14  3474               	retlw	116	;'t'
  1575  0A15  3461               	retlw	97	;'a'
  1576  0A16  342C               	retlw	44	;','
  1577  0A17  3420               	retlw	32	;' '
  1578  0A18  346F               	retlw	111	;'o'
  1579  0A19  3472               	retlw	114	;'r'
  1580  0A1A  3420               	retlw	32	;' '
  1581  0A1B  3467               	retlw	103	;'g'
  1582  0A1C  3420               	retlw	32	;' '
  1583  0A1D  3466               	retlw	102	;'f'
  1584  0A1E  346F               	retlw	111	;'o'
  1585  0A1F  3472               	retlw	114	;'r'
  1586  0A20  3420               	retlw	32	;' '
  1587  0A21  3447               	retlw	71	;'G'
  1588  0A22  3461               	retlw	97	;'a'
  1589  0A23  346D               	retlw	109	;'m'
  1590  0A24  346D               	retlw	109	;'m'
  1591  0A25  3461               	retlw	97	;'a'
  1592  0A26  342E               	retlw	46	;'.'
  1593  0A27  340A               	retlw	10
  1594  0A28  340D               	retlw	13
  1595  0A29  3400               	retlw	0
  1596  0A2A                     STR_27:	
  1597  0A2A  3450               	retlw	80	;'P'
  1598  0A2B  3472               	retlw	114	;'r'
  1599  0A2C  3465               	retlw	101	;'e'
  1600  0A2D  3473               	retlw	115	;'s'
  1601  0A2E  3473               	retlw	115	;'s'
  1602  0A2F  3420               	retlw	32	;' '
  1603  0A30  3427               	retlw	39	;'''
  1604  0A31  346F               	retlw	111	;'o'
  1605  0A32  3427               	retlw	39	;'''
  1606  0A33  3420               	retlw	32	;' '
  1607  0A34  3474               	retlw	116	;'t'
  1608  0A35  346F               	retlw	111	;'o'
  1609  0A36  3420               	retlw	32	;' '
  1610  0A37  3474               	retlw	116	;'t'
  1611  0A38  346F               	retlw	111	;'o'
  1612  0A39  3467               	retlw	103	;'g'
  1613  0A3A  3467               	retlw	103	;'g'
  1614  0A3B  346C               	retlw	108	;'l'
  1615  0A3C  3465               	retlw	101	;'e'
  1616  0A3D  3420               	retlw	32	;' '
  1617  0A3E  344F               	retlw	79	;'O'
  1618  0A3F  346D               	retlw	109	;'m'
  1619  0A40  3465               	retlw	101	;'e'
  1620  0A41  3467               	retlw	103	;'g'
  1621  0A42  3461               	retlw	97	;'a'
  1622  0A43  3420               	retlw	32	;' '
  1623  0A44  346D               	retlw	109	;'m'
  1624  0A45  346F               	retlw	111	;'o'
  1625  0A46  3464               	retlw	100	;'d'
  1626  0A47  3465               	retlw	101	;'e'
  1627  0A48  342E               	retlw	46	;'.'
  1628  0A49  340A               	retlw	10
  1629  0A4A  340D               	retlw	13
  1630  0A4B  340A               	retlw	10
  1631  0A4C  340D               	retlw	13
  1632  0A4D  3400               	retlw	0
  1633  0A4E                     STR_1:	
  1634  0A4E  3449               	retlw	73	;'I'
  1635  0A4F  346E               	retlw	110	;'n'
  1636  0A50  3469               	retlw	105	;'i'
  1637  0A51  3474               	retlw	116	;'t'
  1638  0A52  3469               	retlw	105	;'i'
  1639  0A53  3461               	retlw	97	;'a'
  1640  0A54  346C               	retlw	108	;'l'
  1641  0A55  3469               	retlw	105	;'i'
  1642  0A56  347A               	retlw	122	;'z'
  1643  0A57  3465               	retlw	101	;'e'
  1644  0A58  3464               	retlw	100	;'d'
  1645  0A59  3420               	retlw	32	;' '
  1646  0A5A  3449               	retlw	73	;'I'
  1647  0A5B  3452               	retlw	82	;'R'
  1648  0A5C  3420               	retlw	32	;' '
  1649  0A5D  3473               	retlw	115	;'s'
  1650  0A5E  3465               	retlw	101	;'e'
  1651  0A5F  346E               	retlw	110	;'n'
  1652  0A60  3464               	retlw	100	;'d'
  1653  0A61  342F               	retlw	47	;'/'
  1654  0A62  3472               	retlw	114	;'r'
  1655  0A63  3465               	retlw	101	;'e'
  1656  0A64  3463               	retlw	99	;'c'
  1657  0A65  3465               	retlw	101	;'e'
  1658  0A66  3469               	retlw	105	;'i'
  1659  0A67  3476               	retlw	118	;'v'
  1660  0A68  3465               	retlw	101	;'e'
  1661  0A69  3420               	retlw	32	;' '
  1662  0A6A  3463               	retlw	99	;'c'
  1663  0A6B  346F               	retlw	111	;'o'
  1664  0A6C  3464               	retlw	100	;'d'
  1665  0A6D  3465               	retlw	101	;'e'
  1666  0A6E  342E               	retlw	46	;'.'
  1667  0A6F  340A               	retlw	10
  1668  0A70  340D               	retlw	13
  1669  0A71  3400               	retlw	0
  1670  0A72                     STR_7:	
  1671  0A72  3450               	retlw	80	;'P'
  1672  0A73  346C               	retlw	108	;'l'
  1673  0A74  3461               	retlw	97	;'a'
  1674  0A75  3479               	retlw	121	;'y'
  1675  0A76  3465               	retlw	101	;'e'
  1676  0A77  3464               	retlw	100	;'d'
  1677  0A78  3420               	retlw	32	;' '
  1678  0A79  344F               	retlw	79	;'O'
  1679  0A7A  346D               	retlw	109	;'m'
  1680  0A7B  3465               	retlw	101	;'e'
  1681  0A7C  3467               	retlw	103	;'g'
  1682  0A7D  3461               	retlw	97	;'a'
  1683  0A7E  3420               	retlw	32	;' '
  1684  0A7F  3462               	retlw	98	;'b'
  1685  0A80  346C               	retlw	108	;'l'
  1686  0A81  3461               	retlw	97	;'a'
  1687  0A82  3464               	retlw	100	;'d'
  1688  0A83  3465               	retlw	101	;'e'
  1689  0A84  3420               	retlw	32	;' '
  1690  0A85  3473               	retlw	115	;'s'
  1691  0A86  3477               	retlw	119	;'w'
  1692  0A87  3469               	retlw	105	;'i'
  1693  0A88  346E               	retlw	110	;'n'
  1694  0A89  3467               	retlw	103	;'g'
  1695  0A8A  3420               	retlw	32	;' '
  1696  0A8B  3473               	retlw	115	;'s'
  1697  0A8C  346F               	retlw	111	;'o'
  1698  0A8D  3475               	retlw	117	;'u'
  1699  0A8E  346E               	retlw	110	;'n'
  1700  0A8F  3464               	retlw	100	;'d'
  1701  0A90  342E               	retlw	46	;'.'
  1702  0A91  340A               	retlw	10
  1703  0A92  340D               	retlw	13
  1704  0A93  3400               	retlw	0
  1705  0A94                     STR_6:	
  1706  0A94  3450               	retlw	80	;'P'
  1707  0A95  346C               	retlw	108	;'l'
  1708  0A96  3461               	retlw	97	;'a'
  1709  0A97  3479               	retlw	121	;'y'
  1710  0A98  3465               	retlw	101	;'e'
  1711  0A99  3464               	retlw	100	;'d'
  1712  0A9A  3420               	retlw	32	;' '
  1713  0A9B  3442               	retlw	66	;'B'
  1714  0A9C  3465               	retlw	101	;'e'
  1715  0A9D  3474               	retlw	116	;'t'
  1716  0A9E  3461               	retlw	97	;'a'
  1717  0A9F  3420               	retlw	32	;' '
  1718  0AA0  3462               	retlw	98	;'b'
  1719  0AA1  346C               	retlw	108	;'l'
  1720  0AA2  3461               	retlw	97	;'a'
  1721  0AA3  3464               	retlw	100	;'d'
  1722  0AA4  3465               	retlw	101	;'e'
  1723  0AA5  3420               	retlw	32	;' '
  1724  0AA6  3473               	retlw	115	;'s'
  1725  0AA7  3477               	retlw	119	;'w'
  1726  0AA8  3469               	retlw	105	;'i'
  1727  0AA9  346E               	retlw	110	;'n'
  1728  0AAA  3467               	retlw	103	;'g'
  1729  0AAB  3420               	retlw	32	;' '
  1730  0AAC  3473               	retlw	115	;'s'
  1731  0AAD  346F               	retlw	111	;'o'
  1732  0AAE  3475               	retlw	117	;'u'
  1733  0AAF  346E               	retlw	110	;'n'
  1734  0AB0  3464               	retlw	100	;'d'
  1735  0AB1  342E               	retlw	46	;'.'
  1736  0AB2  340A               	retlw	10
  1737  0AB3  340D               	retlw	13
  1738  0AB4  3400               	retlw	0
  1739  0AB5                     STR_51:	
  1740  0AB5  3450               	retlw	80	;'P'
  1741  0AB6  346C               	retlw	108	;'l'
  1742  0AB7  3465               	retlw	101	;'e'
  1743  0AB8  3461               	retlw	97	;'a'
  1744  0AB9  3473               	retlw	115	;'s'
  1745  0ABA  3465               	retlw	101	;'e'
  1746  0ABB  3420               	retlw	32	;' '
  1747  0ABC  3465               	retlw	101	;'e'
  1748  0ABD  346E               	retlw	110	;'n'
  1749  0ABE  3474               	retlw	116	;'t'
  1750  0ABF  3465               	retlw	101	;'e'
  1751  0AC0  3472               	retlw	114	;'r'
  1752  0AC1  3420               	retlw	32	;' '
  1753  0AC2  3474               	retlw	116	;'t'
  1754  0AC3  3468               	retlw	104	;'h'
  1755  0AC4  3465               	retlw	101	;'e'
  1756  0AC5  3420               	retlw	32	;' '
  1757  0AC6  3463               	retlw	99	;'c'
  1758  0AC7  3468               	retlw	104	;'h'
  1759  0AC8  3461               	retlw	97	;'a'
  1760  0AC9  3472               	retlw	114	;'r'
  1761  0ACA  3461               	retlw	97	;'a'
  1762  0ACB  3463               	retlw	99	;'c'
  1763  0ACC  3474               	retlw	116	;'t'
  1764  0ACD  3465               	retlw	101	;'e'
  1765  0ACE  3472               	retlw	114	;'r'
  1766  0ACF  3420               	retlw	32	;' '
  1767  0AD0  3441               	retlw	65	;'A'
  1768  0AD1  343A               	retlw	58	;':'
  1769  0AD2  3420               	retlw	32	;' '
  1770  0AD3  3400               	retlw	0
  1771  0AD4                     STR_31:	
  1772  0AD4  3454               	retlw	84	;'T'
  1773  0AD5  3468               	retlw	104	;'h'
  1774  0AD6  3465               	retlw	101	;'e'
  1775  0AD7  3420               	retlw	32	;' '
  1776  0AD8  3462               	retlw	98	;'b'
  1777  0AD9  346C               	retlw	108	;'l'
  1778  0ADA  3461               	retlw	97	;'a'
  1779  0ADB  3464               	retlw	100	;'d'
  1780  0ADC  3465               	retlw	101	;'e'
  1781  0ADD  3420               	retlw	32	;' '
  1782  0ADE  3468               	retlw	104	;'h'
  1783  0ADF  3461               	retlw	97	;'a'
  1784  0AE0  3473               	retlw	115	;'s'
  1785  0AE1  3420               	retlw	32	;' '
  1786  0AE2  3462               	retlw	98	;'b'
  1787  0AE3  3465               	retlw	101	;'e'
  1788  0AE4  3465               	retlw	101	;'e'
  1789  0AE5  346E               	retlw	110	;'n'
  1790  0AE6  3420               	retlw	32	;' '
  1791  0AE7  3473               	retlw	115	;'s'
  1792  0AE8  3474               	retlw	116	;'t'
  1793  0AE9  3475               	retlw	117	;'u'
  1794  0AEA  346E               	retlw	110	;'n'
  1795  0AEB  346E               	retlw	110	;'n'
  1796  0AEC  3465               	retlw	101	;'e'
  1797  0AED  3464               	retlw	100	;'d'
  1798  0AEE  342E               	retlw	46	;'.'
  1799  0AEF  340A               	retlw	10
  1800  0AF0  340D               	retlw	13
  1801  0AF1  3400               	retlw	0
  1802  0AF2                     STR_8:	
  1803  0AF2  3449               	retlw	73	;'I'
  1804  0AF3  346E               	retlw	110	;'n'
  1805  0AF4  3469               	retlw	105	;'i'
  1806  0AF5  3474               	retlw	116	;'t'
  1807  0AF6  3469               	retlw	105	;'i'
  1808  0AF7  3461               	retlw	97	;'a'
  1809  0AF8  346C               	retlw	108	;'l'
  1810  0AF9  3469               	retlw	105	;'i'
  1811  0AFA  347A               	retlw	122	;'z'
  1812  0AFB  3465               	retlw	101	;'e'
  1813  0AFC  3464               	retlw	100	;'d'
  1814  0AFD  3420               	retlw	32	;' '
  1815  0AFE  3461               	retlw	97	;'a'
  1816  0AFF  3463               	retlw	99	;'c'
  1817  0B00  3463               	retlw	99	;'c'
  1818  0B01  3465               	retlw	101	;'e'
  1819  0B02  346C               	retlw	108	;'l'
  1820  0B03  3465               	retlw	101	;'e'
  1821  0B04  3472               	retlw	114	;'r'
  1822  0B05  346F               	retlw	111	;'o'
  1823  0B06  346D               	retlw	109	;'m'
  1824  0B07  3465               	retlw	101	;'e'
  1825  0B08  3474               	retlw	116	;'t'
  1826  0B09  3465               	retlw	101	;'e'
  1827  0B0A  3472               	retlw	114	;'r'
  1828  0B0B  342E               	retlw	46	;'.'
  1829  0B0C  340A               	retlw	10
  1830  0B0D  340D               	retlw	13
  1831  0B0E  3400               	retlw	0
  1832  0B0F                     STR_20:	
  1833  0B0F  3449               	retlw	73	;'I'
  1834  0B10  346E               	retlw	110	;'n'
  1835  0B11  3476               	retlw	118	;'v'
  1836  0B12  3461               	retlw	97	;'a'
  1837  0B13  346C               	retlw	108	;'l'
  1838  0B14  3469               	retlw	105	;'i'
  1839  0B15  3464               	retlw	100	;'d'
  1840  0B16  3420               	retlw	32	;' '
  1841  0B17  3469               	retlw	105	;'i'
  1842  0B18  346E               	retlw	110	;'n'
  1843  0B19  3470               	retlw	112	;'p'
  1844  0B1A  3475               	retlw	117	;'u'
  1845  0B1B  3474               	retlw	116	;'t'
  1846  0B1C  342E               	retlw	46	;'.'
  1847  0B1D  3420               	retlw	32	;' '
  1848  0B1E  3454               	retlw	84	;'T'
  1849  0B1F  3472               	retlw	114	;'r'
  1850  0B20  3479               	retlw	121	;'y'
  1851  0B21  3420               	retlw	32	;' '
  1852  0B22  3461               	retlw	97	;'a'
  1853  0B23  3467               	retlw	103	;'g'
  1854  0B24  3461               	retlw	97	;'a'
  1855  0B25  3469               	retlw	105	;'i'
  1856  0B26  346E               	retlw	110	;'n'
  1857  0B27  342E               	retlw	46	;'.'
  1858  0B28  340A               	retlw	10
  1859  0B29  340D               	retlw	13
  1860  0B2A  3400               	retlw	0
  1861  0B2B                     STR_53:	
  1862  0B2B  340A               	retlw	10
  1863  0B2C  340D               	retlw	13
  1864  0B2D  3457               	retlw	87	;'W'
  1865  0B2E  3472               	retlw	114	;'r'
  1866  0B2F  346F               	retlw	111	;'o'
  1867  0B30  346E               	retlw	110	;'n'
  1868  0B31  3467               	retlw	103	;'g'
  1869  0B32  3420               	retlw	32	;' '
  1870  0B33  346B               	retlw	107	;'k'
  1871  0B34  3465               	retlw	101	;'e'
  1872  0B35  3479               	retlw	121	;'y'
  1873  0B36  342E               	retlw	46	;'.'
  1874  0B37  3420               	retlw	32	;' '
  1875  0B38  3454               	retlw	84	;'T'
  1876  0B39  3472               	retlw	114	;'r'
  1877  0B3A  3479               	retlw	121	;'y'
  1878  0B3B  3420               	retlw	32	;' '
  1879  0B3C  3461               	retlw	97	;'a'
  1880  0B3D  3467               	retlw	103	;'g'
  1881  0B3E  3461               	retlw	97	;'a'
  1882  0B3F  3469               	retlw	105	;'i'
  1883  0B40  346E               	retlw	110	;'n'
  1884  0B41  342E               	retlw	46	;'.'
  1885  0B42  340A               	retlw	10
  1886  0B43  340D               	retlw	13
  1887  0B44  3400               	retlw	0
  1888  0B45                     STR_50:	
  1889  0B45  340A               	retlw	10
  1890  0B46  340D               	retlw	13
  1891  0B47  344D               	retlw	77	;'M'
  1892  0B48  3461               	retlw	97	;'a'
  1893  0B49  3469               	retlw	105	;'i'
  1894  0B4A  346E               	retlw	110	;'n'
  1895  0B4B  3420               	retlw	32	;' '
  1896  0B4C  344C               	retlw	76	;'L'
  1897  0B4D  346F               	retlw	111	;'o'
  1898  0B4E  346F               	retlw	111	;'o'
  1899  0B4F  3470               	retlw	112	;'p'
  1900  0B50  3420               	retlw	32	;' '
  1901  0B51  3449               	retlw	73	;'I'
  1902  0B52  346E               	retlw	110	;'n'
  1903  0B53  3464               	retlw	100	;'d'
  1904  0B54  3469               	retlw	105	;'i'
  1905  0B55  3476               	retlw	118	;'v'
  1906  0B56  3469               	retlw	105	;'i'
  1907  0B57  3464               	retlw	100	;'d'
  1908  0B58  3475               	retlw	117	;'u'
  1909  0B59  3461               	retlw	97	;'a'
  1910  0B5A  346C               	retlw	108	;'l'
  1911  0B5B  340A               	retlw	10
  1912  0B5C  340D               	retlw	13
  1913  0B5D  3400               	retlw	0
  1914  0B5E                     STR_33:	
  1915  0B5E  344F               	retlw	79	;'O'
  1916  0B5F  346D               	retlw	109	;'m'
  1917  0B60  3465               	retlw	101	;'e'
  1918  0B61  3467               	retlw	103	;'g'
  1919  0B62  3461               	retlw	97	;'a'
  1920  0B63  3420               	retlw	32	;' '
  1921  0B64  346D               	retlw	109	;'m'
  1922  0B65  346F               	retlw	111	;'o'
  1923  0B66  3464               	retlw	100	;'d'
  1924  0B67  3465               	retlw	101	;'e'
  1925  0B68  3420               	retlw	32	;' '
  1926  0B69  3464               	retlw	100	;'d'
  1927  0B6A  3469               	retlw	105	;'i'
  1928  0B6B  3473               	retlw	115	;'s'
  1929  0B6C  3461               	retlw	97	;'a'
  1930  0B6D  3462               	retlw	98	;'b'
  1931  0B6E  346C               	retlw	108	;'l'
  1932  0B6F  3465               	retlw	101	;'e'
  1933  0B70  3464               	retlw	100	;'d'
  1934  0B71  342E               	retlw	46	;'.'
  1935  0B72  340A               	retlw	10
  1936  0B73  340D               	retlw	13
  1937  0B74  3400               	retlw	0
  1938  0B75                     STR_32:	
  1939  0B75  344F               	retlw	79	;'O'
  1940  0B76  346D               	retlw	109	;'m'
  1941  0B77  3465               	retlw	101	;'e'
  1942  0B78  3467               	retlw	103	;'g'
  1943  0B79  3461               	retlw	97	;'a'
  1944  0B7A  3420               	retlw	32	;' '
  1945  0B7B  346D               	retlw	109	;'m'
  1946  0B7C  346F               	retlw	111	;'o'
  1947  0B7D  3464               	retlw	100	;'d'
  1948  0B7E  3465               	retlw	101	;'e'
  1949  0B7F  3420               	retlw	32	;' '
  1950  0B80  3465               	retlw	101	;'e'
  1951  0B81  346E               	retlw	110	;'n'
  1952  0B82  3461               	retlw	97	;'a'
  1953  0B83  3462               	retlw	98	;'b'
  1954  0B84  346C               	retlw	108	;'l'
  1955  0B85  3465               	retlw	101	;'e'
  1956  0B86  3464               	retlw	100	;'d'
  1957  0B87  342E               	retlw	46	;'.'
  1958  0B88  340A               	retlw	10
  1959  0B89  340D               	retlw	13
  1960  0B8A  3400               	retlw	0
  1961  0B8B                     STR_9:	
  1962  0B8B  3449               	retlw	73	;'I'
  1963  0B8C  346E               	retlw	110	;'n'
  1964  0B8D  3469               	retlw	105	;'i'
  1965  0B8E  3474               	retlw	116	;'t'
  1966  0B8F  3469               	retlw	105	;'i'
  1967  0B90  3461               	retlw	97	;'a'
  1968  0B91  346C               	retlw	108	;'l'
  1969  0B92  3469               	retlw	105	;'i'
  1970  0B93  347A               	retlw	122	;'z'
  1971  0B94  3465               	retlw	101	;'e'
  1972  0B95  3464               	retlw	100	;'d'
  1973  0B96  3420               	retlw	32	;' '
  1974  0B97  344C               	retlw	76	;'L'
  1975  0B98  3445               	retlw	69	;'E'
  1976  0B99  3444               	retlw	68	;'D'
  1977  0B9A  3473               	retlw	115	;'s'
  1978  0B9B  342E               	retlw	46	;'.'
  1979  0B9C  340A               	retlw	10
  1980  0B9D  340D               	retlw	13
  1981  0B9E  3400               	retlw	0
  1982  0B9F                     STR_12:	
  1983  0B9F  3449               	retlw	73	;'I'
  1984  0BA0  346E               	retlw	110	;'n'
  1985  0BA1  3469               	retlw	105	;'i'
  1986  0BA2  3474               	retlw	116	;'t'
  1987  0BA3  3469               	retlw	105	;'i'
  1988  0BA4  3461               	retlw	97	;'a'
  1989  0BA5  346C               	retlw	108	;'l'
  1990  0BA6  3469               	retlw	105	;'i'
  1991  0BA7  347A               	retlw	122	;'z'
  1992  0BA8  3465               	retlw	101	;'e'
  1993  0BA9  3464               	retlw	100	;'d'
  1994  0BAA  3420               	retlw	32	;' '
  1995  0BAB  3449               	retlw	73	;'I'
  1996  0BAC  3453               	retlw	83	;'S'
  1997  0BAD  3452               	retlw	82	;'R'
  1998  0BAE  342E               	retlw	46	;'.'
  1999  0BAF  340A               	retlw	10
  2000  0BB0  340D               	retlw	13
  2001  0BB1  3400               	retlw	0
  2002  0BB2                     STR_28:	
  2003  0BB2  3453               	retlw	83	;'S'
  2004  0BB3  3477               	retlw	119	;'w'
  2005  0BB4  346F               	retlw	111	;'o'
  2006  0BB5  3472               	retlw	114	;'r'
  2007  0BB6  3464               	retlw	100	;'d'
  2008  0BB7  3420               	retlw	32	;' '
  2009  0BB8  3477               	retlw	119	;'w'
  2010  0BB9  3461               	retlw	97	;'a'
  2011  0BBA  3473               	retlw	115	;'s'
  2012  0BBB  3420               	retlw	32	;' '
  2013  0BBC  3473               	retlw	115	;'s'
  2014  0BBD  3477               	retlw	119	;'w'
  2015  0BBE  3475               	retlw	117	;'u'
  2016  0BBF  346E               	retlw	110	;'n'
  2017  0BC0  3467               	retlw	103	;'g'
  2018  0BC1  340A               	retlw	10
  2019  0BC2  340D               	retlw	13
  2020  0BC3  3400               	retlw	0
  2021  0BC4                     STR_3:	
  2022  0BC4  3464               	retlw	100	;'d'
  2023  0BC5  3461               	retlw	97	;'a'
  2024  0BC6  346D               	retlw	109	;'m'
  2025  0BC7  3461               	retlw	97	;'a'
  2026  0BC8  3467               	retlw	103	;'g'
  2027  0BC9  3465               	retlw	101	;'e'
  2028  0BCA  342E               	retlw	46	;'.'
  2029  0BCB  340A               	retlw	10
  2030  0BCC  340D               	retlw	13
  2031  0BCD  3400               	retlw	0
  2032  0BCE                     STR_4:	
  2033  0BCE  3468               	retlw	104	;'h'
  2034  0BCF  3465               	retlw	101	;'e'
  2035  0BD0  3461               	retlw	97	;'a'
  2036  0BD1  346C               	retlw	108	;'l'
  2037  0BD2  3474               	retlw	116	;'t'
  2038  0BD3  3468               	retlw	104	;'h'
  2039  0BD4  342E               	retlw	46	;'.'
  2040  0BD5  340A               	retlw	10
  2041  0BD6  340D               	retlw	13
  2042  0BD7  3400               	retlw	0
  2043  0BD8                     STR_2:	
  2044  0BD8  3453               	retlw	83	;'S'
  2045  0BD9  3465               	retlw	101	;'e'
  2046  0BDA  346E               	retlw	110	;'n'
  2047  0BDB  3474               	retlw	116	;'t'
  2048  0BDC  3420               	retlw	32	;' '
  2049  0BDD  3425               	retlw	37	;'%'
  2050  0BDE  3464               	retlw	100	;'d'
  2051  0BDF  3420               	retlw	32	;' '
  2052  0BE0  3400               	retlw	0
  2053  0BE1                     STR_5:	
  2054  0BE1  3473               	retlw	115	;'s'
  2055  0BE2  3474               	retlw	116	;'t'
  2056  0BE3  3475               	retlw	117	;'u'
  2057  0BE4  346E               	retlw	110	;'n'
  2058  0BE5  342E               	retlw	46	;'.'
  2059  0BE6  340A               	retlw	10
  2060  0BE7  340D               	retlw	13
  2061  0BE8  3400               	retlw	0
  2062  0BE9                     STR_16:	
  2063  0BE9  3431               	retlw	49	;'1'
  2064  0BEA  340A               	retlw	10
  2065  0BEB  340D               	retlw	13
  2066  0BEC  3400               	retlw	0
  2067  0BED                     STR_17:	
  2068  0BED  3432               	retlw	50	;'2'
  2069  0BEE  340A               	retlw	10
  2070  0BEF  340D               	retlw	13
  2071  0BF0  3400               	retlw	0
  2072  0BF1                     STR_18:	
  2073  0BF1  3433               	retlw	51	;'3'
  2074  0BF2  340A               	retlw	10
  2075  0BF3  340D               	retlw	13
  2076  0BF4  3400               	retlw	0
  2077  0BF5                     STR_19:	
  2078  0BF5  3434               	retlw	52	;'4'
  2079  0BF6  340A               	retlw	10
  2080  0BF7  340D               	retlw	13
  2081  0BF8  3400               	retlw	0
  2082  0BF9                     STR_23:	
  2083  0BF9  346E               	retlw	110	;'n'
  2084  0BFA  340A               	retlw	10
  2085  0BFB  340D               	retlw	13
  2086  0BFC  3400               	retlw	0
  2087  0BFD                     STR_22:	
  2088  0BFD  3479               	retlw	121	;'y'
  2089  0BFE  340A               	retlw	10
  2090  0BFF  340D               	retlw	13
  2091  0C00  3400               	retlw	0
  2092  0A4B                     
  2093                           ; #config settings
  2094  0000                     
  2095                           	psect	cinit
  2096  07F4                     start_initialization:	
  2097  07F4                     __initialization:	
  2098                           
  2099                           ; Clear objects allocated to BANK0
  2100  07F4  01BA               	clrf	__pbssBANK0& (0+127)
  2101  07F5  01BB               	clrf	(__pbssBANK0+1)& (0+127)
  2102  07F6  01BC               	clrf	(__pbssBANK0+2)& (0+127)
  2103  07F7  01BD               	clrf	(__pbssBANK0+3)& (0+127)
  2104  07F8  01BE               	clrf	(__pbssBANK0+4)& (0+127)
  2105  07F9  01BF               	clrf	(__pbssBANK0+5)& (0+127)
  2106                           
  2107                           ; Initialize objects allocated to BANK0
  2108  07FA  3182  221D         	fcall	__pidataBANK0	;fetch initializer
  2109  07FC  00C0               	movwf	__pdataBANK0& (0+127)
  2110  07FD                     end_of_initialization:	
  2111                           ;End of C runtime variable initialization code
  2112                           
  2113  07FD                     __end_of__initialization:	
  2114  07FD  0020               	movlb	0
  2115  07FE  3184  2C0B         	ljmp	_main	;jump to C main() function
  2116                           
  2117                           	psect	bssBANK0
  2118  003A                     __pbssBANK0:	
  2119  003A                     main@F7230:	
  2120  003A                     	ds	3
  2121  003D                     _blade:	
  2122  003D                     	ds	1
  2123  003E                     _omega_mode:	
  2124  003E                     	ds	1
  2125  003F                     _stun_counter:	
  2126  003F                     	ds	1
  2127                           
  2128                           	psect	dataBANK0
  2129  0040                     __pdataBANK0:	
  2130  0040                     _health:	
  2131  0040                     	ds	1
  2132                           
  2133                           	psect	cstackCOMMON
  2134  0070                     __pcstackCOMMON:	
  2135  0070                     ??_getch:	
  2136  0070                     ?_init_pic:	
  2137                           ; 0 bytes @ 0x0
  2138                           
  2139  0070                     ??_init_pic:	
  2140                           ; 0 bytes @ 0x0
  2141                           
  2142  0070                     ?_init_uart:	
  2143                           ; 0 bytes @ 0x0
  2144                           
  2145  0070                     ??_init_uart:	
  2146                           ; 0 bytes @ 0x0
  2147                           
  2148  0070                     ??_waitch:	
  2149                           ; 0 bytes @ 0x0
  2150                           
  2151  0070                     ?_init_ir:	
  2152                           ; 0 bytes @ 0x0
  2153                           
  2154  0070                     ?_play_sound:	
  2155                           ; 0 bytes @ 0x0
  2156                           
  2157  0070                     ?_init_accel:	
  2158                           ; 0 bytes @ 0x0
  2159                           
  2160  0070                     ??_determine_omega_mode_active:	
  2161                           ; 0 bytes @ 0x0
  2162                           
  2163  0070                     ?_determine_packets_to_send:	
  2164                           ; 0 bytes @ 0x0
  2165                           
  2166  0070                     ??_determine_packets_to_send:	
  2167                           ; 0 bytes @ 0x0
  2168                           
  2169  0070                     ?_init_leds:	
  2170                           ; 0 bytes @ 0x0
  2171                           
  2172  0070                     ?_display_blade_lights:	
  2173                           ; 0 bytes @ 0x0
  2174                           
  2175  0070                     ?_init_isr:	
  2176                           ; 0 bytes @ 0x0
  2177                           
  2178  0070                     ?_putch:	
  2179                           ; 0 bytes @ 0x0
  2180                           
  2181  0070                     ??_putch:	
  2182                           ; 0 bytes @ 0x0
  2183                           
  2184  0070                     ?_getch:	
  2185                           ; 0 bytes @ 0x0
  2186                           
  2187  0070                     ?_waitch:	
  2188                           ; 1 bytes @ 0x0
  2189                           
  2190  0070                     ?_determine_sword_was_swung:	
  2191                           ; 1 bytes @ 0x0
  2192                           
  2193  0070                     ?_determine_omega_mode_active:	
  2194                           ; 1 bytes @ 0x0
  2195                           
  2196  0070                     ?_main:	
  2197                           ; 1 bytes @ 0x0
  2198                           
  2199  0070                     ?___lwdiv:	
  2200                           ; 2 bytes @ 0x0
  2201                           
  2202  0070                     putch@input:	
  2203                           ; 2 bytes @ 0x0
  2204                           
  2205  0070                     getch@counter:	
  2206                           ; 1 bytes @ 0x0
  2207                           
  2208  0070                     ___lwdiv@divisor:	
  2209                           ; 1 bytes @ 0x0
  2210                           
  2211                           
  2212                           ; 2 bytes @ 0x0
  2213  0070                     	ds	1
  2214  0071                     ??_determine_sword_was_swung:	
  2215  0071                     determine_packets_to_send@packets:	
  2216                           ; 0 bytes @ 0x1
  2217                           
  2218                           
  2219                           ; 1 bytes @ 0x1
  2220  0071                     	ds	1
  2221  0072                     determine_sword_was_swung@input:	
  2222  0072                     ___lwdiv@dividend:	
  2223                           ; 1 bytes @ 0x2
  2224                           
  2225                           
  2226                           ; 2 bytes @ 0x2
  2227  0072                     	ds	2
  2228  0074                     ??___lwdiv:	
  2229                           
  2230                           ; 0 bytes @ 0x4
  2231  0074                     	ds	1
  2232  0075                     ___lwdiv@quotient:	
  2233                           
  2234                           ; 2 bytes @ 0x5
  2235  0075                     	ds	2
  2236  0077                     ___lwdiv@counter:	
  2237                           
  2238                           ; 1 bytes @ 0x7
  2239  0077                     	ds	1
  2240  0078                     ?___lwmod:	
  2241  0078                     ___lwmod@divisor:	
  2242                           ; 2 bytes @ 0x8
  2243                           
  2244                           
  2245                           ; 2 bytes @ 0x8
  2246  0078                     	ds	2
  2247  007A                     ___lwmod@dividend:	
  2248                           
  2249                           ; 2 bytes @ 0xA
  2250  007A                     	ds	2
  2251  007C                     ??___lwmod:	
  2252                           
  2253                           ; 0 bytes @ 0xC
  2254  007C                     	ds	1
  2255  007D                     ___lwmod@counter:	
  2256                           
  2257                           ; 1 bytes @ 0xD
  2258  007D                     	ds	1
  2259  007E                     ??_init_ir:	
  2260  007E                     ??_play_sound:	
  2261                           ; 0 bytes @ 0xE
  2262                           
  2263  007E                     ??_init_accel:	
  2264                           ; 0 bytes @ 0xE
  2265                           
  2266  007E                     ??_init_leds:	
  2267                           ; 0 bytes @ 0xE
  2268                           
  2269  007E                     ??_display_blade_lights:	
  2270                           ; 0 bytes @ 0xE
  2271                           
  2272  007E                     ??_init_isr:	
  2273                           ; 0 bytes @ 0xE
  2274                           
  2275                           
  2276                           	psect	cstackBANK0
  2277  0020                     __pcstackBANK0:	
  2278                           ; 0 bytes @ 0xE
  2279                           
  2280  0020                     ?_printf:	
  2281  0020                     printf@f:	
  2282                           ; 2 bytes @ 0x0
  2283                           
  2284                           
  2285                           ; 2 bytes @ 0x0
  2286  0020                     	ds	4
  2287  0024                     ??_printf:	
  2288                           
  2289                           ; 0 bytes @ 0x4
  2290  0024                     	ds	4
  2291  0028                     printf@ap:	
  2292                           
  2293                           ; 1 bytes @ 0x8
  2294  0028                     	ds	1
  2295  0029                     printf@flag:	
  2296                           
  2297                           ; 1 bytes @ 0x9
  2298  0029                     	ds	1
  2299  002A                     printf@prec:	
  2300                           
  2301                           ; 1 bytes @ 0xA
  2302  002A                     	ds	1
  2303  002B                     printf@val:	
  2304                           
  2305                           ; 2 bytes @ 0xB
  2306  002B                     	ds	2
  2307  002D                     printf@c:	
  2308                           
  2309                           ; 1 bytes @ 0xD
  2310  002D                     	ds	1
  2311  002E                     ?_output_ir:	
  2312  002E                     output_ir@amount:	
  2313                           ; 0 bytes @ 0xE
  2314                           
  2315  002E                     play_sound@sound_selection:	
  2316                           ; 1 bytes @ 0xE
  2317                           
  2318  002E                     display_blade_lights@mode:	
  2319                           ; 1 bytes @ 0xE
  2320                           
  2321                           
  2322                           ; 1 bytes @ 0xE
  2323  002E                     	ds	1
  2324  002F                     ??_output_ir:	
  2325                           
  2326                           ; 0 bytes @ 0xF
  2327  002F                     	ds	2
  2328  0031                     output_ir@pkt_type:	
  2329                           
  2330                           ; 1 bytes @ 0x11
  2331  0031                     	ds	1
  2332  0032                     ??_main:	
  2333                           
  2334                           ; 0 bytes @ 0x12
  2335  0032                     	ds	3
  2336  0035                     main@pkt_arr:	
  2337                           
  2338                           ; 3 bytes @ 0x15
  2339  0035                     	ds	3
  2340  0038                     main@i:	
  2341                           
  2342                           ; 1 bytes @ 0x18
  2343  0038                     	ds	1
  2344  0039                     main@userInput:	
  2345                           
  2346                           ; 1 bytes @ 0x19
  2347  0039                     	ds	1
  2348                           
  2349                           	psect	maintext
  2350  040B                     __pmaintext:	
  2351 ;;
  2352 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2353 ;;
  2354 ;; *************** function _main *****************
  2355 ;; Defined at:
  2356 ;;		line 18 in file "../../source/main.c"
  2357 ;; Parameters:    Size  Location     Type
  2358 ;;		None
  2359 ;; Auto vars:     Size  Location     Type
  2360 ;;  pkt_arr         3   21[BANK0 ] unsigned char [3]
  2361 ;;  userInput       1   25[BANK0 ] unsigned char 
  2362 ;;  i               1   24[BANK0 ] unsigned char 
  2363 ;; Return value:  Size  Location     Type
  2364 ;;                  2  102[None  ] int 
  2365 ;; Registers used:
  2366 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2367 ;; Tracked objects:
  2368 ;;		On entry : B1F/0
  2369 ;;		On exit  : 0/0
  2370 ;;		Unchanged: 0/0
  2371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2373 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2374 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2375 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2376 ;;Total ram usage:        8 bytes
  2377 ;; Hardware stack levels required when called:    3
  2378 ;; This function calls:
  2379 ;;		_determine_omega_mode_active
  2380 ;;		_determine_packets_to_send
  2381 ;;		_determine_sword_was_swung
  2382 ;;		_display_blade_lights
  2383 ;;		_init_accel
  2384 ;;		_init_ir
  2385 ;;		_init_isr
  2386 ;;		_init_leds
  2387 ;;		_init_pic
  2388 ;;		_init_uart
  2389 ;;		_output_ir
  2390 ;;		_play_sound
  2391 ;;		_printf
  2392 ;;		_waitch
  2393 ;; This function is called by:
  2394 ;;		Startup code after reset
  2395 ;; This function uses a non-reentrant model
  2396 ;;
  2397                           
  2398                           
  2399                           ;psect for function _main
  2400  040B                     _main:	
  2401                           
  2402                           ;main.c: 20: char pkt_arr[] = {0, 0, 0};
  2403                           
  2404                           ;incstack = 0
  2405                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2406  040B  0020               	movlb	0	; select bank0
  2407  040C  083A               	movf	main@F7230,w
  2408  040D  00B5               	movwf	main@pkt_arr
  2409  040E  083B               	movf	main@F7230+1,w
  2410  040F  00B6               	movwf	main@pkt_arr+1
  2411  0410  083C               	movf	main@F7230+2,w
  2412  0411  00B7               	movwf	main@pkt_arr+2
  2413                           
  2414                           ;main.c: 21: char userInput = ' ';
  2415  0412  3020               	movlw	32
  2416  0413  00B2               	movwf	??_main
  2417  0414  0832               	movf	??_main,w
  2418  0415  00B9               	movwf	main@userInput
  2419                           
  2420                           ;main.c: 22: char i = 0;
  2421  0416  01B8               	clrf	main@i
  2422                           
  2423                           ;main.c: 25: init_pic();
  2424  0417  3182  2255  3184   	fcall	_init_pic
  2425                           
  2426                           ;main.c: 26: init_uart();
  2427  041A  3182  226E  3184   	fcall	_init_uart
  2428                           
  2429                           ;main.c: 29: _delay((unsigned long)((100)*(32000000/4000.0)));
  2430  041D  3005               	movlw	5
  2431  041E  0020               	movlb	0	; select bank0
  2432  041F  00B4               	movwf	??_main+2
  2433  0420  300F               	movlw	15
  2434  0421  00B3               	movwf	??_main+1
  2435  0422  30F4               	movlw	244
  2436  0423  00B2               	movwf	??_main
  2437  0424                     u1957:	
  2438  0424  0BB2               	decfsz	??_main,f
  2439  0425  2C24               	goto	u1957
  2440  0426  0BB3               	decfsz	??_main+1,f
  2441  0427  2C24               	goto	u1957
  2442  0428  0BB4               	decfsz	??_main+2,f
  2443  0429  2C24               	goto	u1957
  2444                           
  2445                           ;main.c: 30: RB3 = 1;
  2446  042A  0020               	movlb	0	; select bank0
  2447  042B  158D               	bsf	13,3	;volatile
  2448                           
  2449                           ;main.c: 32: printf("\n\r=========================================================\n\r")
      +                          ;
  2450  042C  308D               	movlw	low (STR_13| (0+32768))
  2451  042D  00A0               	movwf	printf@f
  2452  042E  3088               	movlw	high (STR_13| (0+32768))
  2453  042F  00A1               	movwf	printf@f+1
  2454  0430  3183  2354  3184   	fcall	_printf
  2455                           
  2456                           ;main.c: 35: init_ir();
  2457  0433  3182  223D  3184   	fcall	_init_ir
  2458                           
  2459                           ;main.c: 36: init_accel();
  2460  0436  3182  2235  3184   	fcall	_init_accel
  2461                           
  2462                           ;main.c: 37: init_leds();
  2463  0439  3182  224D  3184   	fcall	_init_leds
  2464                           
  2465                           ;main.c: 38: init_isr();
  2466  043C  3182  2245  3184   	fcall	_init_isr
  2467                           
  2468                           ;main.c: 41: printf("\n\rWhich blade would you like to test? Enter a for Alpha, b for\n\
      +                          r");
  2469  043F  304C               	movlw	low (STR_14| (0+32768))
  2470  0440  0020               	movlb	0	; select bank0
  2471  0441  00A0               	movwf	printf@f
  2472  0442  3088               	movlw	high (STR_14| (0+32768))
  2473  0443  00A1               	movwf	printf@f+1
  2474  0444  3183  2354  3184   	fcall	_printf
  2475                           
  2476                           ;main.c: 42: printf("Beta, d for Delta, or g for Gamma.\n\r");
  2477  0447  3005               	movlw	low (STR_15| (0+32768))
  2478  0448  0020               	movlb	0	; select bank0
  2479  0449  00A0               	movwf	printf@f
  2480  044A  308A               	movlw	high (STR_15| (0+32768))
  2481                           
  2482                           ;main.c: 50: break;
  2483  044B  2C7A               	goto	L3
  2484  044C                     l1619:	
  2485                           ;main.c: 51: }
  2486                           
  2487                           
  2488                           ;main.c: 52: else if( userInput == 'b' )
  2489  044C  3062               	movlw	98
  2490  044D  0639               	xorwf	main@userInput,w
  2491  044E  1D03               	btfss	3,2
  2492  044F  2C59               	goto	l1627
  2493                           
  2494                           ;main.c: 53: {
  2495                           ;main.c: 54: printf("2\n\r");
  2496  0450  30ED               	movlw	low (STR_17| (0+32768))
  2497  0451  00A0               	movwf	printf@f
  2498  0452  308B               	movlw	high (STR_17| (0+32768))
  2499  0453  00A1               	movwf	printf@f+1
  2500  0454  3183  2354  3184   	fcall	_printf
  2501                           
  2502                           ;main.c: 55: blade = 2;
  2503  0457  3002               	movlw	2
  2504  0458  2C72               	goto	L2
  2505  0459                     l1627:	
  2506                           ;main.c: 57: }
  2507                           
  2508                           ;main.c: 56: break;
  2509                           
  2510                           
  2511                           ;main.c: 58: else if( userInput == 'd' )
  2512  0459  3064               	movlw	100
  2513  045A  0639               	xorwf	main@userInput,w
  2514  045B  1D03               	btfss	3,2
  2515  045C  2C66               	goto	l1635
  2516                           
  2517                           ;main.c: 59: {
  2518                           ;main.c: 60: printf("3\n\r");
  2519  045D  30F1               	movlw	low (STR_18| (0+32768))
  2520  045E  00A0               	movwf	printf@f
  2521  045F  308B               	movlw	high (STR_18| (0+32768))
  2522  0460  00A1               	movwf	printf@f+1
  2523  0461  3183  2354  3184   	fcall	_printf
  2524                           
  2525                           ;main.c: 61: blade = 3;
  2526  0464  3003               	movlw	3
  2527  0465  2C72               	goto	L2
  2528  0466                     l1635:	
  2529                           ;main.c: 63: }
  2530                           
  2531                           ;main.c: 62: break;
  2532                           
  2533                           
  2534                           ;main.c: 64: else if( userInput == 'g' )
  2535  0466  3067               	movlw	103
  2536  0467  0639               	xorwf	main@userInput,w
  2537  0468  1D03               	btfss	3,2
  2538  0469  2C77               	goto	l1641
  2539                           
  2540                           ;main.c: 65: {
  2541                           ;main.c: 66: printf("4\n\r");
  2542  046A  30F5               	movlw	low (STR_19| (0+32768))
  2543  046B  00A0               	movwf	printf@f
  2544  046C  308B               	movlw	high (STR_19| (0+32768))
  2545  046D  00A1               	movwf	printf@f+1
  2546  046E  3183  2354  3184   	fcall	_printf
  2547                           
  2548                           ;main.c: 67: blade = 4;
  2549  0471  3004               	movlw	4
  2550  0472                     L2:	
  2551  0472  0020               	movlb	0	; select bank0
  2552  0473  00B2               	movwf	??_main
  2553  0474  0832               	movf	??_main,w
  2554  0475  00BD               	movwf	_blade
  2555                           
  2556                           ;main.c: 68: break;
  2557  0476  2C93               	goto	l1643
  2558  0477                     l1641:	
  2559                           
  2560                           ;main.c: 69: }
  2561                           ;main.c: 70: printf("Invalid input. Try again.\n\r");
  2562  0477  300F               	movlw	low (STR_20| (0+32768))
  2563  0478  00A0               	movwf	printf@f
  2564  0479  308B               	movlw	high (STR_20| (0+32768))
  2565  047A                     L3:	
  2566  047A  00A1               	movwf	printf@f+1
  2567  047B  3183  2354  3184   	fcall	_printf
  2568                           
  2569                           ;main.c: 44: {
  2570                           ;main.c: 45: userInput = waitch();
  2571                           
  2572                           ;main.c: 43: while(1)
  2573  047E  3182  2221  3184   	fcall	_waitch
  2574  0481  0020               	movlb	0	; select bank0
  2575  0482  00B2               	movwf	??_main
  2576  0483  0832               	movf	??_main,w
  2577  0484  00B9               	movwf	main@userInput
  2578                           
  2579                           ;main.c: 46: if(userInput == 'a')
  2580  0485  3061               	movlw	97
  2581  0486  0639               	xorwf	main@userInput,w
  2582  0487  1D03               	btfss	3,2
  2583  0488  2C4C               	goto	l1619
  2584                           
  2585                           ;main.c: 47: {
  2586                           ;main.c: 48: printf("1\n\r");
  2587  0489  30E9               	movlw	low (STR_16| (0+32768))
  2588  048A  00A0               	movwf	printf@f
  2589  048B  308B               	movlw	high (STR_16| (0+32768))
  2590  048C  00A1               	movwf	printf@f+1
  2591  048D  3183  2354  3184   	fcall	_printf
  2592                           
  2593                           ;main.c: 49: blade = 1;
  2594  0490  0020               	movlb	0	; select bank0
  2595  0491  01BD               	clrf	_blade
  2596  0492  0ABD               	incf	_blade,f
  2597  0493                     l1643:	
  2598                           
  2599                           ;main.c: 71: }
  2600                           ;main.c: 73: printf("Are the blades in omega mode? (y/n)\n\r");
  2601  0493  30DF               	movlw	low (STR_21| (0+32768))
  2602  0494  0020               	movlb	0	; select bank0
  2603  0495  00A0               	movwf	printf@f
  2604  0496  3089               	movlw	high (STR_21| (0+32768))
  2605                           
  2606                           ;main.c: 81: break;
  2607  0497  2CA9               	goto	L4
  2608  0498                     l1655:	
  2609                           ;main.c: 82: }
  2610                           
  2611                           
  2612                           ;main.c: 83: else if( userInput == 'n' )
  2613  0498  306E               	movlw	110
  2614  0499  0639               	xorwf	main@userInput,w
  2615  049A  1D03               	btfss	3,2
  2616  049B  2CA6               	goto	l1661
  2617                           
  2618                           ;main.c: 84: {
  2619                           ;main.c: 85: printf("n\n\r");
  2620  049C  30F9               	movlw	low (STR_23| (0+32768))
  2621  049D  00A0               	movwf	printf@f
  2622  049E  308B               	movlw	high (STR_23| (0+32768))
  2623  049F  00A1               	movwf	printf@f+1
  2624  04A0  3183  2354  3184   	fcall	_printf
  2625                           
  2626                           ;main.c: 86: omega_mode = 0;
  2627  04A3  0020               	movlb	0	; select bank0
  2628  04A4  01BE               	clrf	_omega_mode
  2629                           
  2630                           ;main.c: 87: break;
  2631  04A5  2CC2               	goto	l1663
  2632  04A6                     l1661:	
  2633                           
  2634                           ;main.c: 88: }
  2635                           ;main.c: 89: printf("Invalid input. Try again.\n\r");
  2636  04A6  300F               	movlw	low (STR_20| (0+32768))
  2637  04A7  00A0               	movwf	printf@f
  2638  04A8  308B               	movlw	high (STR_20| (0+32768))
  2639  04A9                     L4:	
  2640  04A9  00A1               	movwf	printf@f+1
  2641  04AA  3183  2354  3184   	fcall	_printf
  2642                           
  2643                           ;main.c: 75: {
  2644                           ;main.c: 76: userInput = waitch();
  2645                           
  2646                           ;main.c: 74: while(1)
  2647  04AD  3182  2221  3184   	fcall	_waitch
  2648  04B0  0020               	movlb	0	; select bank0
  2649  04B1  00B2               	movwf	??_main
  2650  04B2  0832               	movf	??_main,w
  2651  04B3  00B9               	movwf	main@userInput
  2652                           
  2653                           ;main.c: 77: if(userInput == 'y')
  2654  04B4  3079               	movlw	121
  2655  04B5  0639               	xorwf	main@userInput,w
  2656  04B6  1D03               	btfss	3,2
  2657  04B7  2C98               	goto	l1655
  2658                           
  2659                           ;main.c: 78: {
  2660                           ;main.c: 79: printf("y\n\r");
  2661  04B8  30FD               	movlw	low (STR_22| (0+32768))
  2662  04B9  00A0               	movwf	printf@f
  2663  04BA  308B               	movlw	high (STR_22| (0+32768))
  2664  04BB  00A1               	movwf	printf@f+1
  2665  04BC  3183  2354  3184   	fcall	_printf
  2666                           
  2667                           ;main.c: 80: omega_mode = 1;
  2668  04BF  0020               	movlb	0	; select bank0
  2669  04C0  01BE               	clrf	_omega_mode
  2670  04C1  0ABE               	incf	_omega_mode,f
  2671  04C2                     l1663:	
  2672                           
  2673                           ;main.c: 90: }
  2674                           ;main.c: 92: printf("Press \'s\' to swing the sword and see what happens!\n\r");
  2675  04C2  30CB               	movlw	low (STR_25| (0+32768))
  2676  04C3  0020               	movlb	0	; select bank0
  2677  04C4  00A0               	movwf	printf@f
  2678  04C5  3088               	movlw	high (STR_25| (0+32768))
  2679  04C6  00A1               	movwf	printf@f+1
  2680  04C7  3183  2354  3184   	fcall	_printf
  2681                           
  2682                           ;main.c: 93: printf("Press 'd', 'h', or 't' to send damage, health, or stun packets.\n\r
      +                          ");
  2683  04CA  300A               	movlw	low (STR_26| (0+32768))
  2684  04CB  0020               	movlb	0	; select bank0
  2685  04CC  00A0               	movwf	printf@f
  2686  04CD  3088               	movlw	high (STR_26| (0+32768))
  2687  04CE  00A1               	movwf	printf@f+1
  2688  04CF  3183  2354  3184   	fcall	_printf
  2689                           
  2690                           ;main.c: 94: printf("Press 'o' to toggle Omega mode.\n\r\n\r");
  2691  04D2  302A               	movlw	low (STR_27| (0+32768))
  2692  04D3  0020               	movlb	0	; select bank0
  2693  04D4  00A0               	movwf	printf@f
  2694  04D5  308A               	movlw	high (STR_27| (0+32768))
  2695  04D6                     L5:	
  2696  04D6  00A1               	movwf	printf@f+1
  2697  04D7  3183  2354  3184   	fcall	_printf
  2698                           
  2699                           ;main.c: 98: {
  2700                           ;main.c: 100: if( blade == 1 )
  2701                           
  2702                           ;main.c: 97: while(1)
  2703  04DA  0020               	movlb	0	; select bank0
  2704  04DB  033D               	decf	_blade,w
  2705  04DC  1D03               	btfss	3,2
  2706  04DD  2DBA               	goto	l1751
  2707                           
  2708                           ;main.c: 121: }
  2709  04DE  2D61               	goto	l1667
  2710  04DF                     l1693:	
  2711                           
  2712                           ;main.c: 122: else
  2713                           ;main.c: 123: {
  2714                           ;main.c: 124: display_blade_lights(1);
  2715  04DF  3001               	movlw	1
  2716  04E0  2D9F               	goto	L6
  2717  04E1                     l1695:	
  2718                           ;main.c: 125: }
  2719                           ;main.c: 127: break;
  2720                           
  2721                           
  2722                           ;main.c: 128: }
  2723                           ;main.c: 129: if(userInput == 'd' && !determine_omega_mode_active())
  2724  04E1  3064               	movlw	100
  2725  04E2  0020               	movlb	0	; select bank0
  2726  04E3  0639               	xorwf	main@userInput,w
  2727  04E4  1D03               	btfss	3,2
  2728  04E5  2D01               	goto	l1707
  2729  04E6  3182  221E  3184   	fcall	_determine_omega_mode_active
  2730  04E9  3A00               	xorlw	0
  2731  04EA  1D03               	skipz
  2732  04EB  2D01               	goto	l1707
  2733                           
  2734                           ;main.c: 130: {
  2735                           ;main.c: 131: if(health > 0)
  2736  04EC  0020               	movlb	0	; select bank0
  2737  04ED  0840               	movf	_health,w
  2738  04EE  1903               	btfsc	3,2
  2739  04EF  2CF2               	goto	l1703
  2740                           
  2741                           ;main.c: 132: {
  2742                           ;main.c: 133: health -= 10;
  2743  04F0  300A               	movlw	10
  2744  04F1  02C0               	subwf	_health,f
  2745  04F2                     l1703:	
  2746                           
  2747                           ;main.c: 134: }
  2748                           ;main.c: 135: printf("The blade has been damaged. Health = %d.\n\r",
  2749                           ;main.c: 136: health);
  2750  04F2  3060               	movlw	low (STR_29| (0+32768))
  2751  04F3  00A0               	movwf	printf@f
  2752  04F4  3089               	movlw	high (STR_29| (0+32768))
  2753  04F5  00A1               	movwf	printf@f+1
  2754  04F6  0840               	movf	_health,w
  2755  04F7  00B2               	movwf	??_main
  2756  04F8  01B3               	clrf	??_main+1
  2757  04F9  0832               	movf	??_main,w
  2758  04FA  00A2               	movwf	?_printf+2
  2759  04FB  0833               	movf	??_main+1,w
  2760  04FC  00A3               	movwf	?_printf+3
  2761  04FD  3183  2354  3184   	fcall	_printf
  2762                           
  2763                           ;main.c: 138: break;
  2764  0500  2DA2               	goto	l130
  2765  0501                     l1707:	
  2766                           ;main.c: 139: }
  2767                           
  2768                           
  2769                           ;main.c: 140: else if(userInput == 'h' && !determine_omega_mode_active())
  2770  0501  3068               	movlw	104
  2771  0502  0020               	movlb	0	; select bank0
  2772  0503  0639               	xorwf	main@userInput,w
  2773  0504  1D03               	btfss	3,2
  2774  0505  2D24               	goto	l1719
  2775  0506  3182  221E  3184   	fcall	_determine_omega_mode_active
  2776  0509  3A00               	xorlw	0
  2777  050A  1D03               	skipz
  2778  050B  2D24               	goto	l1719
  2779                           
  2780                           ;main.c: 141: {
  2781                           ;main.c: 142: if(health < 50)
  2782  050C  3032               	movlw	50
  2783  050D  0020               	movlb	0	; select bank0
  2784  050E  0240               	subwf	_health,w
  2785  050F  1803               	skipnc
  2786  0510  2D15               	goto	l1715
  2787                           
  2788                           ;main.c: 143: {
  2789                           ;main.c: 144: health += 10;
  2790  0511  300A               	movlw	10
  2791  0512  00B2               	movwf	??_main
  2792  0513  0832               	movf	??_main,w
  2793  0514  07C0               	addwf	_health,f
  2794  0515                     l1715:	
  2795                           
  2796                           ;main.c: 145: }
  2797                           ;main.c: 146: printf("The blade has been healed. Health = %d.\n\r",
  2798                           ;main.c: 147: health);
  2799  0515  308B               	movlw	low (STR_30| (0+32768))
  2800  0516  00A0               	movwf	printf@f
  2801  0517  3089               	movlw	high (STR_30| (0+32768))
  2802  0518  00A1               	movwf	printf@f+1
  2803  0519  0840               	movf	_health,w
  2804  051A  00B2               	movwf	??_main
  2805  051B  01B3               	clrf	??_main+1
  2806  051C  0832               	movf	??_main,w
  2807  051D  00A2               	movwf	?_printf+2
  2808  051E  0833               	movf	??_main+1,w
  2809  051F  00A3               	movwf	?_printf+3
  2810  0520  3183  2354  3184   	fcall	_printf
  2811                           
  2812                           ;main.c: 149: break;
  2813  0523  2DA2               	goto	l130
  2814  0524                     l1719:	
  2815                           ;main.c: 150: }
  2816                           
  2817                           
  2818                           ;main.c: 151: else if(userInput == 't' && !determine_omega_mode_active())
  2819  0524  3074               	movlw	116
  2820  0525  0020               	movlb	0	; select bank0
  2821  0526  0639               	xorwf	main@userInput,w
  2822  0527  1D03               	btfss	3,2
  2823  0528  2D3C               	goto	l1729
  2824  0529  3182  221E  3184   	fcall	_determine_omega_mode_active
  2825  052C  3A00               	xorlw	0
  2826  052D  1D03               	skipz
  2827  052E  2D3C               	goto	l1729
  2828                           
  2829                           ;main.c: 152: {
  2830                           ;main.c: 153: stun_counter += 10;
  2831  052F  300A               	movlw	10
  2832  0530  0020               	movlb	0	; select bank0
  2833  0531  00B2               	movwf	??_main
  2834  0532  0832               	movf	??_main,w
  2835  0533  07BF               	addwf	_stun_counter,f
  2836                           
  2837                           ;main.c: 154: printf("The blade has been stunned.\n\r");
  2838  0534  30D4               	movlw	low (STR_31| (0+32768))
  2839  0535  00A0               	movwf	printf@f
  2840  0536  308A               	movlw	high (STR_31| (0+32768))
  2841  0537  00A1               	movwf	printf@f+1
  2842  0538  3183  2354  3184   	fcall	_printf
  2843                           
  2844                           ;main.c: 156: break;
  2845  053B  2DA2               	goto	l130
  2846  053C                     l1729:	
  2847                           ;main.c: 157: }
  2848                           
  2849                           
  2850                           ;main.c: 158: else if(userInput == 'o')
  2851  053C  306F               	movlw	111
  2852  053D  0020               	movlb	0	; select bank0
  2853  053E  0639               	xorwf	main@userInput,w
  2854  053F  1D03               	btfss	3,2
  2855  0540  2D5C               	goto	l1741
  2856                           
  2857                           ;main.c: 159: {
  2858                           ;main.c: 160: if(!determine_omega_mode_active())
  2859  0541  3182  221E  3184   	fcall	_determine_omega_mode_active
  2860  0544  3A00               	xorlw	0
  2861  0545  1D03               	skipz
  2862  0546  2D52               	goto	l1737
  2863                           
  2864                           ;main.c: 161: {
  2865                           ;main.c: 162: omega_mode = 1;
  2866  0547  0020               	movlb	0	; select bank0
  2867  0548  01BE               	clrf	_omega_mode
  2868  0549  0ABE               	incf	_omega_mode,f
  2869                           
  2870                           ;main.c: 163: printf("Omega mode enabled.\n\r");
  2871  054A  3075               	movlw	low (STR_32| (0+32768))
  2872  054B  00A0               	movwf	printf@f
  2873  054C  308B               	movlw	high (STR_32| (0+32768))
  2874  054D  00A1               	movwf	printf@f+1
  2875  054E  3183  2354  3184   	fcall	_printf
  2876                           
  2877                           ;main.c: 164: }
  2878  0551  2DA2               	goto	l130
  2879  0552                     l1737:	
  2880                           
  2881                           ;main.c: 165: else
  2882                           ;main.c: 166: {
  2883                           ;main.c: 167: omega_mode = 0;
  2884  0552  0020               	movlb	0	; select bank0
  2885  0553  01BE               	clrf	_omega_mode
  2886                           
  2887                           ;main.c: 168: printf("Omega mode disabled.\n\r");
  2888  0554  305E               	movlw	low (STR_33| (0+32768))
  2889  0555  00A0               	movwf	printf@f
  2890  0556  308B               	movlw	high (STR_33| (0+32768))
  2891  0557  00A1               	movwf	printf@f+1
  2892  0558  3183  2354  3184   	fcall	_printf
  2893                           
  2894                           ;main.c: 169: }
  2895                           ;main.c: 170: break;
  2896  055B  2DA2               	goto	l130
  2897  055C                     l1741:	
  2898                           
  2899                           ;main.c: 171: }
  2900                           ;main.c: 173: userInput = ' ';
  2901  055C  3020               	movlw	32
  2902  055D  0020               	movlb	0	; select bank0
  2903  055E  00B2               	movwf	??_main
  2904  055F  0832               	movf	??_main,w
  2905  0560  00B9               	movwf	main@userInput
  2906  0561                     l1667:	
  2907                           ;main.c: 101: {
  2908                           ;main.c: 102: while( 1 )
  2909                           
  2910                           
  2911                           ;main.c: 103: {
  2912                           ;main.c: 104: userInput = determine_sword_was_swung();
  2913  0561  3182  2260  3184   	fcall	_determine_sword_was_swung
  2914  0564  0020               	movlb	0	; select bank0
  2915  0565  00B2               	movwf	??_main
  2916  0566  0832               	movf	??_main,w
  2917  0567  00B9               	movwf	main@userInput
  2918                           
  2919                           ;main.c: 105: if(userInput == 1)
  2920  0568  0339               	decf	main@userInput,w
  2921  0569  1D03               	btfss	3,2
  2922  056A  2CE1               	goto	l1695
  2923                           
  2924                           ;main.c: 106: {
  2925                           ;main.c: 107: printf("Sword was swung\n\r");
  2926  056B  30B2               	movlw	low (STR_28| (0+32768))
  2927  056C  00A0               	movwf	printf@f
  2928  056D  308B               	movlw	high (STR_28| (0+32768))
  2929  056E  00A1               	movwf	printf@f+1
  2930  056F  3183  2354  3184   	fcall	_printf
  2931                           
  2932                           ;main.c: 109: if(!determine_omega_mode_active())
  2933  0572  3182  221E  3184   	fcall	_determine_omega_mode_active
  2934  0575  3A00               	xorlw	0
  2935  0576  1D03               	skipz
  2936  0577  2CDF               	goto	l1693
  2937                           
  2938                           ;main.c: 110: {
  2939                           ;main.c: 111: determine_packets_to_send(&pkt_arr);
  2940  0578  3035               	movlw	(low (main@pkt_arr| 0))& (0+255)
  2941  0579  3182  22AE  3184   	fcall	_determine_packets_to_send
  2942                           
  2943                           ;main.c: 113: for(i = 0; i < 3; ++i)
  2944  057C  0020               	movlb	0	; select bank0
  2945  057D  01B8               	clrf	main@i
  2946  057E  3003               	movlw	3
  2947  057F  0238               	subwf	main@i,w
  2948  0580  1803               	btfsc	3,0
  2949  0581  2D9E               	goto	l1691
  2950  0582                     l1683:	
  2951                           
  2952                           ;main.c: 114: {
  2953                           ;main.c: 115: if(pkt_arr[i] > 0)
  2954  0582  0838               	movf	main@i,w
  2955  0583  3E35               	addlw	(low (main@pkt_arr| 0))& (0+255)
  2956  0584  0086               	movwf	6
  2957  0585  0187               	clrf	7
  2958  0586  0801               	movf	1,w
  2959  0587  1903               	btfsc	3,2
  2960  0588  2D95               	goto	l1687
  2961                           
  2962                           ;main.c: 116: {
  2963                           ;main.c: 117: output_ir(i, pkt_arr[i]);
  2964  0589  0838               	movf	main@i,w
  2965  058A  3E35               	addlw	(low (main@pkt_arr| 0))& (0+255)
  2966  058B  0086               	movwf	6
  2967  058C  0187               	clrf	7
  2968  058D  0801               	movf	1,w
  2969  058E  00B2               	movwf	??_main
  2970  058F  0832               	movf	??_main,w
  2971  0590  00AE               	movwf	output_ir@amount
  2972  0591  0838               	movf	main@i,w
  2973  0592  3182  22F2  3184   	fcall	_output_ir
  2974  0595                     l1687:	
  2975  0595  3001               	movlw	1
  2976  0596  0020               	movlb	0	; select bank0
  2977  0597  00B2               	movwf	??_main
  2978  0598  0832               	movf	??_main,w
  2979  0599  07B8               	addwf	main@i,f
  2980  059A  3003               	movlw	3
  2981  059B  0238               	subwf	main@i,w
  2982  059C  1C03               	skipc
  2983  059D  2D82               	goto	l1683
  2984  059E                     l1691:	
  2985                           
  2986                           ;main.c: 118: }
  2987                           ;main.c: 119: }
  2988                           ;main.c: 120: display_blade_lights(0);
  2989  059E  3000               	movlw	0
  2990  059F                     L6:	
  2991  059F  3182  2280  3184   	fcall	_display_blade_lights
  2992  05A2                     l130:	
  2993                           
  2994                           ;main.c: 174: }
  2995                           ;main.c: 176: GIE = 0;
  2996  05A2  138B               	bcf	11,7	;volatile
  2997  05A3                     l1749:	
  2998                           ;main.c: 177: while(stun_counter > 0)
  2999                           
  3000  05A3  0020               	movlb	0	; select bank0
  3001  05A4  083F               	movf	_stun_counter,w
  3002  05A5  1903               	btfsc	3,2
  3003  05A6  2DB9               	goto	l145
  3004                           
  3005                           ;main.c: 178: {
  3006                           ;main.c: 179: GIE = 1;
  3007  05A7  178B               	bsf	11,7	;volatile
  3008                           
  3009                           ;main.c: 180: _delay((unsigned long)((100)*(32000000/4000.0)));
  3010  05A8  3005               	movlw	5
  3011  05A9  00B4               	movwf	??_main+2
  3012  05AA  300F               	movlw	15
  3013  05AB  00B3               	movwf	??_main+1
  3014  05AC  30F4               	movlw	244
  3015  05AD  00B2               	movwf	??_main
  3016  05AE                     u1967:	
  3017  05AE  0BB2               	decfsz	??_main,f
  3018  05AF  2DAE               	goto	u1967
  3019  05B0  0BB3               	decfsz	??_main+1,f
  3020  05B1  2DAE               	goto	u1967
  3021  05B2  0BB4               	decfsz	??_main+2,f
  3022  05B3  2DAE               	goto	u1967
  3023                           
  3024                           ;main.c: 181: GIE = 0;
  3025  05B4  138B               	bcf	11,7	;volatile
  3026                           
  3027                           ;main.c: 182: --stun_counter;
  3028  05B5  3001               	movlw	1
  3029  05B6  0020               	movlb	0	; select bank0
  3030  05B7  02BF               	subwf	_stun_counter,f
  3031  05B8  2DA3               	goto	l1749
  3032  05B9                     l145:	
  3033                           
  3034                           ;main.c: 183: }
  3035                           ;main.c: 184: GIE = 1;
  3036  05B9  178B               	bsf	11,7	;volatile
  3037  05BA                     l1751:	
  3038                           
  3039                           ;main.c: 185: }
  3040                           ;main.c: 187: if( blade == 2 )
  3041  05BA  3002               	movlw	2
  3042  05BB  063D               	xorwf	_blade,w
  3043  05BC  1D03               	btfss	3,2
  3044  05BD  2E2F               	goto	l1797
  3045                           
  3046                           ;main.c: 210: }
  3047  05BE  2DEA               	goto	l1753
  3048  05BF                     l1779:	
  3049                           
  3050                           ;main.c: 211: else
  3051                           ;main.c: 212: {
  3052                           ;main.c: 213: play_sound(1);
  3053  05BF  3001               	movlw	1
  3054  05C0  3182  2297  3184   	fcall	_play_sound
  3055                           
  3056                           ;main.c: 214: display_blade_lights(1);
  3057  05C3  3001               	movlw	1
  3058  05C4  2E2C               	goto	L7
  3059  05C5                     l1783:	
  3060                           ;main.c: 218: }
  3061                           
  3062                           ;main.c: 215: }
  3063                           ;main.c: 217: break;
  3064                           
  3065                           
  3066                           ;main.c: 219: else if(userInput == 'o')
  3067  05C5  306F               	movlw	111
  3068  05C6  0020               	movlb	0	; select bank0
  3069  05C7  0639               	xorwf	main@userInput,w
  3070  05C8  1D03               	btfss	3,2
  3071  05C9  2DE5               	goto	l1795
  3072                           
  3073                           ;main.c: 220: {
  3074                           ;main.c: 221: if(!determine_omega_mode_active())
  3075  05CA  3182  221E  3184   	fcall	_determine_omega_mode_active
  3076  05CD  3A00               	xorlw	0
  3077  05CE  1D03               	skipz
  3078  05CF  2DDB               	goto	l1791
  3079                           
  3080                           ;main.c: 222: {
  3081                           ;main.c: 223: omega_mode = 1;
  3082  05D0  0020               	movlb	0	; select bank0
  3083  05D1  01BE               	clrf	_omega_mode
  3084  05D2  0ABE               	incf	_omega_mode,f
  3085                           
  3086                           ;main.c: 224: printf("Omega mode enabled.\n\r");
  3087  05D3  3075               	movlw	low (STR_32| (0+32768))
  3088  05D4  00A0               	movwf	printf@f
  3089  05D5  308B               	movlw	high (STR_32| (0+32768))
  3090  05D6  00A1               	movwf	printf@f+1
  3091  05D7  3183  2354  3184   	fcall	_printf
  3092                           
  3093                           ;main.c: 225: }
  3094  05DA  2E2F               	goto	l1797
  3095  05DB                     l1791:	
  3096                           
  3097                           ;main.c: 226: else
  3098                           ;main.c: 227: {
  3099                           ;main.c: 228: omega_mode = 0;
  3100  05DB  0020               	movlb	0	; select bank0
  3101  05DC  01BE               	clrf	_omega_mode
  3102                           
  3103                           ;main.c: 229: printf("Omega mode disabled.\n\r");
  3104  05DD  305E               	movlw	low (STR_33| (0+32768))
  3105  05DE  00A0               	movwf	printf@f
  3106  05DF  308B               	movlw	high (STR_33| (0+32768))
  3107  05E0  00A1               	movwf	printf@f+1
  3108  05E1  3183  2354  3184   	fcall	_printf
  3109                           
  3110                           ;main.c: 230: }
  3111                           ;main.c: 231: break;
  3112  05E4  2E2F               	goto	l1797
  3113  05E5                     l1795:	
  3114                           
  3115                           ;main.c: 232: }
  3116                           ;main.c: 234: userInput = ' ';
  3117  05E5  3020               	movlw	32
  3118  05E6  0020               	movlb	0	; select bank0
  3119  05E7  00B2               	movwf	??_main
  3120  05E8  0832               	movf	??_main,w
  3121  05E9  00B9               	movwf	main@userInput
  3122  05EA                     l1753:	
  3123                           ;main.c: 188: {
  3124                           ;main.c: 189: while( 1 )
  3125                           
  3126                           
  3127                           ;main.c: 190: {
  3128                           ;main.c: 191: userInput = determine_sword_was_swung();
  3129  05EA  3182  2260  3184   	fcall	_determine_sword_was_swung
  3130  05ED  0020               	movlb	0	; select bank0
  3131  05EE  00B2               	movwf	??_main
  3132  05EF  0832               	movf	??_main,w
  3133  05F0  00B9               	movwf	main@userInput
  3134                           
  3135                           ;main.c: 192: if(userInput == 1)
  3136  05F1  0339               	decf	main@userInput,w
  3137  05F2  1D03               	btfss	3,2
  3138  05F3  2DC5               	goto	l1783
  3139                           
  3140                           ;main.c: 193: {
  3141                           ;main.c: 194: printf("Sword was swung\n\r");
  3142  05F4  30B2               	movlw	low (STR_28| (0+32768))
  3143  05F5  00A0               	movwf	printf@f
  3144  05F6  308B               	movlw	high (STR_28| (0+32768))
  3145  05F7  00A1               	movwf	printf@f+1
  3146  05F8  3183  2354  3184   	fcall	_printf
  3147                           
  3148                           ;main.c: 196: if(!determine_omega_mode_active())
  3149  05FB  3182  221E  3184   	fcall	_determine_omega_mode_active
  3150  05FE  3A00               	xorlw	0
  3151  05FF  1D03               	skipz
  3152  0600  2DBF               	goto	l1779
  3153                           
  3154                           ;main.c: 197: {
  3155                           ;main.c: 198: determine_packets_to_send(&pkt_arr);
  3156  0601  3035               	movlw	(low (main@pkt_arr| 0))& (0+255)
  3157  0602  3182  22AE  3184   	fcall	_determine_packets_to_send
  3158                           
  3159                           ;main.c: 200: for(i = 0; i < 3; ++i)
  3160  0605  0020               	movlb	0	; select bank0
  3161  0606  01B8               	clrf	main@i
  3162  0607  3003               	movlw	3
  3163  0608  0238               	subwf	main@i,w
  3164  0609  1803               	btfsc	3,0
  3165  060A  2E27               	goto	l1777
  3166  060B                     l1769:	
  3167                           
  3168                           ;main.c: 201: {
  3169                           ;main.c: 202: if(pkt_arr[i] > 0)
  3170  060B  0838               	movf	main@i,w
  3171  060C  3E35               	addlw	(low (main@pkt_arr| 0))& (0+255)
  3172  060D  0086               	movwf	6
  3173  060E  0187               	clrf	7
  3174  060F  0801               	movf	1,w
  3175  0610  1903               	btfsc	3,2
  3176  0611  2E1E               	goto	l1773
  3177                           
  3178                           ;main.c: 203: {
  3179                           ;main.c: 204: output_ir(i, pkt_arr[i]);
  3180  0612  0838               	movf	main@i,w
  3181  0613  3E35               	addlw	(low (main@pkt_arr| 0))& (0+255)
  3182  0614  0086               	movwf	6
  3183  0615  0187               	clrf	7
  3184  0616  0801               	movf	1,w
  3185  0617  00B2               	movwf	??_main
  3186  0618  0832               	movf	??_main,w
  3187  0619  00AE               	movwf	output_ir@amount
  3188  061A  0838               	movf	main@i,w
  3189  061B  3182  22F2  3184   	fcall	_output_ir
  3190  061E                     l1773:	
  3191  061E  3001               	movlw	1
  3192  061F  0020               	movlb	0	; select bank0
  3193  0620  00B2               	movwf	??_main
  3194  0621  0832               	movf	??_main,w
  3195  0622  07B8               	addwf	main@i,f
  3196  0623  3003               	movlw	3
  3197  0624  0238               	subwf	main@i,w
  3198  0625  1C03               	skipc
  3199  0626  2E0B               	goto	l1769
  3200  0627                     l1777:	
  3201                           
  3202                           ;main.c: 205: }
  3203                           ;main.c: 206: }
  3204                           ;main.c: 208: play_sound(0);
  3205  0627  3000               	movlw	0
  3206  0628  3182  2297  3184   	fcall	_play_sound
  3207                           
  3208                           ;main.c: 209: display_blade_lights(0);
  3209  062B  3000               	movlw	0
  3210  062C                     L7:	
  3211  062C  3182  2280  3184   	fcall	_display_blade_lights
  3212  062F                     l1797:	
  3213                           
  3214                           ;main.c: 235: }
  3215                           ;main.c: 236: }
  3216                           ;main.c: 238: if( blade == 3 )
  3217  062F  3003               	movlw	3
  3218  0630  0020               	movlb	0	; select bank0
  3219  0631  063D               	xorwf	_blade,w
  3220  0632  1D03               	btfss	3,2
  3221  0633  2F10               	goto	l1883
  3222                           
  3223                           ;main.c: 260: }
  3224  0634  2EB7               	goto	l1799
  3225  0635                     l1825:	
  3226                           
  3227                           ;main.c: 261: else
  3228                           ;main.c: 262: {
  3229                           ;main.c: 263: display_blade_lights(1);
  3230  0635  3001               	movlw	1
  3231  0636  2EF5               	goto	L8
  3232  0637                     l1827:	
  3233                           ;main.c: 264: }
  3234                           ;main.c: 266: break;
  3235                           
  3236                           
  3237                           ;main.c: 267: }
  3238                           ;main.c: 268: if(userInput == 'd' && !determine_omega_mode_active())
  3239  0637  3064               	movlw	100
  3240  0638  0020               	movlb	0	; select bank0
  3241  0639  0639               	xorwf	main@userInput,w
  3242  063A  1D03               	btfss	3,2
  3243  063B  2E57               	goto	l1839
  3244  063C  3182  221E  3184   	fcall	_determine_omega_mode_active
  3245  063F  3A00               	xorlw	0
  3246  0640  1D03               	skipz
  3247  0641  2E57               	goto	l1839
  3248                           
  3249                           ;main.c: 269: {
  3250                           ;main.c: 270: if(health > 0)
  3251  0642  0020               	movlb	0	; select bank0
  3252  0643  0840               	movf	_health,w
  3253  0644  1903               	btfsc	3,2
  3254  0645  2E48               	goto	l1835
  3255                           
  3256                           ;main.c: 271: {
  3257                           ;main.c: 272: health -= 10;
  3258  0646  300A               	movlw	10
  3259  0647  02C0               	subwf	_health,f
  3260  0648                     l1835:	
  3261                           
  3262                           ;main.c: 273: }
  3263                           ;main.c: 274: printf("The blade has been damaged. Health = %d.\n\r",
  3264                           ;main.c: 275: health);
  3265  0648  3060               	movlw	low (STR_29| (0+32768))
  3266  0649  00A0               	movwf	printf@f
  3267  064A  3089               	movlw	high (STR_29| (0+32768))
  3268  064B  00A1               	movwf	printf@f+1
  3269  064C  0840               	movf	_health,w
  3270  064D  00B2               	movwf	??_main
  3271  064E  01B3               	clrf	??_main+1
  3272  064F  0832               	movf	??_main,w
  3273  0650  00A2               	movwf	?_printf+2
  3274  0651  0833               	movf	??_main+1,w
  3275  0652  00A3               	movwf	?_printf+3
  3276  0653  3183  2354  3184   	fcall	_printf
  3277                           
  3278                           ;main.c: 277: break;
  3279  0656  2EF8               	goto	l168
  3280  0657                     l1839:	
  3281                           ;main.c: 278: }
  3282                           
  3283                           
  3284                           ;main.c: 279: else if(userInput == 'h' && !determine_omega_mode_active())
  3285  0657  3068               	movlw	104
  3286  0658  0020               	movlb	0	; select bank0
  3287  0659  0639               	xorwf	main@userInput,w
  3288  065A  1D03               	btfss	3,2
  3289  065B  2E7A               	goto	l1851
  3290  065C  3182  221E  3184   	fcall	_determine_omega_mode_active
  3291  065F  3A00               	xorlw	0
  3292  0660  1D03               	skipz
  3293  0661  2E7A               	goto	l1851
  3294                           
  3295                           ;main.c: 280: {
  3296                           ;main.c: 281: if(health < 50)
  3297  0662  3032               	movlw	50
  3298  0663  0020               	movlb	0	; select bank0
  3299  0664  0240               	subwf	_health,w
  3300  0665  1803               	skipnc
  3301  0666  2E6B               	goto	l1847
  3302                           
  3303                           ;main.c: 282: {
  3304                           ;main.c: 283: health += 10;
  3305  0667  300A               	movlw	10
  3306  0668  00B2               	movwf	??_main
  3307  0669  0832               	movf	??_main,w
  3308  066A  07C0               	addwf	_health,f
  3309  066B                     l1847:	
  3310                           
  3311                           ;main.c: 284: }
  3312                           ;main.c: 285: printf("The blade has been healed. Health = %d.\n\r",
  3313                           ;main.c: 286: health);
  3314  066B  308B               	movlw	low (STR_30| (0+32768))
  3315  066C  00A0               	movwf	printf@f
  3316  066D  3089               	movlw	high (STR_30| (0+32768))
  3317  066E  00A1               	movwf	printf@f+1
  3318  066F  0840               	movf	_health,w
  3319  0670  00B2               	movwf	??_main
  3320  0671  01B3               	clrf	??_main+1
  3321  0672  0832               	movf	??_main,w
  3322  0673  00A2               	movwf	?_printf+2
  3323  0674  0833               	movf	??_main+1,w
  3324  0675  00A3               	movwf	?_printf+3
  3325  0676  3183  2354  3184   	fcall	_printf
  3326                           
  3327                           ;main.c: 288: break;
  3328  0679  2EF8               	goto	l168
  3329  067A                     l1851:	
  3330                           ;main.c: 289: }
  3331                           
  3332                           
  3333                           ;main.c: 290: else if(userInput == 't' && !determine_omega_mode_active())
  3334  067A  3074               	movlw	116
  3335  067B  0020               	movlb	0	; select bank0
  3336  067C  0639               	xorwf	main@userInput,w
  3337  067D  1D03               	btfss	3,2
  3338  067E  2E92               	goto	l1861
  3339  067F  3182  221E  3184   	fcall	_determine_omega_mode_active
  3340  0682  3A00               	xorlw	0
  3341  0683  1D03               	skipz
  3342  0684  2E92               	goto	l1861
  3343                           
  3344                           ;main.c: 291: {
  3345                           ;main.c: 292: stun_counter += 10;
  3346  0685  300A               	movlw	10
  3347  0686  0020               	movlb	0	; select bank0
  3348  0687  00B2               	movwf	??_main
  3349  0688  0832               	movf	??_main,w
  3350  0689  07BF               	addwf	_stun_counter,f
  3351                           
  3352                           ;main.c: 293: printf("The blade has been stunned.\n\r");
  3353  068A  30D4               	movlw	low (STR_31| (0+32768))
  3354  068B  00A0               	movwf	printf@f
  3355  068C  308A               	movlw	high (STR_31| (0+32768))
  3356  068D  00A1               	movwf	printf@f+1
  3357  068E  3183  2354  3184   	fcall	_printf
  3358                           
  3359                           ;main.c: 295: break;
  3360  0691  2EF8               	goto	l168
  3361  0692                     l1861:	
  3362                           ;main.c: 296: }
  3363                           
  3364                           
  3365                           ;main.c: 297: else if(userInput == 'o')
  3366  0692  306F               	movlw	111
  3367  0693  0020               	movlb	0	; select bank0
  3368  0694  0639               	xorwf	main@userInput,w
  3369  0695  1D03               	btfss	3,2
  3370  0696  2EB2               	goto	l1873
  3371                           
  3372                           ;main.c: 298: {
  3373                           ;main.c: 299: if(!determine_omega_mode_active())
  3374  0697  3182  221E  3184   	fcall	_determine_omega_mode_active
  3375  069A  3A00               	xorlw	0
  3376  069B  1D03               	skipz
  3377  069C  2EA8               	goto	l1869
  3378                           
  3379                           ;main.c: 300: {
  3380                           ;main.c: 301: omega_mode = 1;
  3381  069D  0020               	movlb	0	; select bank0
  3382  069E  01BE               	clrf	_omega_mode
  3383  069F  0ABE               	incf	_omega_mode,f
  3384                           
  3385                           ;main.c: 302: printf("Omega mode enabled.\n\r");
  3386  06A0  3075               	movlw	low (STR_32| (0+32768))
  3387  06A1  00A0               	movwf	printf@f
  3388  06A2  308B               	movlw	high (STR_32| (0+32768))
  3389  06A3  00A1               	movwf	printf@f+1
  3390  06A4  3183  2354  3184   	fcall	_printf
  3391                           
  3392                           ;main.c: 303: }
  3393  06A7  2EF8               	goto	l168
  3394  06A8                     l1869:	
  3395                           
  3396                           ;main.c: 304: else
  3397                           ;main.c: 305: {
  3398                           ;main.c: 306: omega_mode = 0;
  3399  06A8  0020               	movlb	0	; select bank0
  3400  06A9  01BE               	clrf	_omega_mode
  3401                           
  3402                           ;main.c: 307: printf("Omega mode disabled.\n\r");
  3403  06AA  305E               	movlw	low (STR_33| (0+32768))
  3404  06AB  00A0               	movwf	printf@f
  3405  06AC  308B               	movlw	high (STR_33| (0+32768))
  3406  06AD  00A1               	movwf	printf@f+1
  3407  06AE  3183  2354  3184   	fcall	_printf
  3408                           
  3409                           ;main.c: 308: }
  3410                           ;main.c: 309: break;
  3411  06B1  2EF8               	goto	l168
  3412  06B2                     l1873:	
  3413                           
  3414                           ;main.c: 310: }
  3415                           ;main.c: 312: userInput = ' ';
  3416  06B2  3020               	movlw	32
  3417  06B3  0020               	movlb	0	; select bank0
  3418  06B4  00B2               	movwf	??_main
  3419  06B5  0832               	movf	??_main,w
  3420  06B6  00B9               	movwf	main@userInput
  3421  06B7                     l1799:	
  3422                           ;main.c: 239: {
  3423                           ;main.c: 240: while( 1 )
  3424                           
  3425                           
  3426                           ;main.c: 241: {
  3427                           ;main.c: 242: userInput = determine_sword_was_swung();
  3428  06B7  3182  2260  3184   	fcall	_determine_sword_was_swung
  3429  06BA  0020               	movlb	0	; select bank0
  3430  06BB  00B2               	movwf	??_main
  3431  06BC  0832               	movf	??_main,w
  3432  06BD  00B9               	movwf	main@userInput
  3433                           
  3434                           ;main.c: 243: if(userInput == 1)
  3435  06BE  0339               	decf	main@userInput,w
  3436  06BF  1D03               	btfss	3,2
  3437  06C0  2E37               	goto	l1827
  3438                           
  3439                           ;main.c: 244: {
  3440                           ;main.c: 245: printf("Sword was swung\n\r");
  3441  06C1  30B2               	movlw	low (STR_28| (0+32768))
  3442  06C2  00A0               	movwf	printf@f
  3443  06C3  308B               	movlw	high (STR_28| (0+32768))
  3444  06C4  00A1               	movwf	printf@f+1
  3445  06C5  3183  2354  3184   	fcall	_printf
  3446                           
  3447                           ;main.c: 247: determine_packets_to_send(&pkt_arr);
  3448  06C8  3035               	movlw	(low (main@pkt_arr| 0))& (0+255)
  3449  06C9  3182  22AE  3184   	fcall	_determine_packets_to_send
  3450                           
  3451                           ;main.c: 249: for(i = 0; i < 3; ++i)
  3452  06CC  0020               	movlb	0	; select bank0
  3453  06CD  01B8               	clrf	main@i
  3454  06CE  3003               	movlw	3
  3455  06CF  0238               	subwf	main@i,w
  3456  06D0  1803               	btfsc	3,0
  3457  06D1  2EEE               	goto	l1821
  3458  06D2                     l1813:	
  3459                           
  3460                           ;main.c: 250: {
  3461                           ;main.c: 251: if(pkt_arr[i] > 0)
  3462  06D2  0838               	movf	main@i,w
  3463  06D3  3E35               	addlw	(low (main@pkt_arr| 0))& (0+255)
  3464  06D4  0086               	movwf	6
  3465  06D5  0187               	clrf	7
  3466  06D6  0801               	movf	1,w
  3467  06D7  1903               	btfsc	3,2
  3468  06D8  2EE5               	goto	l1817
  3469                           
  3470                           ;main.c: 252: {
  3471                           ;main.c: 253: output_ir(i, pkt_arr[i]);
  3472  06D9  0838               	movf	main@i,w
  3473  06DA  3E35               	addlw	(low (main@pkt_arr| 0))& (0+255)
  3474  06DB  0086               	movwf	6
  3475  06DC  0187               	clrf	7
  3476  06DD  0801               	movf	1,w
  3477  06DE  00B2               	movwf	??_main
  3478  06DF  0832               	movf	??_main,w
  3479  06E0  00AE               	movwf	output_ir@amount
  3480  06E1  0838               	movf	main@i,w
  3481  06E2  3182  22F2  3184   	fcall	_output_ir
  3482  06E5                     l1817:	
  3483  06E5  3001               	movlw	1
  3484  06E6  0020               	movlb	0	; select bank0
  3485  06E7  00B2               	movwf	??_main
  3486  06E8  0832               	movf	??_main,w
  3487  06E9  07B8               	addwf	main@i,f
  3488  06EA  3003               	movlw	3
  3489  06EB  0238               	subwf	main@i,w
  3490  06EC  1C03               	skipc
  3491  06ED  2ED2               	goto	l1813
  3492  06EE                     l1821:	
  3493                           
  3494                           ;main.c: 254: }
  3495                           ;main.c: 255: }
  3496                           ;main.c: 257: if(!determine_omega_mode_active())
  3497  06EE  3182  221E  3184   	fcall	_determine_omega_mode_active
  3498  06F1  3A00               	xorlw	0
  3499  06F2  1D03               	skipz
  3500  06F3  2E35               	goto	l1825
  3501                           
  3502                           ;main.c: 258: {
  3503                           ;main.c: 259: display_blade_lights(0);
  3504  06F4  3000               	movlw	0
  3505  06F5                     L8:	
  3506  06F5  3182  2280  3184   	fcall	_display_blade_lights
  3507  06F8                     l168:	
  3508                           
  3509                           ;main.c: 313: }
  3510                           ;main.c: 315: GIE = 0;
  3511  06F8  138B               	bcf	11,7	;volatile
  3512  06F9                     l1881:	
  3513                           ;main.c: 316: while(stun_counter > 0)
  3514                           
  3515  06F9  0020               	movlb	0	; select bank0
  3516  06FA  083F               	movf	_stun_counter,w
  3517  06FB  1903               	btfsc	3,2
  3518  06FC  2F0F               	goto	l183
  3519                           
  3520                           ;main.c: 317: {
  3521                           ;main.c: 318: GIE = 1;
  3522  06FD  178B               	bsf	11,7	;volatile
  3523                           
  3524                           ;main.c: 319: _delay((unsigned long)((100)*(32000000/4000.0)));
  3525  06FE  3005               	movlw	5
  3526  06FF  00B4               	movwf	??_main+2
  3527  0700  300F               	movlw	15
  3528  0701  00B3               	movwf	??_main+1
  3529  0702  30F4               	movlw	244
  3530  0703  00B2               	movwf	??_main
  3531  0704                     u1977:	
  3532  0704  0BB2               	decfsz	??_main,f
  3533  0705  2F04               	goto	u1977
  3534  0706  0BB3               	decfsz	??_main+1,f
  3535  0707  2F04               	goto	u1977
  3536  0708  0BB4               	decfsz	??_main+2,f
  3537  0709  2F04               	goto	u1977
  3538                           
  3539                           ;main.c: 320: GIE = 0;
  3540  070A  138B               	bcf	11,7	;volatile
  3541                           
  3542                           ;main.c: 321: --stun_counter;
  3543  070B  3001               	movlw	1
  3544  070C  0020               	movlb	0	; select bank0
  3545  070D  02BF               	subwf	_stun_counter,f
  3546  070E  2EF9               	goto	l1881
  3547  070F                     l183:	
  3548                           
  3549                           ;main.c: 322: }
  3550                           ;main.c: 323: GIE = 1;
  3551  070F  178B               	bsf	11,7	;volatile
  3552  0710                     l1883:	
  3553                           
  3554                           ;main.c: 324: }
  3555                           ;main.c: 326: if( blade == 4 )
  3556  0710  3004               	movlw	4
  3557  0711  063D               	xorwf	_blade,w
  3558  0712  1D03               	btfss	3,2
  3559  0713  2FF0               	goto	l1969
  3560                           
  3561                           ;main.c: 347: }
  3562  0714  2F97               	goto	l1885
  3563  0715                     l1911:	
  3564                           
  3565                           ;main.c: 348: else
  3566                           ;main.c: 349: {
  3567                           ;main.c: 350: display_blade_lights(1);
  3568  0715  3001               	movlw	1
  3569  0716  2FD5               	goto	L9
  3570  0717                     l1913:	
  3571                           ;main.c: 351: }
  3572                           ;main.c: 353: break;
  3573                           
  3574                           
  3575                           ;main.c: 354: }
  3576                           ;main.c: 355: if(userInput == 'd' && !determine_omega_mode_active())
  3577  0717  3064               	movlw	100
  3578  0718  0020               	movlb	0	; select bank0
  3579  0719  0639               	xorwf	main@userInput,w
  3580  071A  1D03               	btfss	3,2
  3581  071B  2F37               	goto	l1925
  3582  071C  3182  221E  3184   	fcall	_determine_omega_mode_active
  3583  071F  3A00               	xorlw	0
  3584  0720  1D03               	skipz
  3585  0721  2F37               	goto	l1925
  3586                           
  3587                           ;main.c: 356: {
  3588                           ;main.c: 357: if(health > 0)
  3589  0722  0020               	movlb	0	; select bank0
  3590  0723  0840               	movf	_health,w
  3591  0724  1903               	btfsc	3,2
  3592  0725  2F28               	goto	l1921
  3593                           
  3594                           ;main.c: 358: {
  3595                           ;main.c: 359: health -= 10;
  3596  0726  300A               	movlw	10
  3597  0727  02C0               	subwf	_health,f
  3598  0728                     l1921:	
  3599                           
  3600                           ;main.c: 360: }
  3601                           ;main.c: 361: printf("The blade has been damaged. Health = %d.\n\r",
  3602                           ;main.c: 362: health);
  3603  0728  3060               	movlw	low (STR_29| (0+32768))
  3604  0729  00A0               	movwf	printf@f
  3605  072A  3089               	movlw	high (STR_29| (0+32768))
  3606  072B  00A1               	movwf	printf@f+1
  3607  072C  0840               	movf	_health,w
  3608  072D  00B2               	movwf	??_main
  3609  072E  01B3               	clrf	??_main+1
  3610  072F  0832               	movf	??_main,w
  3611  0730  00A2               	movwf	?_printf+2
  3612  0731  0833               	movf	??_main+1,w
  3613  0732  00A3               	movwf	?_printf+3
  3614  0733  3183  2354  3184   	fcall	_printf
  3615                           
  3616                           ;main.c: 364: break;
  3617  0736  2FD8               	goto	l192
  3618  0737                     l1925:	
  3619                           ;main.c: 365: }
  3620                           
  3621                           
  3622                           ;main.c: 366: else if(userInput == 'h' && !determine_omega_mode_active())
  3623  0737  3068               	movlw	104
  3624  0738  0020               	movlb	0	; select bank0
  3625  0739  0639               	xorwf	main@userInput,w
  3626  073A  1D03               	btfss	3,2
  3627  073B  2F5A               	goto	l1937
  3628  073C  3182  221E  3184   	fcall	_determine_omega_mode_active
  3629  073F  3A00               	xorlw	0
  3630  0740  1D03               	skipz
  3631  0741  2F5A               	goto	l1937
  3632                           
  3633                           ;main.c: 367: {
  3634                           ;main.c: 368: if(health < 50)
  3635  0742  3032               	movlw	50
  3636  0743  0020               	movlb	0	; select bank0
  3637  0744  0240               	subwf	_health,w
  3638  0745  1803               	skipnc
  3639  0746  2F4B               	goto	l1933
  3640                           
  3641                           ;main.c: 369: {
  3642                           ;main.c: 370: health += 10;
  3643  0747  300A               	movlw	10
  3644  0748  00B2               	movwf	??_main
  3645  0749  0832               	movf	??_main,w
  3646  074A  07C0               	addwf	_health,f
  3647  074B                     l1933:	
  3648                           
  3649                           ;main.c: 371: }
  3650                           ;main.c: 372: printf("The blade has been healed. Health = %d.\n\r",
  3651                           ;main.c: 373: health);
  3652  074B  308B               	movlw	low (STR_30| (0+32768))
  3653  074C  00A0               	movwf	printf@f
  3654  074D  3089               	movlw	high (STR_30| (0+32768))
  3655  074E  00A1               	movwf	printf@f+1
  3656  074F  0840               	movf	_health,w
  3657  0750  00B2               	movwf	??_main
  3658  0751  01B3               	clrf	??_main+1
  3659  0752  0832               	movf	??_main,w
  3660  0753  00A2               	movwf	?_printf+2
  3661  0754  0833               	movf	??_main+1,w
  3662  0755  00A3               	movwf	?_printf+3
  3663  0756  3183  2354  3184   	fcall	_printf
  3664                           
  3665                           ;main.c: 375: break;
  3666  0759  2FD8               	goto	l192
  3667  075A                     l1937:	
  3668                           ;main.c: 376: }
  3669                           
  3670                           
  3671                           ;main.c: 377: else if(userInput == 't' && !determine_omega_mode_active())
  3672  075A  3074               	movlw	116
  3673  075B  0020               	movlb	0	; select bank0
  3674  075C  0639               	xorwf	main@userInput,w
  3675  075D  1D03               	btfss	3,2
  3676  075E  2F72               	goto	l1947
  3677  075F  3182  221E  3184   	fcall	_determine_omega_mode_active
  3678  0762  3A00               	xorlw	0
  3679  0763  1D03               	skipz
  3680  0764  2F72               	goto	l1947
  3681                           
  3682                           ;main.c: 378: {
  3683                           ;main.c: 379: stun_counter += 10;
  3684  0765  300A               	movlw	10
  3685  0766  0020               	movlb	0	; select bank0
  3686  0767  00B2               	movwf	??_main
  3687  0768  0832               	movf	??_main,w
  3688  0769  07BF               	addwf	_stun_counter,f
  3689                           
  3690                           ;main.c: 380: printf("The blade has been stunned.\n\r");
  3691  076A  30D4               	movlw	low (STR_31| (0+32768))
  3692  076B  00A0               	movwf	printf@f
  3693  076C  308A               	movlw	high (STR_31| (0+32768))
  3694  076D  00A1               	movwf	printf@f+1
  3695  076E  3183  2354  3184   	fcall	_printf
  3696                           
  3697                           ;main.c: 382: break;
  3698  0771  2FD8               	goto	l192
  3699  0772                     l1947:	
  3700                           ;main.c: 383: }
  3701                           
  3702                           
  3703                           ;main.c: 384: else if(userInput == 'o')
  3704  0772  306F               	movlw	111
  3705  0773  0020               	movlb	0	; select bank0
  3706  0774  0639               	xorwf	main@userInput,w
  3707  0775  1D03               	btfss	3,2
  3708  0776  2F92               	goto	l1959
  3709                           
  3710                           ;main.c: 385: {
  3711                           ;main.c: 386: if(!determine_omega_mode_active())
  3712  0777  3182  221E  3184   	fcall	_determine_omega_mode_active
  3713  077A  3A00               	xorlw	0
  3714  077B  1D03               	skipz
  3715  077C  2F88               	goto	l1955
  3716                           
  3717                           ;main.c: 387: {
  3718                           ;main.c: 388: omega_mode = 1;
  3719  077D  0020               	movlb	0	; select bank0
  3720  077E  01BE               	clrf	_omega_mode
  3721  077F  0ABE               	incf	_omega_mode,f
  3722                           
  3723                           ;main.c: 389: printf("Omega mode enabled.\n\r");
  3724  0780  3075               	movlw	low (STR_32| (0+32768))
  3725  0781  00A0               	movwf	printf@f
  3726  0782  308B               	movlw	high (STR_32| (0+32768))
  3727  0783  00A1               	movwf	printf@f+1
  3728  0784  3183  2354  3184   	fcall	_printf
  3729                           
  3730                           ;main.c: 390: }
  3731  0787  2FD8               	goto	l192
  3732  0788                     l1955:	
  3733                           
  3734                           ;main.c: 391: else
  3735                           ;main.c: 392: {
  3736                           ;main.c: 393: omega_mode = 0;
  3737  0788  0020               	movlb	0	; select bank0
  3738  0789  01BE               	clrf	_omega_mode
  3739                           
  3740                           ;main.c: 394: printf("Omega mode disabled.\n\r");
  3741  078A  305E               	movlw	low (STR_33| (0+32768))
  3742  078B  00A0               	movwf	printf@f
  3743  078C  308B               	movlw	high (STR_33| (0+32768))
  3744  078D  00A1               	movwf	printf@f+1
  3745  078E  3183  2354  3184   	fcall	_printf
  3746                           
  3747                           ;main.c: 395: }
  3748                           ;main.c: 396: break;
  3749  0791  2FD8               	goto	l192
  3750  0792                     l1959:	
  3751                           
  3752                           ;main.c: 397: }
  3753                           ;main.c: 399: userInput = ' ';
  3754  0792  3020               	movlw	32
  3755  0793  0020               	movlb	0	; select bank0
  3756  0794  00B2               	movwf	??_main
  3757  0795  0832               	movf	??_main,w
  3758  0796  00B9               	movwf	main@userInput
  3759  0797                     l1885:	
  3760                           ;main.c: 327: {
  3761                           ;main.c: 328: while( 1 )
  3762                           
  3763                           
  3764                           ;main.c: 329: {
  3765                           ;main.c: 330: userInput = determine_sword_was_swung();
  3766  0797  3182  2260  3184   	fcall	_determine_sword_was_swung
  3767  079A  0020               	movlb	0	; select bank0
  3768  079B  00B2               	movwf	??_main
  3769  079C  0832               	movf	??_main,w
  3770  079D  00B9               	movwf	main@userInput
  3771                           
  3772                           ;main.c: 331: if(userInput == 1)
  3773  079E  0339               	decf	main@userInput,w
  3774  079F  1D03               	btfss	3,2
  3775  07A0  2F17               	goto	l1913
  3776                           
  3777                           ;main.c: 332: {
  3778                           ;main.c: 333: printf("Sword was swung\n\r");
  3779  07A1  30B2               	movlw	low (STR_28| (0+32768))
  3780  07A2  00A0               	movwf	printf@f
  3781  07A3  308B               	movlw	high (STR_28| (0+32768))
  3782  07A4  00A1               	movwf	printf@f+1
  3783  07A5  3183  2354  3184   	fcall	_printf
  3784                           
  3785                           ;main.c: 335: if(!determine_omega_mode_active())
  3786  07A8  3182  221E  3184   	fcall	_determine_omega_mode_active
  3787  07AB  3A00               	xorlw	0
  3788  07AC  1D03               	skipz
  3789  07AD  2F15               	goto	l1911
  3790                           
  3791                           ;main.c: 336: {
  3792                           ;main.c: 337: determine_packets_to_send(&pkt_arr);
  3793  07AE  3035               	movlw	(low (main@pkt_arr| 0))& (0+255)
  3794  07AF  3182  22AE  3184   	fcall	_determine_packets_to_send
  3795                           
  3796                           ;main.c: 339: for(i = 0; i < 3; ++i)
  3797  07B2  0020               	movlb	0	; select bank0
  3798  07B3  01B8               	clrf	main@i
  3799  07B4  3003               	movlw	3
  3800  07B5  0238               	subwf	main@i,w
  3801  07B6  1803               	btfsc	3,0
  3802  07B7  2FD4               	goto	l1909
  3803  07B8                     l1901:	
  3804                           
  3805                           ;main.c: 340: {
  3806                           ;main.c: 341: if(pkt_arr[i] > 0)
  3807  07B8  0838               	movf	main@i,w
  3808  07B9  3E35               	addlw	(low (main@pkt_arr| 0))& (0+255)
  3809  07BA  0086               	movwf	6
  3810  07BB  0187               	clrf	7
  3811  07BC  0801               	movf	1,w
  3812  07BD  1903               	btfsc	3,2
  3813  07BE  2FCB               	goto	l1905
  3814                           
  3815                           ;main.c: 342: {
  3816                           ;main.c: 343: output_ir(i, pkt_arr[i]);
  3817  07BF  0838               	movf	main@i,w
  3818  07C0  3E35               	addlw	(low (main@pkt_arr| 0))& (0+255)
  3819  07C1  0086               	movwf	6
  3820  07C2  0187               	clrf	7
  3821  07C3  0801               	movf	1,w
  3822  07C4  00B2               	movwf	??_main
  3823  07C5  0832               	movf	??_main,w
  3824  07C6  00AE               	movwf	output_ir@amount
  3825  07C7  0838               	movf	main@i,w
  3826  07C8  3182  22F2  3184   	fcall	_output_ir
  3827  07CB                     l1905:	
  3828  07CB  3001               	movlw	1
  3829  07CC  0020               	movlb	0	; select bank0
  3830  07CD  00B2               	movwf	??_main
  3831  07CE  0832               	movf	??_main,w
  3832  07CF  07B8               	addwf	main@i,f
  3833  07D0  3003               	movlw	3
  3834  07D1  0238               	subwf	main@i,w
  3835  07D2  1C03               	skipc
  3836  07D3  2FB8               	goto	l1901
  3837  07D4                     l1909:	
  3838                           
  3839                           ;main.c: 344: }
  3840                           ;main.c: 345: }
  3841                           ;main.c: 346: display_blade_lights(0);
  3842  07D4  3000               	movlw	0
  3843  07D5                     L9:	
  3844  07D5  3182  2280  3184   	fcall	_display_blade_lights
  3845  07D8                     l192:	
  3846                           
  3847                           ;main.c: 400: }
  3848                           ;main.c: 402: GIE = 0;
  3849  07D8  138B               	bcf	11,7	;volatile
  3850  07D9                     l1967:	
  3851                           ;main.c: 403: while(stun_counter > 0)
  3852                           
  3853  07D9  0020               	movlb	0	; select bank0
  3854  07DA  083F               	movf	_stun_counter,w
  3855  07DB  1903               	btfsc	3,2
  3856  07DC  2FEF               	goto	l207
  3857                           
  3858                           ;main.c: 404: {
  3859                           ;main.c: 405: GIE = 1;
  3860  07DD  178B               	bsf	11,7	;volatile
  3861                           
  3862                           ;main.c: 406: _delay((unsigned long)((100)*(32000000/4000.0)));
  3863  07DE  3005               	movlw	5
  3864  07DF  00B4               	movwf	??_main+2
  3865  07E0  300F               	movlw	15
  3866  07E1  00B3               	movwf	??_main+1
  3867  07E2  30F4               	movlw	244
  3868  07E3  00B2               	movwf	??_main
  3869  07E4                     u1987:	
  3870  07E4  0BB2               	decfsz	??_main,f
  3871  07E5  2FE4               	goto	u1987
  3872  07E6  0BB3               	decfsz	??_main+1,f
  3873  07E7  2FE4               	goto	u1987
  3874  07E8  0BB4               	decfsz	??_main+2,f
  3875  07E9  2FE4               	goto	u1987
  3876                           
  3877                           ;main.c: 407: GIE = 0;
  3878  07EA  138B               	bcf	11,7	;volatile
  3879                           
  3880                           ;main.c: 408: --stun_counter;
  3881  07EB  3001               	movlw	1
  3882  07EC  0020               	movlb	0	; select bank0
  3883  07ED  02BF               	subwf	_stun_counter,f
  3884  07EE  2FD9               	goto	l1967
  3885  07EF                     l207:	
  3886                           
  3887                           ;main.c: 409: }
  3888                           ;main.c: 410: GIE = 1;
  3889  07EF  178B               	bsf	11,7	;volatile
  3890  07F0                     l1969:	
  3891                           
  3892                           ;main.c: 411: }
  3893                           ;main.c: 427: printf("\n\r");
  3894  07F0  304B               	movlw	low ((STR_27+33)| (0+32768))
  3895  07F1  00A0               	movwf	printf@f
  3896  07F2  308A               	movlw	high ((STR_27+33)| (0+32768))
  3897  07F3  2CD6               	goto	L5
  3898  07F4                     __end_of_main:	
  3899                           
  3900                           	psect	text1
  3901  0221                     __ptext1:	
  3902 ;; *************** function _waitch *****************
  3903 ;; Defined at:
  3904 ;;		line 76 in file "../../source/uart.c"
  3905 ;; Parameters:    Size  Location     Type
  3906 ;;		None
  3907 ;; Auto vars:     Size  Location     Type
  3908 ;;		None
  3909 ;; Return value:  Size  Location     Type
  3910 ;;                  1    wreg      unsigned char 
  3911 ;; Registers used:
  3912 ;;		wreg
  3913 ;; Tracked objects:
  3914 ;;		On entry : 0/0
  3915 ;;		On exit  : 0/0
  3916 ;;		Unchanged: 0/0
  3917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3922 ;;Total ram usage:        0 bytes
  3923 ;; Hardware stack levels used:    1
  3924 ;; This function calls:
  3925 ;;		Nothing
  3926 ;; This function is called by:
  3927 ;;		_main
  3928 ;; This function uses a non-reentrant model
  3929 ;;
  3930                           
  3931                           
  3932                           ;psect for function _waitch
  3933  0221                     _waitch:	
  3934  0221                     l272:	
  3935                           ;uart.c: 79: {
  3936                           ;uart.c: 80: continue;
  3937                           
  3938                           ;uart.c: 78: while(!RCIF)
  3939                           
  3940                           ;incstack = 0
  3941                           ; Regs used in _waitch: [wreg]
  3942                           
  3943  0221  0020               	movlb	0	; select bank0
  3944  0222  1E91               	btfss	17,5	;volatile
  3945  0223  2A21               	goto	l272
  3946                           
  3947                           ;uart.c: 81: }
  3948                           ;uart.c: 82: return RCREG;
  3949  0224  0023               	movlb	3	; select bank3
  3950  0225  0819               	movf	25,w	;volatile
  3951  0226  0008               	return
  3952  0227                     __end_of_waitch:	
  3953                           
  3954                           	psect	text2
  3955  0297                     __ptext2:	
  3956 ;; *************** function _play_sound *****************
  3957 ;; Defined at:
  3958 ;;		line 32 in file "../../source/function_stubs.c"
  3959 ;; Parameters:    Size  Location     Type
  3960 ;;  sound_select    1    wreg     unsigned char 
  3961 ;; Auto vars:     Size  Location     Type
  3962 ;;  sound_select    1   14[BANK0 ] unsigned char 
  3963 ;; Return value:  Size  Location     Type
  3964 ;;		None               void
  3965 ;; Registers used:
  3966 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3967 ;; Tracked objects:
  3968 ;;		On entry : 0/0
  3969 ;;		On exit  : 0/0
  3970 ;;		Unchanged: 0/0
  3971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3973 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3975 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3976 ;;Total ram usage:        1 bytes
  3977 ;; Hardware stack levels used:    1
  3978 ;; Hardware stack levels required when called:    2
  3979 ;; This function calls:
  3980 ;;		_printf
  3981 ;; This function is called by:
  3982 ;;		_main
  3983 ;; This function uses a non-reentrant model
  3984 ;;
  3985                           
  3986                           
  3987                           ;psect for function _play_sound
  3988  0297                     _play_sound:	
  3989                           
  3990                           ;incstack = 0
  3991                           ; Regs used in _play_sound: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3992                           ;play_sound@sound_selection stored from wreg
  3993  0297  0020               	movlb	0	; select bank0
  3994  0298  00AE               	movwf	play_sound@sound_selection
  3995                           
  3996                           ;function_stubs.c: 34: if(sound_selection == 0)
  3997  0299  082E               	movf	play_sound@sound_selection,w
  3998  029A  1D03               	btfss	3,2
  3999  029B  2AA3               	goto	l1513
  4000                           
  4001                           ;function_stubs.c: 35: {
  4002                           ;function_stubs.c: 36: printf("Played Beta blade swing sound.\n\r");
  4003  029C  3094               	movlw	low (STR_6| (0+32768))
  4004  029D  00A0               	movwf	printf@f
  4005  029E  308A               	movlw	high (STR_6| (0+32768))
  4006  029F  00A1               	movwf	printf@f+1
  4007  02A0  3183  2354         	fcall	_printf
  4008                           
  4009                           ;function_stubs.c: 37: }
  4010  02A2  0008               	return
  4011  02A3                     l1513:	
  4012                           
  4013                           ;function_stubs.c: 38: else if(sound_selection == 1)
  4014  02A3  0020               	movlb	0	; select bank0
  4015  02A4  032E               	decf	play_sound@sound_selection,w
  4016  02A5  1D03               	btfss	3,2
  4017  02A6  0008               	return
  4018                           
  4019                           ;function_stubs.c: 39: {
  4020                           ;function_stubs.c: 40: printf("Played Omega blade swing sound.\n\r");
  4021  02A7  3072               	movlw	low (STR_7| (0+32768))
  4022  02A8  00A0               	movwf	printf@f
  4023  02A9  308A               	movlw	high (STR_7| (0+32768))
  4024  02AA  00A1               	movwf	printf@f+1
  4025  02AB  3183  2354         	fcall	_printf
  4026  02AD  0008               	return
  4027  02AE                     __end_of_play_sound:	
  4028                           
  4029                           	psect	text3
  4030  02F2                     __ptext3:	
  4031 ;; *************** function _output_ir *****************
  4032 ;; Defined at:
  4033 ;;		line 15 in file "../../source/function_stubs.c"
  4034 ;; Parameters:    Size  Location     Type
  4035 ;;  pkt_type        1    wreg     unsigned char 
  4036 ;;  amount          1   14[BANK0 ] unsigned char 
  4037 ;; Auto vars:     Size  Location     Type
  4038 ;;  pkt_type        1   17[BANK0 ] unsigned char 
  4039 ;; Return value:  Size  Location     Type
  4040 ;;		None               void
  4041 ;; Registers used:
  4042 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4043 ;; Tracked objects:
  4044 ;;		On entry : 0/0
  4045 ;;		On exit  : 0/0
  4046 ;;		Unchanged: 0/0
  4047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4048 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4049 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4050 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4051 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4052 ;;Total ram usage:        4 bytes
  4053 ;; Hardware stack levels used:    1
  4054 ;; Hardware stack levels required when called:    2
  4055 ;; This function calls:
  4056 ;;		_printf
  4057 ;; This function is called by:
  4058 ;;		_main
  4059 ;; This function uses a non-reentrant model
  4060 ;;
  4061                           
  4062                           
  4063                           ;psect for function _output_ir
  4064  02F2                     _output_ir:	
  4065                           
  4066                           ;incstack = 0
  4067                           ; Regs used in _output_ir: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4068                           ;output_ir@pkt_type stored from wreg
  4069  02F2  0020               	movlb	0	; select bank0
  4070  02F3  00B1               	movwf	output_ir@pkt_type
  4071                           
  4072                           ;function_stubs.c: 17: printf("Sent %d ", amount);
  4073  02F4  30D8               	movlw	low (STR_2| (0+32768))
  4074  02F5  00A0               	movwf	printf@f
  4075  02F6  308B               	movlw	high (STR_2| (0+32768))
  4076  02F7  00A1               	movwf	printf@f+1
  4077  02F8  082E               	movf	output_ir@amount,w
  4078  02F9  00AF               	movwf	??_output_ir
  4079  02FA  01B0               	clrf	??_output_ir+1
  4080  02FB  082F               	movf	??_output_ir,w
  4081  02FC  00A2               	movwf	?_printf+2
  4082  02FD  0830               	movf	??_output_ir+1,w
  4083  02FE  00A3               	movwf	?_printf+3
  4084  02FF  3183  2354  3182   	fcall	_printf
  4085                           
  4086                           ;function_stubs.c: 18: if(pkt_type == 0)
  4087  0302  0020               	movlb	0	; select bank0
  4088  0303  0831               	movf	output_ir@pkt_type,w
  4089  0304  1D03               	btfss	3,2
  4090  0305  2B0D               	goto	l1503
  4091                           
  4092                           ;function_stubs.c: 19: {
  4093                           ;function_stubs.c: 20: printf("damage.\n\r");
  4094  0306  30C4               	movlw	low (STR_3| (0+32768))
  4095  0307  00A0               	movwf	printf@f
  4096  0308  308B               	movlw	high (STR_3| (0+32768))
  4097  0309  00A1               	movwf	printf@f+1
  4098  030A  3183  2354         	fcall	_printf
  4099                           
  4100                           ;function_stubs.c: 21: }
  4101  030C  0008               	return
  4102  030D                     l1503:	
  4103                           
  4104                           ;function_stubs.c: 22: else if(pkt_type == 1)
  4105  030D  0020               	movlb	0	; select bank0
  4106  030E  0331               	decf	output_ir@pkt_type,w
  4107  030F  1D03               	btfss	3,2
  4108  0310  2B18               	goto	l1507
  4109                           
  4110                           ;function_stubs.c: 23: {
  4111                           ;function_stubs.c: 24: printf("health.\n\r");
  4112  0311  30CE               	movlw	low (STR_4| (0+32768))
  4113  0312  00A0               	movwf	printf@f
  4114  0313  308B               	movlw	high (STR_4| (0+32768))
  4115  0314  00A1               	movwf	printf@f+1
  4116  0315  3183  2354         	fcall	_printf
  4117                           
  4118                           ;function_stubs.c: 25: }
  4119  0317  0008               	return
  4120  0318                     l1507:	
  4121                           
  4122                           ;function_stubs.c: 26: else
  4123                           ;function_stubs.c: 27: {
  4124                           ;function_stubs.c: 28: printf("stun.\n\r");
  4125  0318  30E1               	movlw	low (STR_5| (0+32768))
  4126  0319  0020               	movlb	0	; select bank0
  4127  031A  00A0               	movwf	printf@f
  4128  031B  308B               	movlw	high (STR_5| (0+32768))
  4129  031C  00A1               	movwf	printf@f+1
  4130  031D  3183  2354         	fcall	_printf
  4131  031F  0008               	return
  4132  0320                     __end_of_output_ir:	
  4133                           
  4134                           	psect	text4
  4135  026E                     __ptext4:	
  4136 ;; *************** function _init_uart *****************
  4137 ;; Defined at:
  4138 ;;		line 11 in file "../../source/uart.c"
  4139 ;; Parameters:    Size  Location     Type
  4140 ;;		None
  4141 ;; Auto vars:     Size  Location     Type
  4142 ;;		None
  4143 ;; Return value:  Size  Location     Type
  4144 ;;		None               void
  4145 ;; Registers used:
  4146 ;;		wreg, status,2, status,0
  4147 ;; Tracked objects:
  4148 ;;		On entry : 0/0
  4149 ;;		On exit  : 0/0
  4150 ;;		Unchanged: 0/0
  4151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4154 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4155 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4156 ;;Total ram usage:        1 bytes
  4157 ;; Hardware stack levels used:    1
  4158 ;; This function calls:
  4159 ;;		Nothing
  4160 ;; This function is called by:
  4161 ;;		_main
  4162 ;; This function uses a non-reentrant model
  4163 ;;
  4164                           
  4165                           
  4166                           ;psect for function _init_uart
  4167  026E                     _init_uart:	
  4168                           
  4169                           ;uart.c: 14: TRISC &= 10111111;
  4170                           
  4171                           ;incstack = 0
  4172                           ; Regs used in _init_uart: [wreg+status,2+status,0]
  4173  026E  3087               	movlw	135
  4174  026F  00F0               	movwf	??_init_uart
  4175  0270  0870               	movf	??_init_uart,w
  4176  0271  0021               	movlb	1	; select bank1
  4177  0272  058E               	andwf	14,f	;volatile
  4178                           
  4179                           ;uart.c: 17: TRISC |= 10000000;
  4180  0273  178E               	bsf	14,7	;volatile
  4181                           
  4182                           ;uart.c: 20: SPBRG = 51;
  4183  0274  3033               	movlw	51
  4184  0275  0023               	movlb	3	; select bank3
  4185  0276  009B               	movwf	27	;volatile
  4186                           
  4187                           ;uart.c: 21: BRGH = 0;
  4188  0277  111E               	bcf	30,2	;volatile
  4189                           
  4190                           ;uart.c: 22: BRG16 = 0;
  4191  0278  119F               	bcf	31,3	;volatile
  4192                           
  4193                           ;uart.c: 27: SYNC = 0;
  4194  0279  121E               	bcf	30,4	;volatile
  4195                           
  4196                           ;uart.c: 28: SPEN = 1;
  4197  027A  179D               	bsf	29,7	;volatile
  4198                           
  4199                           ;uart.c: 29: TXEN = 1;
  4200  027B  169E               	bsf	30,5	;volatile
  4201                           
  4202                           ;uart.c: 30: CREN = 1;
  4203  027C  161D               	bsf	29,4	;volatile
  4204                           
  4205                           ;uart.c: 31: RCIE = 1;
  4206  027D  0021               	movlb	1	; select bank1
  4207  027E  1691               	bsf	17,5	;volatile
  4208  027F  0008               	return
  4209  0280                     __end_of_init_uart:	
  4210                           
  4211                           	psect	text5
  4212  0255                     __ptext5:	
  4213 ;; *************** function _init_pic *****************
  4214 ;; Defined at:
  4215 ;;		line 458 in file "../../source/main.c"
  4216 ;; Parameters:    Size  Location     Type
  4217 ;;		None
  4218 ;; Auto vars:     Size  Location     Type
  4219 ;;		None
  4220 ;; Return value:  Size  Location     Type
  4221 ;;		None               void
  4222 ;; Registers used:
  4223 ;;		wreg, status,2, status,0
  4224 ;; Tracked objects:
  4225 ;;		On entry : 0/0
  4226 ;;		On exit  : 0/0
  4227 ;;		Unchanged: 0/0
  4228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4231 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4232 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4233 ;;Total ram usage:        1 bytes
  4234 ;; Hardware stack levels used:    1
  4235 ;; This function calls:
  4236 ;;		Nothing
  4237 ;; This function is called by:
  4238 ;;		_main
  4239 ;; This function uses a non-reentrant model
  4240 ;;
  4241                           
  4242                           
  4243                           ;psect for function _init_pic
  4244  0255                     _init_pic:	
  4245                           
  4246                           ;main.c: 461: OSCCON |= 0b11111000;
  4247                           
  4248                           ;incstack = 0
  4249                           ; Regs used in _init_pic: [wreg+status,2+status,0]
  4250  0255  30F8               	movlw	248
  4251  0256  00F0               	movwf	??_init_pic
  4252  0257  0870               	movf	??_init_pic,w
  4253  0258  0021               	movlb	1	; select bank1
  4254  0259  0499               	iorwf	25,f	;volatile
  4255                           
  4256                           ;main.c: 464: TRISB &= 0b11110111;
  4257  025A  30F7               	movlw	247
  4258  025B  00F0               	movwf	??_init_pic
  4259  025C  0870               	movf	??_init_pic,w
  4260  025D  058D               	andwf	13,f	;volatile
  4261                           
  4262                           ;main.c: 467: GIE = 1;
  4263  025E  178B               	bsf	11,7	;volatile
  4264  025F  0008               	return
  4265  0260                     __end_of_init_pic:	
  4266                           
  4267                           	psect	text6
  4268  024D                     __ptext6:	
  4269 ;; *************** function _init_leds *****************
  4270 ;; Defined at:
  4271 ;;		line 76 in file "../../source/function_stubs.c"
  4272 ;; Parameters:    Size  Location     Type
  4273 ;;		None
  4274 ;; Auto vars:     Size  Location     Type
  4275 ;;		None
  4276 ;; Return value:  Size  Location     Type
  4277 ;;		None               void
  4278 ;; Registers used:
  4279 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4280 ;; Tracked objects:
  4281 ;;		On entry : 0/0
  4282 ;;		On exit  : 0/0
  4283 ;;		Unchanged: 0/0
  4284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4289 ;;Total ram usage:        0 bytes
  4290 ;; Hardware stack levels used:    1
  4291 ;; Hardware stack levels required when called:    2
  4292 ;; This function calls:
  4293 ;;		_printf
  4294 ;; This function is called by:
  4295 ;;		_main
  4296 ;; This function uses a non-reentrant model
  4297 ;;
  4298                           
  4299                           
  4300                           ;psect for function _init_leds
  4301  024D                     _init_leds:	
  4302                           
  4303                           ;function_stubs.c: 78: printf("Initialized LEDs.\n\r");
  4304                           
  4305                           ;incstack = 0
  4306                           ; Regs used in _init_leds: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4307  024D  308B               	movlw	low (STR_9| (0+32768))
  4308  024E  0020               	movlb	0	; select bank0
  4309  024F  00A0               	movwf	printf@f
  4310  0250  308B               	movlw	high (STR_9| (0+32768))
  4311  0251  00A1               	movwf	printf@f+1
  4312  0252  3183  2354         	fcall	_printf
  4313  0254  0008               	return
  4314  0255                     __end_of_init_leds:	
  4315                           
  4316                           	psect	text7
  4317  0245                     __ptext7:	
  4318 ;; *************** function _init_isr *****************
  4319 ;; Defined at:
  4320 ;;		line 93 in file "../../source/function_stubs.c"
  4321 ;; Parameters:    Size  Location     Type
  4322 ;;		None
  4323 ;; Auto vars:     Size  Location     Type
  4324 ;;		None
  4325 ;; Return value:  Size  Location     Type
  4326 ;;		None               void
  4327 ;; Registers used:
  4328 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4329 ;; Tracked objects:
  4330 ;;		On entry : 0/0
  4331 ;;		On exit  : 0/0
  4332 ;;		Unchanged: 0/0
  4333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4338 ;;Total ram usage:        0 bytes
  4339 ;; Hardware stack levels used:    1
  4340 ;; Hardware stack levels required when called:    2
  4341 ;; This function calls:
  4342 ;;		_printf
  4343 ;; This function is called by:
  4344 ;;		_main
  4345 ;; This function uses a non-reentrant model
  4346 ;;
  4347                           
  4348                           
  4349                           ;psect for function _init_isr
  4350  0245                     _init_isr:	
  4351                           
  4352                           ;function_stubs.c: 95: printf("Initialized ISR.\n\r");
  4353                           
  4354                           ;incstack = 0
  4355                           ; Regs used in _init_isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4356  0245  309F               	movlw	low (STR_12| (0+32768))
  4357  0246  0020               	movlb	0	; select bank0
  4358  0247  00A0               	movwf	printf@f
  4359  0248  308B               	movlw	high (STR_12| (0+32768))
  4360  0249  00A1               	movwf	printf@f+1
  4361  024A  3183  2354         	fcall	_printf
  4362  024C  0008               	return
  4363  024D                     __end_of_init_isr:	
  4364                           
  4365                           	psect	text8
  4366  023D                     __ptext8:	
  4367 ;; *************** function _init_ir *****************
  4368 ;; Defined at:
  4369 ;;		line 10 in file "../../source/function_stubs.c"
  4370 ;; Parameters:    Size  Location     Type
  4371 ;;		None
  4372 ;; Auto vars:     Size  Location     Type
  4373 ;;		None
  4374 ;; Return value:  Size  Location     Type
  4375 ;;		None               void
  4376 ;; Registers used:
  4377 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4378 ;; Tracked objects:
  4379 ;;		On entry : 0/0
  4380 ;;		On exit  : 0/0
  4381 ;;		Unchanged: 0/0
  4382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4387 ;;Total ram usage:        0 bytes
  4388 ;; Hardware stack levels used:    1
  4389 ;; Hardware stack levels required when called:    2
  4390 ;; This function calls:
  4391 ;;		_printf
  4392 ;; This function is called by:
  4393 ;;		_main
  4394 ;; This function uses a non-reentrant model
  4395 ;;
  4396                           
  4397                           
  4398                           ;psect for function _init_ir
  4399  023D                     _init_ir:	
  4400                           
  4401                           ;function_stubs.c: 12: printf("Initialized IR send/receive code.\n\r");
  4402                           
  4403                           ;incstack = 0
  4404                           ; Regs used in _init_ir: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4405  023D  304E               	movlw	low (STR_1| (0+32768))
  4406  023E  0020               	movlb	0	; select bank0
  4407  023F  00A0               	movwf	printf@f
  4408  0240  308A               	movlw	high (STR_1| (0+32768))
  4409  0241  00A1               	movwf	printf@f+1
  4410  0242  3183  2354         	fcall	_printf
  4411  0244  0008               	return
  4412  0245                     __end_of_init_ir:	
  4413                           
  4414                           	psect	text9
  4415  0235                     __ptext9:	
  4416 ;; *************** function _init_accel *****************
  4417 ;; Defined at:
  4418 ;;		line 44 in file "../../source/function_stubs.c"
  4419 ;; Parameters:    Size  Location     Type
  4420 ;;		None
  4421 ;; Auto vars:     Size  Location     Type
  4422 ;;		None
  4423 ;; Return value:  Size  Location     Type
  4424 ;;		None               void
  4425 ;; Registers used:
  4426 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4427 ;; Tracked objects:
  4428 ;;		On entry : 0/0
  4429 ;;		On exit  : 0/0
  4430 ;;		Unchanged: 0/0
  4431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4436 ;;Total ram usage:        0 bytes
  4437 ;; Hardware stack levels used:    1
  4438 ;; Hardware stack levels required when called:    2
  4439 ;; This function calls:
  4440 ;;		_printf
  4441 ;; This function is called by:
  4442 ;;		_main
  4443 ;; This function uses a non-reentrant model
  4444 ;;
  4445                           
  4446                           
  4447                           ;psect for function _init_accel
  4448  0235                     _init_accel:	
  4449                           
  4450                           ;function_stubs.c: 46: printf("Initialized accelerometer.\n\r");
  4451                           
  4452                           ;incstack = 0
  4453                           ; Regs used in _init_accel: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4454  0235  30F2               	movlw	low (STR_8| (0+32768))
  4455  0236  0020               	movlb	0	; select bank0
  4456  0237  00A0               	movwf	printf@f
  4457  0238  308A               	movlw	high (STR_8| (0+32768))
  4458  0239  00A1               	movwf	printf@f+1
  4459  023A  3183  2354         	fcall	_printf
  4460  023C  0008               	return
  4461  023D                     __end_of_init_accel:	
  4462                           
  4463                           	psect	text10
  4464  0280                     __ptext10:	
  4465 ;; *************** function _display_blade_lights *****************
  4466 ;; Defined at:
  4467 ;;		line 81 in file "../../source/function_stubs.c"
  4468 ;; Parameters:    Size  Location     Type
  4469 ;;  mode            1    wreg     unsigned char 
  4470 ;; Auto vars:     Size  Location     Type
  4471 ;;  mode            1   14[BANK0 ] unsigned char 
  4472 ;; Return value:  Size  Location     Type
  4473 ;;		None               void
  4474 ;; Registers used:
  4475 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4476 ;; Tracked objects:
  4477 ;;		On entry : 0/0
  4478 ;;		On exit  : 0/0
  4479 ;;		Unchanged: 0/0
  4480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4482 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4484 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4485 ;;Total ram usage:        1 bytes
  4486 ;; Hardware stack levels used:    1
  4487 ;; Hardware stack levels required when called:    2
  4488 ;; This function calls:
  4489 ;;		_printf
  4490 ;; This function is called by:
  4491 ;;		_main
  4492 ;; This function uses a non-reentrant model
  4493 ;;
  4494                           
  4495                           
  4496                           ;psect for function _display_blade_lights
  4497  0280                     _display_blade_lights:	
  4498                           
  4499                           ;incstack = 0
  4500                           ; Regs used in _display_blade_lights: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4501                           ;display_blade_lights@mode stored from wreg
  4502  0280  0020               	movlb	0	; select bank0
  4503  0281  00AE               	movwf	display_blade_lights@mode
  4504                           
  4505                           ;function_stubs.c: 83: if(mode == 0)
  4506  0282  082E               	movf	display_blade_lights@mode,w
  4507  0283  1D03               	btfss	3,2
  4508  0284  2A8C               	goto	l1547
  4509                           
  4510                           ;function_stubs.c: 84: {
  4511                           ;function_stubs.c: 85: printf("Displayed individual sword swing light show.\n\r");
  4512  0285  3031               	movlw	low (STR_10| (0+32768))
  4513  0286  00A0               	movwf	printf@f
  4514  0287  3089               	movlw	high (STR_10| (0+32768))
  4515  0288  00A1               	movwf	printf@f+1
  4516  0289  3183  2354         	fcall	_printf
  4517                           
  4518                           ;function_stubs.c: 86: }
  4519  028B  0008               	return
  4520  028C                     l1547:	
  4521                           
  4522                           ;function_stubs.c: 87: else if(mode == 1)
  4523  028C  0020               	movlb	0	; select bank0
  4524  028D  032E               	decf	display_blade_lights@mode,w
  4525  028E  1D03               	btfss	3,2
  4526  028F  0008               	return
  4527                           
  4528                           ;function_stubs.c: 88: {
  4529                           ;function_stubs.c: 89: printf("Displayed Omega blade swing light show.\n\r");
  4530  0290  30B5               	movlw	low (STR_11| (0+32768))
  4531  0291  00A0               	movwf	printf@f
  4532  0292  3089               	movlw	high (STR_11| (0+32768))
  4533  0293  00A1               	movwf	printf@f+1
  4534  0294  3183  2354         	fcall	_printf
  4535  0296  0008               	return
  4536  0297                     __end_of_display_blade_lights:	
  4537                           
  4538                           	psect	text11
  4539  0354                     __ptext11:	
  4540 ;; *************** function _printf *****************
  4541 ;; Defined at:
  4542 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  4543 ;; Parameters:    Size  Location     Type
  4544 ;;  f               2    0[BANK0 ] PTR const unsigned char 
  4545 ;;		 -> STR_53(26), STR_52(49), STR_51(31), STR_50(25), 
  4546 ;;		 -> STR_49(3), STR_48(23), STR_47(22), STR_46(30), 
  4547 ;;		 -> STR_45(42), STR_44(43), STR_43(18), STR_42(23), 
  4548 ;;		 -> STR_41(22), STR_40(30), STR_39(42), STR_38(43), 
  4549 ;;		 -> STR_37(18), STR_36(23), STR_35(22), STR_34(18), 
  4550 ;;		 -> STR_33(23), STR_32(22), STR_31(30), STR_30(42), 
  4551 ;;		 -> STR_29(43), STR_28(18), STR_27(36), STR_26(66), 
  4552 ;;		 -> STR_25(53), STR_24(28), STR_23(4), STR_22(4), 
  4553 ;;		 -> STR_21(38), STR_20(28), STR_19(4), STR_18(4), 
  4554 ;;		 -> STR_17(4), STR_16(4), STR_15(37), STR_14(65), 
  4555 ;;		 -> STR_13(62), STR_12(19), STR_11(42), STR_10(47), 
  4556 ;;		 -> STR_9(20), STR_8(29), STR_7(34), STR_6(33), 
  4557 ;;		 -> STR_5(8), STR_4(10), STR_3(10), STR_2(9), 
  4558 ;;		 -> STR_1(36), 
  4559 ;; Auto vars:     Size  Location     Type
  4560 ;;  tmpval          4    0        struct .
  4561 ;;  val             2   11[BANK0 ] unsigned int 
  4562 ;;  cp              2    0        PTR const unsigned char 
  4563 ;;  len             2    0        unsigned int 
  4564 ;;  c               1   13[BANK0 ] char 
  4565 ;;  prec            1   10[BANK0 ] char 
  4566 ;;  flag            1    9[BANK0 ] unsigned char 
  4567 ;;  ap              1    8[BANK0 ] PTR void [1]
  4568 ;;		 -> ?_printf(2), 
  4569 ;; Return value:  Size  Location     Type
  4570 ;;                  2    0[BANK0 ] int 
  4571 ;; Registers used:
  4572 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4573 ;; Tracked objects:
  4574 ;;		On entry : 0/0
  4575 ;;		On exit  : 0/0
  4576 ;;		Unchanged: 0/0
  4577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4578 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4579 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4580 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4581 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4582 ;;Total ram usage:       14 bytes
  4583 ;; Hardware stack levels used:    1
  4584 ;; Hardware stack levels required when called:    1
  4585 ;; This function calls:
  4586 ;;		___lwdiv
  4587 ;;		___lwmod
  4588 ;;		_putch
  4589 ;; This function is called by:
  4590 ;;		_init_ir
  4591 ;;		_output_ir
  4592 ;;		_play_sound
  4593 ;;		_init_accel
  4594 ;;		_init_leds
  4595 ;;		_display_blade_lights
  4596 ;;		_init_isr
  4597 ;;		_main
  4598 ;;		_uart_test
  4599 ;; This function uses a non-reentrant model
  4600 ;;
  4601                           
  4602                           
  4603                           ;psect for function _printf
  4604  0354                     _printf:	
  4605                           
  4606                           ;doprnt.c: 466: va_list ap;
  4607                           ;doprnt.c: 499: signed char c;
  4608                           ;doprnt.c: 506: signed char prec;
  4609                           ;doprnt.c: 508: unsigned char flag;
  4610                           ;doprnt.c: 523: union {
  4611                           ;doprnt.c: 524: unsigned long vd;
  4612                           ;doprnt.c: 525: double integ;
  4613                           ;doprnt.c: 526: } tmpval;
  4614                           ;doprnt.c: 528: unsigned int val;
  4615                           ;doprnt.c: 529: unsigned len;
  4616                           ;doprnt.c: 530: const char * cp;
  4617                           ;doprnt.c: 533: *ap = __va_start();
  4618                           
  4619                           ;incstack = 0
  4620                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4621  0354  3022               	movlw	(low ((?_printf| 0+2)))& (0+255)
  4622  0355  0020               	movlb	0	; select bank0
  4623  0356  00A4               	movwf	??_printf
  4624  0357  0824               	movf	??_printf,w
  4625  0358  00A8               	movwf	printf@ap
  4626  0359                     l1487:	
  4627                           ;doprnt.c: 536: while(c = *f++) {
  4628                           
  4629  0359  0020               	movlb	0	; select bank0
  4630  035A  0821               	movf	printf@f+1,w
  4631  035B  00A5               	movwf	??_printf+1
  4632  035C  0820               	movf	printf@f,w
  4633  035D  00A4               	movwf	??_printf
  4634  035E  0AA0               	incf	printf@f,f
  4635  035F  1903               	skipnz
  4636  0360  0AA1               	incf	printf@f+1,f
  4637  0361  0824               	movf	??_printf,w
  4638  0362  0084               	movwf	4
  4639  0363  0825               	movf	??_printf+1,w
  4640  0364  0085               	movwf	5
  4641  0365  0800               	movf	0,w	;code access
  4642  0366  00A6               	movwf	??_printf+2
  4643  0367  0826               	movf	??_printf+2,w
  4644  0368  00AD               	movwf	printf@c
  4645  0369  082D               	movf	printf@c,w
  4646  036A  1903               	btfsc	3,2
  4647  036B  0008               	return
  4648                           
  4649                           ;doprnt.c: 538: if(c != '%')
  4650  036C  3025               	movlw	37
  4651  036D  062D               	xorwf	printf@c,w
  4652  036E  1903               	btfsc	3,2
  4653  036F  2B75               	goto	l1447
  4654                           
  4655                           ;doprnt.c: 540: {
  4656                           ;doprnt.c: 541: (putch(c) );
  4657  0370  082D               	movf	printf@c,w
  4658  0371  3182  222E  3183   	fcall	_putch
  4659                           
  4660                           ;doprnt.c: 542: continue;
  4661  0374  2B59               	goto	l1487
  4662  0375                     l1447:	
  4663                           
  4664                           ;doprnt.c: 543: }
  4665                           ;doprnt.c: 548: flag = 0;
  4666  0375  0020               	movlb	0	; select bank0
  4667  0376  01A9               	clrf	printf@flag
  4668                           
  4669                           ;doprnt.c: 822: }
  4670                           
  4671                           ;doprnt.c: 813: continue;
  4672                           
  4673                           ;doprnt.c: 802: default:
  4674                           
  4675                           ;doprnt.c: 698: case 'i':
  4676                           ;doprnt.c: 699: break;
  4677                           
  4678                           ;doprnt.c: 697: case 'd':
  4679                           
  4680                           ;doprnt.c: 638: goto alldone;
  4681                           
  4682                           ;doprnt.c: 637: case 0:
  4683                           
  4684                           ;doprnt.c: 635: switch(c = *f++) {
  4685  0377  0821               	movf	printf@f+1,w
  4686  0378  00A5               	movwf	??_printf+1
  4687  0379  0820               	movf	printf@f,w
  4688  037A  00A4               	movwf	??_printf
  4689  037B  0AA0               	incf	printf@f,f
  4690  037C  1903               	skipnz
  4691  037D  0AA1               	incf	printf@f+1,f
  4692  037E  0824               	movf	??_printf,w
  4693  037F  0084               	movwf	4
  4694  0380  0825               	movf	??_printf+1,w
  4695  0381  0085               	movwf	5
  4696  0382  0800               	movf	0,w	;code access
  4697  0383  00AD               	movwf	printf@c
  4698                           
  4699                           ; Switch size 1, requested type "space"
  4700                           ; Number of cases is 3, Range of values is 0 to 105
  4701                           ; switch strategies available:
  4702                           ; Name         Instructions Cycles
  4703                           ; simple_byte           10     6 (average)
  4704                           ; direct_byte          218     6 (fixed)
  4705                           ; jumptable            260     6 (fixed)
  4706                           ;	Chosen strategy is simple_byte
  4707  0384  3A00               	xorlw	0	; case 0
  4708  0385  1903               	skipnz
  4709  0386  2C0A               	goto	l313
  4710  0387  3A64               	xorlw	100	; case 100
  4711  0388  1903               	skipnz
  4712  0389  2B8E               	goto	l1453
  4713  038A  3A0D               	xorlw	13	; case 105
  4714  038B  1903               	skipnz
  4715  038C  2B8E               	goto	l1453
  4716  038D  2B59               	goto	l1487
  4717  038E                     l1453:	
  4718                           
  4719                           ;doprnt.c: 1253: {
  4720                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  4721  038E  0828               	movf	printf@ap,w
  4722  038F  0086               	movwf	6
  4723  0390  0187               	clrf	7
  4724  0391  3F40               	moviw [0]fsr1
  4725  0392  00AB               	movwf	printf@val
  4726  0393  3F41               	moviw [1]fsr1
  4727  0394  00AC               	movwf	printf@val+1
  4728  0395  3002               	movlw	2
  4729  0396  00A4               	movwf	??_printf
  4730  0397  0824               	movf	??_printf,w
  4731  0398  07A8               	addwf	printf@ap,f
  4732                           
  4733                           ;doprnt.c: 1261: if((int)val < 0) {
  4734  0399  1FAC               	btfss	printf@val+1,7
  4735  039A  2BA4               	goto	l1463
  4736                           
  4737                           ;doprnt.c: 1262: flag |= 0x03;
  4738  039B  3003               	movlw	3
  4739  039C  00A4               	movwf	??_printf
  4740  039D  0824               	movf	??_printf,w
  4741  039E  04A9               	iorwf	printf@flag,f
  4742                           
  4743                           ;doprnt.c: 1263: val = -val;
  4744  039F  09AB               	comf	printf@val,f
  4745  03A0  09AC               	comf	printf@val+1,f
  4746  03A1  0AAB               	incf	printf@val,f
  4747  03A2  1903               	skipnz
  4748  03A3  0AAC               	incf	printf@val+1,f
  4749  03A4                     l1463:	
  4750                           
  4751                           ;doprnt.c: 1264: }
  4752                           ;doprnt.c: 1266: }
  4753                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4754  03A4  01AD               	clrf	printf@c
  4755  03A5  0AAD               	incf	printf@c,f
  4756  03A6  3005               	movlw	5
  4757  03A7  062D               	xorwf	printf@c,w
  4758  03A8  1903               	btfsc	3,2
  4759  03A9  2BC9               	goto	l1475
  4760  03AA                     l1469:	
  4761                           
  4762                           ;doprnt.c: 1306: if(val < dpowers[c])
  4763  03AA  082D               	movf	printf@c,w
  4764  03AB  00A4               	movwf	??_printf
  4765  03AC  01A5               	clrf	??_printf+1
  4766  03AD  35A4               	lslf	??_printf,f
  4767  03AE  0DA5               	rlf	??_printf+1,f
  4768  03AF  3000               	movlw	low (_dpowers| (0+32768))
  4769  03B0  0724               	addwf	??_printf,w
  4770  03B1  0084               	movwf	4
  4771  03B2  3088               	movlw	high (_dpowers| (0+32768))
  4772  03B3  3D25               	addwfc	??_printf+1,w
  4773  03B4  0085               	movwf	5
  4774  03B5  3F00               	moviw [0]fsr0
  4775  03B6  00A6               	movwf	??_printf+2
  4776  03B7  3F01               	moviw [1]fsr0
  4777  03B8  00A7               	movwf	??_printf+3
  4778  03B9  0827               	movf	??_printf+3,w
  4779  03BA  022C               	subwf	printf@val+1,w
  4780  03BB  1D03               	skipz
  4781  03BC  2BBF               	goto	u1155
  4782  03BD  0826               	movf	??_printf+2,w
  4783  03BE  022B               	subwf	printf@val,w
  4784  03BF                     u1155:	
  4785  03BF  1C03               	btfss	3,0
  4786  03C0  2BC9               	goto	l1475
  4787                           
  4788                           ;doprnt.c: 1307: break;
  4789  03C1  3001               	movlw	1
  4790  03C2  00A4               	movwf	??_printf
  4791  03C3  0824               	movf	??_printf,w
  4792  03C4  07AD               	addwf	printf@c,f
  4793  03C5  3005               	movlw	5
  4794  03C6  062D               	xorwf	printf@c,w
  4795  03C7  1D03               	btfss	3,2
  4796  03C8  2BAA               	goto	l1469
  4797  03C9                     l1475:	
  4798                           
  4799                           ;doprnt.c: 1422: {
  4800                           ;doprnt.c: 1438: if(flag & 0x03)
  4801  03C9  0829               	movf	printf@flag,w
  4802  03CA  3903               	andlw	3
  4803  03CB  1903               	btfsc	3,2
  4804  03CC  2BD1               	goto	l1479
  4805                           
  4806                           ;doprnt.c: 1439: (putch('-') );
  4807  03CD  302D               	movlw	45
  4808  03CE  3182  222E  3183   	fcall	_putch
  4809  03D1                     l1479:	
  4810                           
  4811                           ;doprnt.c: 1469: }
  4812                           ;doprnt.c: 1472: prec = c;
  4813  03D1  0020               	movlb	0	; select bank0
  4814  03D2  082D               	movf	printf@c,w
  4815  03D3  00A4               	movwf	??_printf
  4816  03D4  0824               	movf	??_printf,w
  4817  03D5  00AA               	movwf	printf@prec
  4818  03D6                     l1485:	
  4819                           ;doprnt.c: 1474: while(prec--) {
  4820                           
  4821  03D6  30FF               	movlw	255
  4822  03D7  0020               	movlb	0	; select bank0
  4823  03D8  00A4               	movwf	??_printf
  4824  03D9  0824               	movf	??_printf,w
  4825  03DA  07AA               	addwf	printf@prec,f
  4826  03DB  0A2A               	incf	printf@prec,w
  4827  03DC  1903               	btfsc	3,2
  4828  03DD  2B59               	goto	l1487
  4829                           
  4830                           ;doprnt.c: 1478: {
  4831                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  4832  03DE  300A               	movlw	10
  4833  03DF  00F8               	movwf	___lwmod@divisor
  4834  03E0  3000               	movlw	0
  4835  03E1  00F9               	movwf	___lwmod@divisor+1
  4836  03E2  082A               	movf	printf@prec,w
  4837  03E3  00A4               	movwf	??_printf
  4838  03E4  01A5               	clrf	??_printf+1
  4839  03E5  35A4               	lslf	??_printf,f
  4840  03E6  0DA5               	rlf	??_printf+1,f
  4841  03E7  3000               	movlw	low (_dpowers| (0+32768))
  4842  03E8  0724               	addwf	??_printf,w
  4843  03E9  0084               	movwf	4
  4844  03EA  3088               	movlw	high (_dpowers| (0+32768))
  4845  03EB  3D25               	addwfc	??_printf+1,w
  4846  03EC  0085               	movwf	5
  4847  03ED  3F00               	moviw [0]fsr0
  4848  03EE  00F0               	movwf	___lwdiv@divisor
  4849  03EF  3F01               	moviw [1]fsr0
  4850  03F0  00F1               	movwf	___lwdiv@divisor+1
  4851  03F1  082C               	movf	printf@val+1,w
  4852  03F2  00F3               	movwf	___lwdiv@dividend+1
  4853  03F3  082B               	movf	printf@val,w
  4854  03F4  00F2               	movwf	___lwdiv@dividend
  4855  03F5  3183  2320  3183   	fcall	___lwdiv
  4856  03F8  0871               	movf	?___lwdiv+1,w
  4857  03F9  00FB               	movwf	___lwmod@dividend+1
  4858  03FA  0870               	movf	?___lwdiv,w
  4859  03FB  00FA               	movwf	___lwmod@dividend
  4860  03FC  3182  22C6  3183   	fcall	___lwmod
  4861  03FF  0878               	movf	?___lwmod,w
  4862  0400  3E30               	addlw	48
  4863  0401  0020               	movlb	0	; select bank0
  4864  0402  00A6               	movwf	??_printf+2
  4865  0403  0826               	movf	??_printf+2,w
  4866  0404  00AD               	movwf	printf@c
  4867                           
  4868                           ;doprnt.c: 1523: }
  4869                           ;doprnt.c: 1524: (putch(c) );
  4870  0405  082D               	movf	printf@c,w
  4871  0406  3182  222E  3183   	fcall	_putch
  4872  0409  2BD6               	goto	l1485
  4873  040A                     l313:	
  4874                           ;doprnt.c: 1540: return 0;
  4875                           ;	Return value of _printf is never used
  4876                           
  4877                           ;doprnt.c: 1525: }
  4878                           ;doprnt.c: 1533: }
  4879                           ;doprnt.c: 1535: alldone:
  4880                           
  4881  040A  0008               	return
  4882  040B                     __end_of_printf:	
  4883                           
  4884                           	psect	text12
  4885  022E                     __ptext12:	
  4886 ;; *************** function _putch *****************
  4887 ;; Defined at:
  4888 ;;		line 41 in file "../../source/uart.c"
  4889 ;; Parameters:    Size  Location     Type
  4890 ;;  input           1    wreg     unsigned char 
  4891 ;; Auto vars:     Size  Location     Type
  4892 ;;  input           1    0[COMMON] unsigned char 
  4893 ;; Return value:  Size  Location     Type
  4894 ;;		None               void
  4895 ;; Registers used:
  4896 ;;		wreg
  4897 ;; Tracked objects:
  4898 ;;		On entry : 0/0
  4899 ;;		On exit  : 0/0
  4900 ;;		Unchanged: 0/0
  4901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4903 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4905 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4906 ;;Total ram usage:        1 bytes
  4907 ;; Hardware stack levels used:    1
  4908 ;; This function calls:
  4909 ;;		Nothing
  4910 ;; This function is called by:
  4911 ;;		_printf
  4912 ;;		_getche
  4913 ;; This function uses a non-reentrant model
  4914 ;;
  4915                           
  4916                           
  4917                           ;psect for function _putch
  4918  022E                     _putch:	
  4919                           
  4920                           ;incstack = 0
  4921                           ; Regs used in _putch: [wreg]
  4922                           ;putch@input stored from wreg
  4923  022E  00F0               	movwf	putch@input
  4924  022F                     l257:	
  4925                           ;uart.c: 44: {
  4926                           ;uart.c: 45: continue;
  4927                           
  4928                           ;uart.c: 43: while(!TRMT)
  4929                           
  4930  022F  0023               	movlb	3	; select bank3
  4931  0230  1C9E               	btfss	30,1	;volatile
  4932  0231  2A2F               	goto	l257
  4933                           
  4934                           ;uart.c: 46: }
  4935                           ;uart.c: 47: TXREG = input;
  4936  0232  0870               	movf	putch@input,w
  4937  0233  009A               	movwf	26	;volatile
  4938  0234  0008               	return
  4939  0235                     __end_of_putch:	
  4940                           
  4941                           	psect	text13
  4942  02C6                     __ptext13:	
  4943 ;; *************** function ___lwmod *****************
  4944 ;; Defined at:
  4945 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  4946 ;; Parameters:    Size  Location     Type
  4947 ;;  divisor         2    8[COMMON] unsigned int 
  4948 ;;  dividend        2   10[COMMON] unsigned int 
  4949 ;; Auto vars:     Size  Location     Type
  4950 ;;  counter         1   13[COMMON] unsigned char 
  4951 ;; Return value:  Size  Location     Type
  4952 ;;                  2    8[COMMON] unsigned int 
  4953 ;; Registers used:
  4954 ;;		wreg, status,2, status,0
  4955 ;; Tracked objects:
  4956 ;;		On entry : 0/0
  4957 ;;		On exit  : 0/0
  4958 ;;		Unchanged: 0/0
  4959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4960 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4961 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4962 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4963 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4964 ;;Total ram usage:        6 bytes
  4965 ;; Hardware stack levels used:    1
  4966 ;; This function calls:
  4967 ;;		Nothing
  4968 ;; This function is called by:
  4969 ;;		_printf
  4970 ;; This function uses a non-reentrant model
  4971 ;;
  4972                           
  4973                           
  4974                           ;psect for function ___lwmod
  4975  02C6                     ___lwmod:	
  4976                           
  4977                           ;incstack = 0
  4978                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4979  02C6  0878               	movf	___lwmod@divisor,w
  4980  02C7  0479               	iorwf	___lwmod@divisor+1,w
  4981  02C8  1903               	btfsc	3,2
  4982  02C9  2AED               	goto	l1437
  4983  02CA  01FD               	clrf	___lwmod@counter
  4984  02CB  0AFD               	incf	___lwmod@counter,f
  4985  02CC                     l1427:	
  4986  02CC  1BF9               	btfsc	___lwmod@divisor+1,7
  4987  02CD  2AD8               	goto	l1429
  4988  02CE  3001               	movlw	1
  4989  02CF                     u1075:	
  4990  02CF  35F8               	lslf	___lwmod@divisor,f
  4991  02D0  0DF9               	rlf	___lwmod@divisor+1,f
  4992  02D1  0B89               	decfsz	9,f
  4993  02D2  2ACF               	goto	u1075
  4994  02D3  3001               	movlw	1
  4995  02D4  00FC               	movwf	??___lwmod
  4996  02D5  087C               	movf	??___lwmod,w
  4997  02D6  07FD               	addwf	___lwmod@counter,f
  4998  02D7  2ACC               	goto	l1427
  4999  02D8                     l1429:	
  5000  02D8  0879               	movf	___lwmod@divisor+1,w
  5001  02D9  027B               	subwf	___lwmod@dividend+1,w
  5002  02DA  1D03               	skipz
  5003  02DB  2ADE               	goto	u1095
  5004  02DC  0878               	movf	___lwmod@divisor,w
  5005  02DD  027A               	subwf	___lwmod@dividend,w
  5006  02DE                     u1095:	
  5007  02DE  1C03               	skipc
  5008  02DF  2AE4               	goto	l1433
  5009  02E0  0878               	movf	___lwmod@divisor,w
  5010  02E1  02FA               	subwf	___lwmod@dividend,f
  5011  02E2  0879               	movf	___lwmod@divisor+1,w
  5012  02E3  3BFB               	subwfb	___lwmod@dividend+1,f
  5013  02E4                     l1433:	
  5014  02E4  3001               	movlw	1
  5015  02E5                     u1105:	
  5016  02E5  36F9               	lsrf	___lwmod@divisor+1,f
  5017  02E6  0CF8               	rrf	___lwmod@divisor,f
  5018  02E7  0B89               	decfsz	9,f
  5019  02E8  2AE5               	goto	u1105
  5020  02E9  3001               	movlw	1
  5021  02EA  02FD               	subwf	___lwmod@counter,f
  5022  02EB  1D03               	btfss	3,2
  5023  02EC  2AD8               	goto	l1429
  5024  02ED                     l1437:	
  5025  02ED  087B               	movf	___lwmod@dividend+1,w
  5026  02EE  00F9               	movwf	?___lwmod+1
  5027  02EF  087A               	movf	___lwmod@dividend,w
  5028  02F0  00F8               	movwf	?___lwmod
  5029  02F1  0008               	return
  5030  02F2                     __end_of___lwmod:	
  5031                           
  5032                           	psect	text14
  5033  0320                     __ptext14:	
  5034 ;; *************** function ___lwdiv *****************
  5035 ;; Defined at:
  5036 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  5037 ;; Parameters:    Size  Location     Type
  5038 ;;  divisor         2    0[COMMON] unsigned int 
  5039 ;;  dividend        2    2[COMMON] unsigned int 
  5040 ;; Auto vars:     Size  Location     Type
  5041 ;;  quotient        2    5[COMMON] unsigned int 
  5042 ;;  counter         1    7[COMMON] unsigned char 
  5043 ;; Return value:  Size  Location     Type
  5044 ;;                  2    0[COMMON] unsigned int 
  5045 ;; Registers used:
  5046 ;;		wreg, status,2, status,0
  5047 ;; Tracked objects:
  5048 ;;		On entry : 0/0
  5049 ;;		On exit  : 0/0
  5050 ;;		Unchanged: 0/0
  5051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5052 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5053 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5054 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5055 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5056 ;;Total ram usage:        8 bytes
  5057 ;; Hardware stack levels used:    1
  5058 ;; This function calls:
  5059 ;;		Nothing
  5060 ;; This function is called by:
  5061 ;;		_printf
  5062 ;; This function uses a non-reentrant model
  5063 ;;
  5064                           
  5065                           
  5066                           ;psect for function ___lwdiv
  5067  0320                     ___lwdiv:	
  5068                           
  5069                           ;incstack = 0
  5070                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5071  0320  01F5               	clrf	___lwdiv@quotient
  5072  0321  01F6               	clrf	___lwdiv@quotient+1
  5073  0322  0870               	movf	___lwdiv@divisor,w
  5074  0323  0471               	iorwf	___lwdiv@divisor+1,w
  5075  0324  1903               	btfsc	3,2
  5076  0325  2B4F               	goto	l1415
  5077  0326  01F7               	clrf	___lwdiv@counter
  5078  0327  0AF7               	incf	___lwdiv@counter,f
  5079  0328                     l1403:	
  5080  0328  1BF1               	btfsc	___lwdiv@divisor+1,7
  5081  0329  2B34               	goto	l1405
  5082  032A  3001               	movlw	1
  5083  032B                     u1005:	
  5084  032B  35F0               	lslf	___lwdiv@divisor,f
  5085  032C  0DF1               	rlf	___lwdiv@divisor+1,f
  5086  032D  0B89               	decfsz	9,f
  5087  032E  2B2B               	goto	u1005
  5088  032F  3001               	movlw	1
  5089  0330  00F4               	movwf	??___lwdiv
  5090  0331  0874               	movf	??___lwdiv,w
  5091  0332  07F7               	addwf	___lwdiv@counter,f
  5092  0333  2B28               	goto	l1403
  5093  0334                     l1405:	
  5094  0334  3001               	movlw	1
  5095  0335                     u1025:	
  5096  0335  35F5               	lslf	___lwdiv@quotient,f
  5097  0336  0DF6               	rlf	___lwdiv@quotient+1,f
  5098  0337  0B89               	decfsz	9,f
  5099  0338  2B35               	goto	u1025
  5100  0339  0871               	movf	___lwdiv@divisor+1,w
  5101  033A  0273               	subwf	___lwdiv@dividend+1,w
  5102  033B  1D03               	skipz
  5103  033C  2B3F               	goto	u1035
  5104  033D  0870               	movf	___lwdiv@divisor,w
  5105  033E  0272               	subwf	___lwdiv@dividend,w
  5106  033F                     u1035:	
  5107  033F  1C03               	skipc
  5108  0340  2B46               	goto	l1411
  5109  0341  0870               	movf	___lwdiv@divisor,w
  5110  0342  02F2               	subwf	___lwdiv@dividend,f
  5111  0343  0871               	movf	___lwdiv@divisor+1,w
  5112  0344  3BF3               	subwfb	___lwdiv@dividend+1,f
  5113  0345  1475               	bsf	___lwdiv@quotient,0
  5114  0346                     l1411:	
  5115  0346  3001               	movlw	1
  5116  0347                     u1045:	
  5117  0347  36F1               	lsrf	___lwdiv@divisor+1,f
  5118  0348  0CF0               	rrf	___lwdiv@divisor,f
  5119  0349  0B89               	decfsz	9,f
  5120  034A  2B47               	goto	u1045
  5121  034B  3001               	movlw	1
  5122  034C  02F7               	subwf	___lwdiv@counter,f
  5123  034D  1D03               	btfss	3,2
  5124  034E  2B34               	goto	l1405
  5125  034F                     l1415:	
  5126  034F  0876               	movf	___lwdiv@quotient+1,w
  5127  0350  00F1               	movwf	?___lwdiv+1
  5128  0351  0875               	movf	___lwdiv@quotient,w
  5129  0352  00F0               	movwf	?___lwdiv
  5130  0353  0008               	return
  5131  0354                     __end_of___lwdiv:	
  5132                           
  5133                           	psect	text15
  5134  0260                     __ptext15:	
  5135 ;; *************** function _determine_sword_was_swung *****************
  5136 ;; Defined at:
  5137 ;;		line 49 in file "../../source/function_stubs.c"
  5138 ;; Parameters:    Size  Location     Type
  5139 ;;		None
  5140 ;; Auto vars:     Size  Location     Type
  5141 ;;  input           1    2[COMMON] unsigned char 
  5142 ;; Return value:  Size  Location     Type
  5143 ;;                  1    wreg      unsigned char 
  5144 ;; Registers used:
  5145 ;;		wreg, status,2, status,0, pclath, cstack
  5146 ;; Tracked objects:
  5147 ;;		On entry : 0/0
  5148 ;;		On exit  : 0/0
  5149 ;;		Unchanged: 0/0
  5150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5152 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5153 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5154 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5155 ;;Total ram usage:        2 bytes
  5156 ;; Hardware stack levels used:    1
  5157 ;; Hardware stack levels required when called:    1
  5158 ;; This function calls:
  5159 ;;		_getch
  5160 ;; This function is called by:
  5161 ;;		_main
  5162 ;; This function uses a non-reentrant model
  5163 ;;
  5164                           
  5165                           
  5166                           ;psect for function _determine_sword_was_swung
  5167  0260                     _determine_sword_was_swung:	
  5168                           
  5169                           ;function_stubs.c: 51: char input = getch();
  5170                           
  5171                           ;incstack = 0
  5172                           ; Regs used in _determine_sword_was_swung: [wreg+status,2+status,0+pclath+cstack]
  5173  0260  3182  2227  3182   	fcall	_getch
  5174  0263  00F1               	movwf	??_determine_sword_was_swung
  5175  0264  0871               	movf	??_determine_sword_was_swung,w
  5176  0265  00F2               	movwf	determine_sword_was_swung@input
  5177                           
  5178                           ;function_stubs.c: 52: if( input == 's' )
  5179  0266  3073               	movlw	115
  5180  0267  0672               	xorwf	determine_sword_was_swung@input,w
  5181  0268  1D03               	btfss	3,2
  5182  0269  2A6C               	goto	l1529
  5183                           
  5184                           ;function_stubs.c: 53: {
  5185                           ;function_stubs.c: 54: return 1;
  5186  026A  3001               	movlw	1
  5187                           
  5188                           ;function_stubs.c: 55: }
  5189  026B  0008               	return
  5190  026C                     l1529:	
  5191                           
  5192                           ;function_stubs.c: 56: else
  5193                           ;function_stubs.c: 57: {
  5194                           ;function_stubs.c: 58: return input;
  5195  026C  0872               	movf	determine_sword_was_swung@input,w
  5196  026D  0008               	return
  5197  026E                     __end_of_determine_sword_was_swung:	
  5198                           
  5199                           	psect	text16
  5200  0227                     __ptext16:	
  5201 ;; *************** function _getch *****************
  5202 ;; Defined at:
  5203 ;;		line 51 in file "../../source/uart.c"
  5204 ;; Parameters:    Size  Location     Type
  5205 ;;		None
  5206 ;; Auto vars:     Size  Location     Type
  5207 ;;  counter         1    0[COMMON] unsigned char 
  5208 ;; Return value:  Size  Location     Type
  5209 ;;                  1    wreg      unsigned char 
  5210 ;; Registers used:
  5211 ;;		wreg, status,2
  5212 ;; Tracked objects:
  5213 ;;		On entry : 0/0
  5214 ;;		On exit  : 0/0
  5215 ;;		Unchanged: 0/0
  5216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5218 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5220 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5221 ;;Total ram usage:        1 bytes
  5222 ;; Hardware stack levels used:    1
  5223 ;; This function calls:
  5224 ;;		Nothing
  5225 ;; This function is called by:
  5226 ;;		_determine_sword_was_swung
  5227 ;;		_getche
  5228 ;;		_uart_test
  5229 ;; This function uses a non-reentrant model
  5230 ;;
  5231                           
  5232                           
  5233                           ;psect for function _getch
  5234  0227                     _getch:	
  5235                           
  5236                           ;uart.c: 53: unsigned char counter = 0;
  5237                           
  5238                           ;incstack = 0
  5239                           ; Regs used in _getch: [wreg+status,2]
  5240  0227  01F0               	clrf	getch@counter
  5241  0228                     l263:	
  5242                           ;uart.c: 56: {
  5243                           ;uart.c: 57: continue;
  5244                           
  5245                           ;uart.c: 55: while( !RCIF )
  5246                           
  5247  0228  0020               	movlb	0	; select bank0
  5248  0229  1E91               	btfss	17,5	;volatile
  5249  022A  2A28               	goto	l263
  5250                           
  5251                           ;uart.c: 63: }
  5252                           ;uart.c: 64: return RCREG;
  5253  022B  0023               	movlb	3	; select bank3
  5254  022C  0819               	movf	25,w	;volatile
  5255  022D  0008               	return
  5256  022E                     __end_of_getch:	
  5257                           
  5258                           	psect	text17
  5259  02AE                     __ptext17:	
  5260 ;; *************** function _determine_packets_to_send *****************
  5261 ;; Defined at:
  5262 ;;		line 67 in file "../../source/function_stubs.c"
  5263 ;; Parameters:    Size  Location     Type
  5264 ;;  packets         1    wreg     PTR unsigned char 
  5265 ;;		 -> main@pkt_arr(3), 
  5266 ;; Auto vars:     Size  Location     Type
  5267 ;;  packets         1    1[COMMON] PTR unsigned char 
  5268 ;;		 -> main@pkt_arr(3), 
  5269 ;; Return value:  Size  Location     Type
  5270 ;;		None               void
  5271 ;; Registers used:
  5272 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5273 ;; Tracked objects:
  5274 ;;		On entry : 0/0
  5275 ;;		On exit  : 0/0
  5276 ;;		Unchanged: 0/0
  5277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5279 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5280 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5281 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5282 ;;Total ram usage:        2 bytes
  5283 ;; Hardware stack levels used:    1
  5284 ;; This function calls:
  5285 ;;		Nothing
  5286 ;; This function is called by:
  5287 ;;		_main
  5288 ;; This function uses a non-reentrant model
  5289 ;;
  5290                           
  5291                           
  5292                           ;psect for function _determine_packets_to_send
  5293  02AE                     _determine_packets_to_send:	
  5294                           
  5295                           ;incstack = 0
  5296                           ; Regs used in _determine_packets_to_send: [wreg+fsr1l+fsr1h+status,2+status,0]
  5297                           ;determine_packets_to_send@packets stored from wreg
  5298  02AE  00F1               	movwf	determine_packets_to_send@packets
  5299                           
  5300                           ;function_stubs.c: 69: packets[0] = 5;
  5301  02AF  3005               	movlw	5
  5302  02B0  00F0               	movwf	??_determine_packets_to_send
  5303  02B1  0871               	movf	determine_packets_to_send@packets,w
  5304  02B2  0086               	movwf	6
  5305  02B3  0187               	clrf	7
  5306  02B4  0870               	movf	??_determine_packets_to_send,w
  5307  02B5  0081               	movwf	1
  5308                           
  5309                           ;function_stubs.c: 70: packets[1] = 10;
  5310  02B6  300A               	movlw	10
  5311  02B7  00F0               	movwf	??_determine_packets_to_send
  5312  02B8  0A71               	incf	determine_packets_to_send@packets,w
  5313  02B9  0086               	movwf	6
  5314  02BA  0187               	clrf	7
  5315  02BB  0870               	movf	??_determine_packets_to_send,w
  5316  02BC  0081               	movwf	1
  5317                           
  5318                           ;function_stubs.c: 71: packets[2] = 15;
  5319  02BD  300F               	movlw	15
  5320  02BE  00F0               	movwf	??_determine_packets_to_send
  5321  02BF  0871               	movf	determine_packets_to_send@packets,w
  5322  02C0  3E02               	addlw	2
  5323  02C1  0086               	movwf	6
  5324  02C2  0187               	clrf	7
  5325  02C3  0870               	movf	??_determine_packets_to_send,w
  5326  02C4  0081               	movwf	1
  5327  02C5  0008               	return
  5328  02C6                     __end_of_determine_packets_to_send:	
  5329                           
  5330                           	psect	text18
  5331  021E                     __ptext18:	
  5332 ;; *************** function _determine_omega_mode_active *****************
  5333 ;; Defined at:
  5334 ;;		line 62 in file "../../source/function_stubs.c"
  5335 ;; Parameters:    Size  Location     Type
  5336 ;;		None
  5337 ;; Auto vars:     Size  Location     Type
  5338 ;;		None
  5339 ;; Return value:  Size  Location     Type
  5340 ;;                  1    wreg      unsigned char 
  5341 ;; Registers used:
  5342 ;;		wreg
  5343 ;; Tracked objects:
  5344 ;;		On entry : 0/0
  5345 ;;		On exit  : 0/0
  5346 ;;		Unchanged: 0/0
  5347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5352 ;;Total ram usage:        0 bytes
  5353 ;; Hardware stack levels used:    1
  5354 ;; This function calls:
  5355 ;;		Nothing
  5356 ;; This function is called by:
  5357 ;;		_main
  5358 ;; This function uses a non-reentrant model
  5359 ;;
  5360                           
  5361                           
  5362                           ;psect for function _determine_omega_mode_active
  5363  021E                     _determine_omega_mode_active:	
  5364                           
  5365                           ;function_stubs.c: 64: return omega_mode;
  5366                           
  5367                           ;incstack = 0
  5368                           ; Regs used in _determine_omega_mode_active: [wreg]
  5369  021E  0020               	movlb	0	; select bank0
  5370  021F  083E               	movf	_omega_mode,w
  5371  0220  0008               	return
  5372  0221                     __end_of_determine_omega_mode_active:	
  5373  007E                     btemp	set	126	;btemp
  5374  007E                     wtemp	set	126
  5375  007E                     wtemp0	set	126
  5376  0080                     wtemp1	set	128
  5377  0082                     wtemp2	set	130
  5378  0084                     wtemp3	set	132
  5379  0086                     wtemp4	set	134
  5380  0088                     wtemp5	set	136
  5381  007F                     wtemp6	set	127
  5382  007E                     ttemp	set	126
  5383  007E                     ttemp0	set	126
  5384  0081                     ttemp1	set	129
  5385  0084                     ttemp2	set	132
  5386  0087                     ttemp3	set	135
  5387  007F                     ttemp4	set	127
  5388  007E                     ltemp	set	126
  5389  007E                     ltemp0	set	126
  5390  0082                     ltemp1	set	130
  5391  0086                     ltemp2	set	134
  5392  0080                     ltemp3	set	128


Data Sizes:
    Strings     1015
    Constant    10
    Data        1
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     26      33
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 66
		 -> STR_53(CODE[26]), STR_52(CODE[49]), STR_51(CODE[31]), STR_50(CODE[25]), 
		 -> STR_49(CODE[3]), STR_48(CODE[23]), STR_47(CODE[22]), STR_46(CODE[30]), 
		 -> STR_45(CODE[42]), STR_44(CODE[43]), STR_43(CODE[18]), STR_42(CODE[23]), 
		 -> STR_41(CODE[22]), STR_40(CODE[30]), STR_39(CODE[42]), STR_38(CODE[43]), 
		 -> STR_37(CODE[18]), STR_36(CODE[23]), STR_35(CODE[22]), STR_34(CODE[18]), 
		 -> STR_33(CODE[23]), STR_32(CODE[22]), STR_31(CODE[30]), STR_30(CODE[42]), 
		 -> STR_29(CODE[43]), STR_28(CODE[18]), STR_27(CODE[36]), STR_26(CODE[66]), 
		 -> STR_25(CODE[53]), STR_24(CODE[28]), STR_23(CODE[4]), STR_22(CODE[4]), 
		 -> STR_21(CODE[38]), STR_20(CODE[28]), STR_19(CODE[4]), STR_18(CODE[4]), 
		 -> STR_17(CODE[4]), STR_16(CODE[4]), STR_15(CODE[37]), STR_14(CODE[65]), 
		 -> STR_13(CODE[62]), STR_12(CODE[19]), STR_11(CODE[42]), STR_10(CODE[47]), 
		 -> STR_9(CODE[20]), STR_8(CODE[29]), STR_7(CODE[34]), STR_6(CODE[33]), 
		 -> STR_5(CODE[8]), STR_4(CODE[10]), STR_3(CODE[10]), STR_2(CODE[9]), 
		 -> STR_1(CODE[36]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    determine_packets_to_send@packets	PTR unsigned char  size(1) Largest target is 3
		 -> main@pkt_arr(BANK0[3]), 


Critical Paths under _main in COMMON

    _printf->___lwmod
    ___lwmod->___lwdiv
    _determine_sword_was_swung->_getch

Critical Paths under _main in BANK0

    _main->_output_ir
    _play_sound->_printf
    _output_ir->_printf
    _init_leds->_printf
    _init_isr->_printf
    _init_ir->_printf
    _init_accel->_printf
    _display_blade_lights->_printf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0   31831
                                             18 BANK0      8     8      0
        _determine_omega_mode_active
          _determine_packets_to_send
          _determine_sword_was_swung
               _display_blade_lights
                         _init_accel
                            _init_ir
                           _init_isr
                          _init_leds
                           _init_pic
                          _init_uart
                          _output_ir
                         _play_sound
                             _printf
                             _waitch
 ---------------------------------------------------------------------------------
 (1) _waitch                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _play_sound                                           1     1      0    3794
                                             14 BANK0      1     1      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _output_ir                                            4     3      1    4028
                                             14 BANK0      4     3      1
                             _printf
 ---------------------------------------------------------------------------------
 (1) _init_uart                                            1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_pic                                             1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_leds                                            0     0      0    3750
                             _printf
 ---------------------------------------------------------------------------------
 (1) _init_isr                                             0     0      0    3750
                             _printf
 ---------------------------------------------------------------------------------
 (1) _init_ir                                              0     0      0    3750
                             _printf
 ---------------------------------------------------------------------------------
 (1) _init_accel                                           0     0      0    3750
                             _printf
 ---------------------------------------------------------------------------------
 (1) _display_blade_lights                                 1     1      0    3794
                                             14 BANK0      1     1      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              22    18      4    3750
                                              0 BANK0     14    10      4
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     265
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     268
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _determine_sword_was_swung                            2     2      0      46
                                              1 COMMON     2     2      0
                              _getch
 ---------------------------------------------------------------------------------
 (2) _getch                                                1     1      0       1
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _determine_packets_to_send                            2     2      0     174
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _determine_omega_mode_active                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _determine_omega_mode_active
   _determine_packets_to_send
   _determine_sword_was_swung
     _getch
   _display_blade_lights
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _putch
   _init_accel
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _putch
   _init_ir
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _putch
   _init_isr
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _putch
   _init_leds
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _putch
   _init_pic
   _init_uart
   _output_ir
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _putch
   _play_sound
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _putch
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch
   _waitch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1A      21       5       41.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0      2F      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0      2F      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              50      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24              50      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25              20      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sun Oct 18 17:36:09 2015

                         __CFG_CP$OFF 0000                                   l130 05A2  
                                 l207 07EF                                   l313 040A  
                                 l145 05B9                                   l263 0228  
                                 l183 070F                                   l272 0221  
                                 l192 07D8                                   l168 06F8  
                                 l257 022F                                   _GIE 005F  
                                 _RB3 006B                          __CFG_CPD$OFF 0000  
                        __CFG_BORV$LO 0000                                   wreg 0009  
                        __CFG_IESO$ON 0000                          __CFG_LVP$OFF 0000  
           play_sound@sound_selection 002E                                  l1411 0346  
                                l1403 0328                                  l1405 0334  
                                l1415 034F                                  l1503 030D  
                                l1433 02E4                                  l1513 02A3  
                                l1427 02CC                                  l1507 0318  
                                l1429 02D8                                  l1437 02ED  
                                l1453 038E                                  l1463 03A4  
                                l1447 0375                                  l1703 04F2  
                                l1529 026C                                  l1641 0477  
                                l1475 03C9                                  l1547 028C  
                                l1715 0515                                  l1707 0501  
                                l1635 0466                                  l1627 0459  
                                l1643 0493                                  l1619 044C  
                                l1485 03D6                                  l1469 03AA  
                                l1901 07B8                                  l1821 06EE  
                                l1813 06D2                                  l1741 055C  
                                l1661 04A6                                  l1479 03D1  
                                l1487 0359                                  l1911 0715  
                                l1719 0524                                  l1751 05BA  
                                l1663 04C2                                  l1655 0498  
                                l1921 0728                                  l1905 07CB  
                                l1913 0717                                  l1825 0635  
                                l1817 06E5                                  l1753 05EA  
                                l1737 0552                                  l1729 053C  
                                l1851 067A                                  l1835 0648  
                                l1827 0637                                  l1691 059E  
                                l1683 0582                                  l1667 0561  
                                l1933 074B                                  l1925 0737  
                                l1909 07D4                                  l1861 0692  
                                l1773 061E                                  l1749 05A3  
                                l1693 04DF                                  l1847 066B  
                                l1839 0657                                  l1791 05DB  
                                l1783 05C5                                  l1687 0595  
                                l1695 04E1                                  l1937 075A  
                                l1881 06F9                                  l1873 06B2  
                                l1777 0627                                  l1769 060B  
                                l1955 0788                                  l1947 0772  
                                l1883 0710                                  l1795 05E5  
                                l1779 05BF                                  l1885 0797  
                                l1869 06A8                                  l1797 062F  
                                l1967 07D9                                  l1959 0792  
                                l1799 06B7                                  l1969 07F0  
                                STR_1 0A4E                                  STR_2 0BD8  
                                STR_3 0BC4                                  STR_4 0BCE  
                                STR_5 0BE1                                  STR_6 0A94  
                                STR_7 0A72                                  STR_8 0AF2  
                                STR_9 0B8B                                  _BRGH 0CF2  
                                _CREN 0CEC                                  u1005 032B  
                                u1025 0335                                  u1105 02E5  
                                u1035 033F                                  u1045 0347  
                                u1075 02CF                                  u1155 03BF  
                                u1095 02DE                                  u1957 0424  
                                u1967 05AE                                  u1977 0704  
                                u1987 07E4                                  _RCIE 048D  
                                _RCIF 008D     __end_of_determine_sword_was_swung 026E  
                                _SPEN 0CEF                                  _TRMT 0CF1  
                                _TXEN 0CF5                                  _SYNC 0CF4  
                        __CFG_WRT$OFF 0000                         __CFG_FCMEN$ON 0000  
                                _main 040B                           main@pkt_arr 0035  
                                fsr0h 0005                                  fsr1h 0007  
                                fsr0l 0004                                  indf0 0000  
                                indf1 0001                                  fsr1l 0006  
                                btemp 007E                                  ltemp 007E  
                                start 0002                                  ttemp 007E  
                                wtemp 007E                         __CFG_MCLRE$ON 0000  
           _determine_packets_to_send 02AE                                 ?_main 0070  
                               STR_10 0931                                 STR_11 09B5  
                               STR_12 0B9F                                 STR_20 0B0F  
                               STR_21 09DF                                 STR_13 088D  
                               STR_22 0BFD                                 STR_30 098B  
                               STR_14 084C                                 STR_23 0BF9  
                               STR_31 0AD4                                 STR_15 0A05  
                               STR_40 0AD4                                 STR_24 0B0F  
                               STR_16 0BE9                                 STR_32 0B75  
                               _BRG16 0CFB                                 STR_41 0B75  
                               STR_17 0BED                                 STR_33 0B5E  
                               STR_25 08CB                         __CFG_WDTE$OFF 0000  
                               STR_42 0B5E                                 STR_34 0BB2  
                               STR_18 0BF1                                 STR_50 0B45  
                               STR_26 080A                                 STR_35 0B75  
                               STR_43 0BB2                                 STR_19 0BF5  
                               STR_51 0AB5                                 STR_27 0A2A  
                               STR_44 0960                                 STR_36 0B5E  
                               STR_28 0BB2                                 STR_52 0900  
                               STR_45 098B                                 STR_37 0BB2  
                               STR_53 0B2B                                 STR_29 0960  
                               STR_38 0960                                 STR_46 0AD4  
                               STR_39 098B                                 STR_47 0B75  
                               STR_48 0B5E                                 STR_49 0A4B  
                     __end_of___lwdiv 0354                       __end_of___lwmod 02F2  
                               _RCREG 0199                                 _SPBRG 019B  
                               _TRISB 008D                                 _TRISC 008E  
                               _TXREG 019A                                 _blade 003D  
                               _getch 0227                       __end_of_dpowers 080A  
                     __end_of_init_ir 0245                                 _putch 022E  
                               main@i 0038                        __CFG_BOREN$OFF 0000  
                               ltemp0 007E                                 ltemp1 0082  
                               ltemp2 0086                                 ltemp3 0080  
                               ttemp0 007E                                 ttemp1 0081  
                               ttemp2 0084                                 ttemp3 0087  
                               ttemp4 007F                                 status 0003  
                               wtemp0 007E                                 wtemp1 0080  
                               wtemp2 0082                                 wtemp3 0084  
                               wtemp4 0086                                 wtemp5 0088  
                               wtemp6 007F                       __initialization 07F4  
                        __end_of_main 07F4                        __CFG_LPBOR$OFF 0000  
                              ??_main 0032                        __CFG_PLLEN$OFF 0000  
        __end_of_display_blade_lights 0297                          _stun_counter 003F  
                              ?_getch 0070                                ?_putch 0070  
                              _OSCCON 0099                        __CFG_PWRTE$OFF 0000  
                      __CFG_STVREN$ON 0000                                _health 0040  
                           ??___lwdiv 0074                             ??___lwmod 007C  
                    __end_of_init_pic 0260                      __end_of_init_isr 024D  
                              _waitch 0221                                _printf 0354  
                           ??_init_ir 007E                         main@userInput 0039  
             __end_of__initialization 07FD                        __pcstackCOMMON 0070  
                        __pidataBANK0 021D                         __end_of_getch 022E  
                       __end_of_putch 0235                               ??_getch 0070  
  __size_of_determine_packets_to_send 0018                               ??_putch 0070  
                          __pbssBANK0 003A                       __CFG_VCAPEN$OFF 0000  
                  __size_of_init_leds 0008                    __size_of_init_uart 0012  
                          __pmaintext 040B                  _display_blade_lights 0280  
                             ?_waitch 0070                               ?_printf 0020  
   __end_of_determine_packets_to_send 02C6                    __size_of_output_ir 002E  
          ?_determine_sword_was_swung 0070                             ?_init_pic 0070  
                           ?_init_isr 0070        determine_sword_was_swung@input 0072  
               ?_display_blade_lights 0070                            _init_accel 0235  
                             ___lwdiv 0320                               ___lwmod 02C6  
                             __ptext1 0221                               __ptext2 0297  
                             __ptext3 02F2                               __ptext4 026E  
                             __ptext5 0255                               __ptext6 024D  
                             __ptext7 0245                               __ptext8 023D  
                             __ptext9 0235                       __size_of_waitch 0006  
                     __size_of_printf 00B7                               _dpowers 0800  
                             _init_ir 023D                     __end_of_init_leds 0255  
                   __end_of_init_uart 0280          ?_determine_omega_mode_active 0070  
                          _omega_mode 003E                  end_of_initialization 07FD  
                          ??_init_pic 0070                            ??_init_isr 007E  
                          _play_sound 0297                               printf@c 002D  
                             printf@f 0020                          __pstringtext 0800  
                   __end_of_output_ir 0320                      __CFG_FOSC$INTOSC 0000  
              ??_display_blade_lights 007E                           ?_init_accel 0070  
                      __end_of_waitch 0227                        __end_of_printf 040B  
                 start_initialization 07F4                           ?_play_sound 0070  
__size_of_determine_omega_mode_active 0003                           __pdataBANK0 0040  
                            ??_waitch 0070                              ??_printf 0024  
                           ___latbits 0003                         __pcstackBANK0 0020  
                 __size_of_init_accel 0008           ??_determine_sword_was_swung 0071  
                   __size_of_init_pic 000B                     __size_of_init_isr 0008  
                    ___lwdiv@dividend 0072                              ?___lwdiv 0070  
                            ?___lwmod 0078                              ?_init_ir 0070  
                 __size_of_play_sound 0017                       output_ir@amount 002E  
                    ___lwdiv@quotient 0075                        __size_of_getch 0007  
                           _init_leds 024D                             _init_uart 026E  
                      __size_of_putch 0007            ?_determine_packets_to_send 0070  
                           main@F7230 003A             _determine_sword_was_swung 0260  
                          printf@flag 0029                            printf@prec 002A  
                           _output_ir 02F2                            ?_init_leds 0070  
                          ?_init_uart 0070                            putch@input 0070  
                        ??_init_accel 007E                      __size_of___lwdiv 0034  
                    __size_of___lwmod 002C                     output_ir@pkt_type 0031  
                          ?_output_ir 002E                      __size_of_init_ir 0008  
                     ___lwdiv@divisor 0070                       ___lwdiv@counter 0077  
                            __ptext10 0280                              __ptext11 0354  
                            __ptext12 022E                              __ptext13 02C6  
                            __ptext14 0320                              __ptext15 0260  
                            __ptext16 0227                              __ptext17 02AE  
                            __ptext18 021E                    __end_of_init_accel 023D  
                       __size_of_main 03E9                              _init_pic 0255  
                            _init_isr 0245                          ??_play_sound 007E  
    determine_packets_to_send@packets 0071         __size_of_display_blade_lights 0017  
                           printf@val 002B   __end_of_determine_omega_mode_active 0221  
         _determine_omega_mode_active 021E                    __end_of_play_sound 02AE  
                         ??_init_leds 007E                           ??_init_uart 0070  
       ??_determine_omega_mode_active 0070                      ___lwmod@dividend 007A  
                   __CFG_CLKOUTEN$OFF 0000                              printf@ap 0028  
                     ___lwmod@divisor 0078                           ??_output_ir 002F  
                     ___lwmod@counter 007D    __size_of_determine_sword_was_swung 000E  
         ??_determine_packets_to_send 0070              display_blade_lights@mode 002E  
                        getch@counter 0070  
