

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Wed Oct 21 01:17:38 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F1788
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext,global,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	dabs	1,0x7E,2
    32  0000                     	;# 
    33  0001                     	;# 
    34  0002                     	;# 
    35  0003                     	;# 
    36  0004                     	;# 
    37  0005                     	;# 
    38  0006                     	;# 
    39  0007                     	;# 
    40  0008                     	;# 
    41  0009                     	;# 
    42  000A                     	;# 
    43  000B                     	;# 
    44  000C                     	;# 
    45  000D                     	;# 
    46  000E                     	;# 
    47  0010                     	;# 
    48  0011                     	;# 
    49  0012                     	;# 
    50  0013                     	;# 
    51  0014                     	;# 
    52  0015                     	;# 
    53  0016                     	;# 
    54  0016                     	;# 
    55  0017                     	;# 
    56  0018                     	;# 
    57  0019                     	;# 
    58  001A                     	;# 
    59  001B                     	;# 
    60  001C                     	;# 
    61  008C                     	;# 
    62  008D                     	;# 
    63  008E                     	;# 
    64  0090                     	;# 
    65  0091                     	;# 
    66  0092                     	;# 
    67  0093                     	;# 
    68  0094                     	;# 
    69  0095                     	;# 
    70  0096                     	;# 
    71  0097                     	;# 
    72  0098                     	;# 
    73  0099                     	;# 
    74  009A                     	;# 
    75  009B                     	;# 
    76  009B                     	;# 
    77  009C                     	;# 
    78  009D                     	;# 
    79  009E                     	;# 
    80  009F                     	;# 
    81  010C                     	;# 
    82  010D                     	;# 
    83  010E                     	;# 
    84  0111                     	;# 
    85  0112                     	;# 
    86  0113                     	;# 
    87  0114                     	;# 
    88  0115                     	;# 
    89  0116                     	;# 
    90  0117                     	;# 
    91  0118                     	;# 
    92  0119                     	;# 
    93  011A                     	;# 
    94  011B                     	;# 
    95  011C                     	;# 
    96  011D                     	;# 
    97  011D                     	;# 
    98  011D                     	;# 
    99  011E                     	;# 
   100  011F                     	;# 
   101  018C                     	;# 
   102  018D                     	;# 
   103  018E                     	;# 
   104  0191                     	;# 
   105  0191                     	;# 
   106  0192                     	;# 
   107  0193                     	;# 
   108  0193                     	;# 
   109  0193                     	;# 
   110  0194                     	;# 
   111  0195                     	;# 
   112  0196                     	;# 
   113  0197                     	;# 
   114  0199                     	;# 
   115  0199                     	;# 
   116  0199                     	;# 
   117  019A                     	;# 
   118  019A                     	;# 
   119  019A                     	;# 
   120  019B                     	;# 
   121  019B                     	;# 
   122  019B                     	;# 
   123  019B                     	;# 
   124  019B                     	;# 
   125  019C                     	;# 
   126  019C                     	;# 
   127  019C                     	;# 
   128  019D                     	;# 
   129  019D                     	;# 
   130  019D                     	;# 
   131  019E                     	;# 
   132  019E                     	;# 
   133  019E                     	;# 
   134  019F                     	;# 
   135  019F                     	;# 
   136  019F                     	;# 
   137  019F                     	;# 
   138  019F                     	;# 
   139  020C                     	;# 
   140  020D                     	;# 
   141  020E                     	;# 
   142  0210                     	;# 
   143  0211                     	;# 
   144  0211                     	;# 
   145  0212                     	;# 
   146  0212                     	;# 
   147  0213                     	;# 
   148  0213                     	;# 
   149  0214                     	;# 
   150  0214                     	;# 
   151  0215                     	;# 
   152  0215                     	;# 
   153  0215                     	;# 
   154  0215                     	;# 
   155  0216                     	;# 
   156  0216                     	;# 
   157  0217                     	;# 
   158  0217                     	;# 
   159  028C                     	;# 
   160  028D                     	;# 
   161  028E                     	;# 
   162  0291                     	;# 
   163  0291                     	;# 
   164  0292                     	;# 
   165  0293                     	;# 
   166  0298                     	;# 
   167  0298                     	;# 
   168  0299                     	;# 
   169  029A                     	;# 
   170  030C                     	;# 
   171  030D                     	;# 
   172  030E                     	;# 
   173  0311                     	;# 
   174  0311                     	;# 
   175  0312                     	;# 
   176  0313                     	;# 
   177  038C                     	;# 
   178  038D                     	;# 
   179  038E                     	;# 
   180  0390                     	;# 
   181  0391                     	;# 
   182  0392                     	;# 
   183  0393                     	;# 
   184  0394                     	;# 
   185  0395                     	;# 
   186  0396                     	;# 
   187  0397                     	;# 
   188  0398                     	;# 
   189  0399                     	;# 
   190  039D                     	;# 
   191  039E                     	;# 
   192  039F                     	;# 
   193  0511                     	;# 
   194  0513                     	;# 
   195  051A                     	;# 
   196  0591                     	;# 
   197  0592                     	;# 
   198  0592                     	;# 
   199  0593                     	;# 
   200  0594                     	;# 
   201  0594                     	;# 
   202  0595                     	;# 
   203  0596                     	;# 
   204  0596                     	;# 
   205  0E91                     	;# 
   206  0E92                     	;# 
   207  0E93                     	;# 
   208  0E94                     	;# 
   209  0E95                     	;# 
   210  0E96                     	;# 
   211  0E97                     	;# 
   212  0E98                     	;# 
   213  0E99                     	;# 
   214  0E9A                     	;# 
   215  0E9B                     	;# 
   216  0E9C                     	;# 
   217  0E9D                     	;# 
   218  0E9E                     	;# 
   219  0E9F                     	;# 
   220  0EA0                     	;# 
   221  0EA1                     	;# 
   222  0EA1                     	;# 
   223  0EA2                     	;# 
   224  0EA3                     	;# 
   225  0EA3                     	;# 
   226  0EA4                     	;# 
   227  0EA5                     	;# 
   228  0EA5                     	;# 
   229  0EA6                     	;# 
   230  0EA7                     	;# 
   231  0EA7                     	;# 
   232  0EA8                     	;# 
   233  0EA9                     	;# 
   234  0EAA                     	;# 
   235  0EAB                     	;# 
   236  0EAC                     	;# 
   237  0EAD                     	;# 
   238  0EAE                     	;# 
   239  0EAF                     	;# 
   240  0EB1                     	;# 
   241  0EB2                     	;# 
   242  0EB3                     	;# 
   243  0EB4                     	;# 
   244  0EB5                     	;# 
   245  0EB6                     	;# 
   246  0EB7                     	;# 
   247  0EB8                     	;# 
   248  0EB9                     	;# 
   249  0EBA                     	;# 
   250  0EBB                     	;# 
   251  0EBC                     	;# 
   252  0EBD                     	;# 
   253  0EBE                     	;# 
   254  0EBF                     	;# 
   255  0EC0                     	;# 
   256  0EC1                     	;# 
   257  0EC1                     	;# 
   258  0EC2                     	;# 
   259  0EC3                     	;# 
   260  0EC3                     	;# 
   261  0EC4                     	;# 
   262  0EC5                     	;# 
   263  0EC5                     	;# 
   264  0EC6                     	;# 
   265  0EC7                     	;# 
   266  0EC7                     	;# 
   267  0EC8                     	;# 
   268  0EC9                     	;# 
   269  0ECA                     	;# 
   270  0ECB                     	;# 
   271  0ECC                     	;# 
   272  0ECD                     	;# 
   273  0ECE                     	;# 
   274  0ECF                     	;# 
   275  0ED1                     	;# 
   276  0ED2                     	;# 
   277  0ED3                     	;# 
   278  0ED4                     	;# 
   279  0ED5                     	;# 
   280  0ED6                     	;# 
   281  0ED7                     	;# 
   282  0ED8                     	;# 
   283  0ED9                     	;# 
   284  0EDA                     	;# 
   285  0EDB                     	;# 
   286  0EDC                     	;# 
   287  0EDD                     	;# 
   288  0EDE                     	;# 
   289  0EDF                     	;# 
   290  0EE0                     	;# 
   291  0EE1                     	;# 
   292  0EE1                     	;# 
   293  0EE2                     	;# 
   294  0EE3                     	;# 
   295  0EE3                     	;# 
   296  0EE4                     	;# 
   297  0EE5                     	;# 
   298  0EE5                     	;# 
   299  0EE6                     	;# 
   300  0EE7                     	;# 
   301  0EE7                     	;# 
   302  0EE8                     	;# 
   303  0EE9                     	;# 
   304  0EEA                     	;# 
   305  0EEB                     	;# 
   306  0EEC                     	;# 
   307  0EED                     	;# 
   308  0EEE                     	;# 
   309  0EEF                     	;# 
   310  0F11                     	;# 
   311  0F12                     	;# 
   312  0F13                     	;# 
   313  0F14                     	;# 
   314  0F15                     	;# 
   315  0F16                     	;# 
   316  0F17                     	;# 
   317  0F18                     	;# 
   318  0F19                     	;# 
   319  0F1A                     	;# 
   320  0F1B                     	;# 
   321  0F1C                     	;# 
   322  0F1D                     	;# 
   323  0F1E                     	;# 
   324  0F1F                     	;# 
   325  0F20                     	;# 
   326  0F21                     	;# 
   327  0F21                     	;# 
   328  0F22                     	;# 
   329  0F23                     	;# 
   330  0F23                     	;# 
   331  0F24                     	;# 
   332  0F25                     	;# 
   333  0F25                     	;# 
   334  0F26                     	;# 
   335  0F27                     	;# 
   336  0F27                     	;# 
   337  0F28                     	;# 
   338  0F29                     	;# 
   339  0F2A                     	;# 
   340  0F2B                     	;# 
   341  0F2C                     	;# 
   342  0F2D                     	;# 
   343  0F2E                     	;# 
   344  0F2F                     	;# 
   345  0FE4                     	;# 
   346  0FE5                     	;# 
   347  0FE6                     	;# 
   348  0FE7                     	;# 
   349  0FE8                     	;# 
   350  0FE9                     	;# 
   351  0FEA                     	;# 
   352  0FEB                     	;# 
   353  0FED                     	;# 
   354  0FEE                     	;# 
   355  0FEF                     	;# 
   356  0000                     	;# 
   357  0001                     	;# 
   358  0002                     	;# 
   359  0003                     	;# 
   360  0004                     	;# 
   361  0005                     	;# 
   362  0006                     	;# 
   363  0007                     	;# 
   364  0008                     	;# 
   365  0009                     	;# 
   366  000A                     	;# 
   367  000B                     	;# 
   368  000C                     	;# 
   369  000D                     	;# 
   370  000E                     	;# 
   371  0010                     	;# 
   372  0011                     	;# 
   373  0012                     	;# 
   374  0013                     	;# 
   375  0014                     	;# 
   376  0015                     	;# 
   377  0016                     	;# 
   378  0016                     	;# 
   379  0017                     	;# 
   380  0018                     	;# 
   381  0019                     	;# 
   382  001A                     	;# 
   383  001B                     	;# 
   384  001C                     	;# 
   385  008C                     	;# 
   386  008D                     	;# 
   387  008E                     	;# 
   388  0090                     	;# 
   389  0091                     	;# 
   390  0092                     	;# 
   391  0093                     	;# 
   392  0094                     	;# 
   393  0095                     	;# 
   394  0096                     	;# 
   395  0097                     	;# 
   396  0098                     	;# 
   397  0099                     	;# 
   398  009A                     	;# 
   399  009B                     	;# 
   400  009B                     	;# 
   401  009C                     	;# 
   402  009D                     	;# 
   403  009E                     	;# 
   404  009F                     	;# 
   405  010C                     	;# 
   406  010D                     	;# 
   407  010E                     	;# 
   408  0111                     	;# 
   409  0112                     	;# 
   410  0113                     	;# 
   411  0114                     	;# 
   412  0115                     	;# 
   413  0116                     	;# 
   414  0117                     	;# 
   415  0118                     	;# 
   416  0119                     	;# 
   417  011A                     	;# 
   418  011B                     	;# 
   419  011C                     	;# 
   420  011D                     	;# 
   421  011D                     	;# 
   422  011D                     	;# 
   423  011E                     	;# 
   424  011F                     	;# 
   425  018C                     	;# 
   426  018D                     	;# 
   427  018E                     	;# 
   428  0191                     	;# 
   429  0191                     	;# 
   430  0192                     	;# 
   431  0193                     	;# 
   432  0193                     	;# 
   433  0193                     	;# 
   434  0194                     	;# 
   435  0195                     	;# 
   436  0196                     	;# 
   437  0197                     	;# 
   438  0199                     	;# 
   439  0199                     	;# 
   440  0199                     	;# 
   441  019A                     	;# 
   442  019A                     	;# 
   443  019A                     	;# 
   444  019B                     	;# 
   445  019B                     	;# 
   446  019B                     	;# 
   447  019B                     	;# 
   448  019B                     	;# 
   449  019C                     	;# 
   450  019C                     	;# 
   451  019C                     	;# 
   452  019D                     	;# 
   453  019D                     	;# 
   454  019D                     	;# 
   455  019E                     	;# 
   456  019E                     	;# 
   457  019E                     	;# 
   458  019F                     	;# 
   459  019F                     	;# 
   460  019F                     	;# 
   461  019F                     	;# 
   462  019F                     	;# 
   463  020C                     	;# 
   464  020D                     	;# 
   465  020E                     	;# 
   466  0210                     	;# 
   467  0211                     	;# 
   468  0211                     	;# 
   469  0212                     	;# 
   470  0212                     	;# 
   471  0213                     	;# 
   472  0213                     	;# 
   473  0214                     	;# 
   474  0214                     	;# 
   475  0215                     	;# 
   476  0215                     	;# 
   477  0215                     	;# 
   478  0215                     	;# 
   479  0216                     	;# 
   480  0216                     	;# 
   481  0217                     	;# 
   482  0217                     	;# 
   483  028C                     	;# 
   484  028D                     	;# 
   485  028E                     	;# 
   486  0291                     	;# 
   487  0291                     	;# 
   488  0292                     	;# 
   489  0293                     	;# 
   490  0298                     	;# 
   491  0298                     	;# 
   492  0299                     	;# 
   493  029A                     	;# 
   494  030C                     	;# 
   495  030D                     	;# 
   496  030E                     	;# 
   497  0311                     	;# 
   498  0311                     	;# 
   499  0312                     	;# 
   500  0313                     	;# 
   501  038C                     	;# 
   502  038D                     	;# 
   503  038E                     	;# 
   504  0390                     	;# 
   505  0391                     	;# 
   506  0392                     	;# 
   507  0393                     	;# 
   508  0394                     	;# 
   509  0395                     	;# 
   510  0396                     	;# 
   511  0397                     	;# 
   512  0398                     	;# 
   513  0399                     	;# 
   514  039D                     	;# 
   515  039E                     	;# 
   516  039F                     	;# 
   517  0511                     	;# 
   518  0513                     	;# 
   519  051A                     	;# 
   520  0591                     	;# 
   521  0592                     	;# 
   522  0592                     	;# 
   523  0593                     	;# 
   524  0594                     	;# 
   525  0594                     	;# 
   526  0595                     	;# 
   527  0596                     	;# 
   528  0596                     	;# 
   529  0E91                     	;# 
   530  0E92                     	;# 
   531  0E93                     	;# 
   532  0E94                     	;# 
   533  0E95                     	;# 
   534  0E96                     	;# 
   535  0E97                     	;# 
   536  0E98                     	;# 
   537  0E99                     	;# 
   538  0E9A                     	;# 
   539  0E9B                     	;# 
   540  0E9C                     	;# 
   541  0E9D                     	;# 
   542  0E9E                     	;# 
   543  0E9F                     	;# 
   544  0EA0                     	;# 
   545  0EA1                     	;# 
   546  0EA1                     	;# 
   547  0EA2                     	;# 
   548  0EA3                     	;# 
   549  0EA3                     	;# 
   550  0EA4                     	;# 
   551  0EA5                     	;# 
   552  0EA5                     	;# 
   553  0EA6                     	;# 
   554  0EA7                     	;# 
   555  0EA7                     	;# 
   556  0EA8                     	;# 
   557  0EA9                     	;# 
   558  0EAA                     	;# 
   559  0EAB                     	;# 
   560  0EAC                     	;# 
   561  0EAD                     	;# 
   562  0EAE                     	;# 
   563  0EAF                     	;# 
   564  0EB1                     	;# 
   565  0EB2                     	;# 
   566  0EB3                     	;# 
   567  0EB4                     	;# 
   568  0EB5                     	;# 
   569  0EB6                     	;# 
   570  0EB7                     	;# 
   571  0EB8                     	;# 
   572  0EB9                     	;# 
   573  0EBA                     	;# 
   574  0EBB                     	;# 
   575  0EBC                     	;# 
   576  0EBD                     	;# 
   577  0EBE                     	;# 
   578  0EBF                     	;# 
   579  0EC0                     	;# 
   580  0EC1                     	;# 
   581  0EC1                     	;# 
   582  0EC2                     	;# 
   583  0EC3                     	;# 
   584  0EC3                     	;# 
   585  0EC4                     	;# 
   586  0EC5                     	;# 
   587  0EC5                     	;# 
   588  0EC6                     	;# 
   589  0EC7                     	;# 
   590  0EC7                     	;# 
   591  0EC8                     	;# 
   592  0EC9                     	;# 
   593  0ECA                     	;# 
   594  0ECB                     	;# 
   595  0ECC                     	;# 
   596  0ECD                     	;# 
   597  0ECE                     	;# 
   598  0ECF                     	;# 
   599  0ED1                     	;# 
   600  0ED2                     	;# 
   601  0ED3                     	;# 
   602  0ED4                     	;# 
   603  0ED5                     	;# 
   604  0ED6                     	;# 
   605  0ED7                     	;# 
   606  0ED8                     	;# 
   607  0ED9                     	;# 
   608  0EDA                     	;# 
   609  0EDB                     	;# 
   610  0EDC                     	;# 
   611  0EDD                     	;# 
   612  0EDE                     	;# 
   613  0EDF                     	;# 
   614  0EE0                     	;# 
   615  0EE1                     	;# 
   616  0EE1                     	;# 
   617  0EE2                     	;# 
   618  0EE3                     	;# 
   619  0EE3                     	;# 
   620  0EE4                     	;# 
   621  0EE5                     	;# 
   622  0EE5                     	;# 
   623  0EE6                     	;# 
   624  0EE7                     	;# 
   625  0EE7                     	;# 
   626  0EE8                     	;# 
   627  0EE9                     	;# 
   628  0EEA                     	;# 
   629  0EEB                     	;# 
   630  0EEC                     	;# 
   631  0EED                     	;# 
   632  0EEE                     	;# 
   633  0EEF                     	;# 
   634  0F11                     	;# 
   635  0F12                     	;# 
   636  0F13                     	;# 
   637  0F14                     	;# 
   638  0F15                     	;# 
   639  0F16                     	;# 
   640  0F17                     	;# 
   641  0F18                     	;# 
   642  0F19                     	;# 
   643  0F1A                     	;# 
   644  0F1B                     	;# 
   645  0F1C                     	;# 
   646  0F1D                     	;# 
   647  0F1E                     	;# 
   648  0F1F                     	;# 
   649  0F20                     	;# 
   650  0F21                     	;# 
   651  0F21                     	;# 
   652  0F22                     	;# 
   653  0F23                     	;# 
   654  0F23                     	;# 
   655  0F24                     	;# 
   656  0F25                     	;# 
   657  0F25                     	;# 
   658  0F26                     	;# 
   659  0F27                     	;# 
   660  0F27                     	;# 
   661  0F28                     	;# 
   662  0F29                     	;# 
   663  0F2A                     	;# 
   664  0F2B                     	;# 
   665  0F2C                     	;# 
   666  0F2D                     	;# 
   667  0F2E                     	;# 
   668  0F2F                     	;# 
   669  0FE4                     	;# 
   670  0FE5                     	;# 
   671  0FE6                     	;# 
   672  0FE7                     	;# 
   673  0FE8                     	;# 
   674  0FE9                     	;# 
   675  0FEA                     	;# 
   676  0FEB                     	;# 
   677  0FED                     	;# 
   678  0FEE                     	;# 
   679  0FEF                     	;# 
   680  0000                     	;# 
   681  0001                     	;# 
   682  0002                     	;# 
   683  0003                     	;# 
   684  0004                     	;# 
   685  0005                     	;# 
   686  0006                     	;# 
   687  0007                     	;# 
   688  0008                     	;# 
   689  0009                     	;# 
   690  000A                     	;# 
   691  000B                     	;# 
   692  000C                     	;# 
   693  000D                     	;# 
   694  000E                     	;# 
   695  0010                     	;# 
   696  0011                     	;# 
   697  0012                     	;# 
   698  0013                     	;# 
   699  0014                     	;# 
   700  0015                     	;# 
   701  0016                     	;# 
   702  0016                     	;# 
   703  0017                     	;# 
   704  0018                     	;# 
   705  0019                     	;# 
   706  001A                     	;# 
   707  001B                     	;# 
   708  001C                     	;# 
   709  008C                     	;# 
   710  008D                     	;# 
   711  008E                     	;# 
   712  0090                     	;# 
   713  0091                     	;# 
   714  0092                     	;# 
   715  0093                     	;# 
   716  0094                     	;# 
   717  0095                     	;# 
   718  0096                     	;# 
   719  0097                     	;# 
   720  0098                     	;# 
   721  0099                     	;# 
   722  009A                     	;# 
   723  009B                     	;# 
   724  009B                     	;# 
   725  009C                     	;# 
   726  009D                     	;# 
   727  009E                     	;# 
   728  009F                     	;# 
   729  010C                     	;# 
   730  010D                     	;# 
   731  010E                     	;# 
   732  0111                     	;# 
   733  0112                     	;# 
   734  0113                     	;# 
   735  0114                     	;# 
   736  0115                     	;# 
   737  0116                     	;# 
   738  0117                     	;# 
   739  0118                     	;# 
   740  0119                     	;# 
   741  011A                     	;# 
   742  011B                     	;# 
   743  011C                     	;# 
   744  011D                     	;# 
   745  011D                     	;# 
   746  011D                     	;# 
   747  011E                     	;# 
   748  011F                     	;# 
   749  018C                     	;# 
   750  018D                     	;# 
   751  018E                     	;# 
   752  0191                     	;# 
   753  0191                     	;# 
   754  0192                     	;# 
   755  0193                     	;# 
   756  0193                     	;# 
   757  0193                     	;# 
   758  0194                     	;# 
   759  0195                     	;# 
   760  0196                     	;# 
   761  0197                     	;# 
   762  0199                     	;# 
   763  0199                     	;# 
   764  0199                     	;# 
   765  019A                     	;# 
   766  019A                     	;# 
   767  019A                     	;# 
   768  019B                     	;# 
   769  019B                     	;# 
   770  019B                     	;# 
   771  019B                     	;# 
   772  019B                     	;# 
   773  019C                     	;# 
   774  019C                     	;# 
   775  019C                     	;# 
   776  019D                     	;# 
   777  019D                     	;# 
   778  019D                     	;# 
   779  019E                     	;# 
   780  019E                     	;# 
   781  019E                     	;# 
   782  019F                     	;# 
   783  019F                     	;# 
   784  019F                     	;# 
   785  019F                     	;# 
   786  019F                     	;# 
   787  020C                     	;# 
   788  020D                     	;# 
   789  020E                     	;# 
   790  0210                     	;# 
   791  0211                     	;# 
   792  0211                     	;# 
   793  0212                     	;# 
   794  0212                     	;# 
   795  0213                     	;# 
   796  0213                     	;# 
   797  0214                     	;# 
   798  0214                     	;# 
   799  0215                     	;# 
   800  0215                     	;# 
   801  0215                     	;# 
   802  0215                     	;# 
   803  0216                     	;# 
   804  0216                     	;# 
   805  0217                     	;# 
   806  0217                     	;# 
   807  028C                     	;# 
   808  028D                     	;# 
   809  028E                     	;# 
   810  0291                     	;# 
   811  0291                     	;# 
   812  0292                     	;# 
   813  0293                     	;# 
   814  0298                     	;# 
   815  0298                     	;# 
   816  0299                     	;# 
   817  029A                     	;# 
   818  030C                     	;# 
   819  030D                     	;# 
   820  030E                     	;# 
   821  0311                     	;# 
   822  0311                     	;# 
   823  0312                     	;# 
   824  0313                     	;# 
   825  038C                     	;# 
   826  038D                     	;# 
   827  038E                     	;# 
   828  0390                     	;# 
   829  0391                     	;# 
   830  0392                     	;# 
   831  0393                     	;# 
   832  0394                     	;# 
   833  0395                     	;# 
   834  0396                     	;# 
   835  0397                     	;# 
   836  0398                     	;# 
   837  0399                     	;# 
   838  039D                     	;# 
   839  039E                     	;# 
   840  039F                     	;# 
   841  0511                     	;# 
   842  0513                     	;# 
   843  051A                     	;# 
   844  0591                     	;# 
   845  0592                     	;# 
   846  0592                     	;# 
   847  0593                     	;# 
   848  0594                     	;# 
   849  0594                     	;# 
   850  0595                     	;# 
   851  0596                     	;# 
   852  0596                     	;# 
   853  0E91                     	;# 
   854  0E92                     	;# 
   855  0E93                     	;# 
   856  0E94                     	;# 
   857  0E95                     	;# 
   858  0E96                     	;# 
   859  0E97                     	;# 
   860  0E98                     	;# 
   861  0E99                     	;# 
   862  0E9A                     	;# 
   863  0E9B                     	;# 
   864  0E9C                     	;# 
   865  0E9D                     	;# 
   866  0E9E                     	;# 
   867  0E9F                     	;# 
   868  0EA0                     	;# 
   869  0EA1                     	;# 
   870  0EA1                     	;# 
   871  0EA2                     	;# 
   872  0EA3                     	;# 
   873  0EA3                     	;# 
   874  0EA4                     	;# 
   875  0EA5                     	;# 
   876  0EA5                     	;# 
   877  0EA6                     	;# 
   878  0EA7                     	;# 
   879  0EA7                     	;# 
   880  0EA8                     	;# 
   881  0EA9                     	;# 
   882  0EAA                     	;# 
   883  0EAB                     	;# 
   884  0EAC                     	;# 
   885  0EAD                     	;# 
   886  0EAE                     	;# 
   887  0EAF                     	;# 
   888  0EB1                     	;# 
   889  0EB2                     	;# 
   890  0EB3                     	;# 
   891  0EB4                     	;# 
   892  0EB5                     	;# 
   893  0EB6                     	;# 
   894  0EB7                     	;# 
   895  0EB8                     	;# 
   896  0EB9                     	;# 
   897  0EBA                     	;# 
   898  0EBB                     	;# 
   899  0EBC                     	;# 
   900  0EBD                     	;# 
   901  0EBE                     	;# 
   902  0EBF                     	;# 
   903  0EC0                     	;# 
   904  0EC1                     	;# 
   905  0EC1                     	;# 
   906  0EC2                     	;# 
   907  0EC3                     	;# 
   908  0EC3                     	;# 
   909  0EC4                     	;# 
   910  0EC5                     	;# 
   911  0EC5                     	;# 
   912  0EC6                     	;# 
   913  0EC7                     	;# 
   914  0EC7                     	;# 
   915  0EC8                     	;# 
   916  0EC9                     	;# 
   917  0ECA                     	;# 
   918  0ECB                     	;# 
   919  0ECC                     	;# 
   920  0ECD                     	;# 
   921  0ECE                     	;# 
   922  0ECF                     	;# 
   923  0ED1                     	;# 
   924  0ED2                     	;# 
   925  0ED3                     	;# 
   926  0ED4                     	;# 
   927  0ED5                     	;# 
   928  0ED6                     	;# 
   929  0ED7                     	;# 
   930  0ED8                     	;# 
   931  0ED9                     	;# 
   932  0EDA                     	;# 
   933  0EDB                     	;# 
   934  0EDC                     	;# 
   935  0EDD                     	;# 
   936  0EDE                     	;# 
   937  0EDF                     	;# 
   938  0EE0                     	;# 
   939  0EE1                     	;# 
   940  0EE1                     	;# 
   941  0EE2                     	;# 
   942  0EE3                     	;# 
   943  0EE3                     	;# 
   944  0EE4                     	;# 
   945  0EE5                     	;# 
   946  0EE5                     	;# 
   947  0EE6                     	;# 
   948  0EE7                     	;# 
   949  0EE7                     	;# 
   950  0EE8                     	;# 
   951  0EE9                     	;# 
   952  0EEA                     	;# 
   953  0EEB                     	;# 
   954  0EEC                     	;# 
   955  0EED                     	;# 
   956  0EEE                     	;# 
   957  0EEF                     	;# 
   958  0F11                     	;# 
   959  0F12                     	;# 
   960  0F13                     	;# 
   961  0F14                     	;# 
   962  0F15                     	;# 
   963  0F16                     	;# 
   964  0F17                     	;# 
   965  0F18                     	;# 
   966  0F19                     	;# 
   967  0F1A                     	;# 
   968  0F1B                     	;# 
   969  0F1C                     	;# 
   970  0F1D                     	;# 
   971  0F1E                     	;# 
   972  0F1F                     	;# 
   973  0F20                     	;# 
   974  0F21                     	;# 
   975  0F21                     	;# 
   976  0F22                     	;# 
   977  0F23                     	;# 
   978  0F23                     	;# 
   979  0F24                     	;# 
   980  0F25                     	;# 
   981  0F25                     	;# 
   982  0F26                     	;# 
   983  0F27                     	;# 
   984  0F27                     	;# 
   985  0F28                     	;# 
   986  0F29                     	;# 
   987  0F2A                     	;# 
   988  0F2B                     	;# 
   989  0F2C                     	;# 
   990  0F2D                     	;# 
   991  0F2E                     	;# 
   992  0F2F                     	;# 
   993  0FE4                     	;# 
   994  0FE5                     	;# 
   995  0FE6                     	;# 
   996  0FE7                     	;# 
   997  0FE8                     	;# 
   998  0FE9                     	;# 
   999  0FEA                     	;# 
  1000  0FEB                     	;# 
  1001  0FED                     	;# 
  1002  0FEE                     	;# 
  1003  0FEF                     	;# 
  1004                           
  1005                           	psect	idataBANK0
  1006  00C1                     __pidataBANK0:	
  1007                           
  1008                           ;initializer for _health
  1009  00C1  3432               	retlw	50
  1010                           
  1011                           	psect	stringtext
  1012  0800                     __pstringtext:	
  1013  0800                     _dpowers:	
  1014  0800  3401               	retlw	1
  1015  0801  3400               	retlw	0
  1016  0802  340A               	retlw	10
  1017  0803  3400               	retlw	0
  1018  0804  3464               	retlw	100
  1019  0805  3400               	retlw	0
  1020  0806  34E8               	retlw	232
  1021  0807  3403               	retlw	3
  1022  0808  3410               	retlw	16
  1023  0809  3427               	retlw	39
  1024  080A                     __end_of_dpowers:	
  1025  005F                     _GIE	set	95
  1026  006B                     _RB3	set	107
  1027  008D                     _RCIF	set	141
  1028  0099                     _OSCCON	set	153
  1029  0094                     _PIE4	set	148
  1030  008D                     _TRISB	set	141
  1031  008E                     _TRISC	set	142
  1032  048D                     _RCIE	set	1165
  1033  0199                     _RCREG	set	409
  1034  019B                     _SPBRG	set	411
  1035  019A                     _TXREG	set	410
  1036  0CFB                     _BRG16	set	3323
  1037  0CF2                     _BRGH	set	3314
  1038  0CEC                     _CREN	set	3308
  1039  0CEF                     _SPEN	set	3311
  1040  0CF4                     _SYNC	set	3316
  1041  0CF1                     _TRMT	set	3313
  1042  0CF5                     _TXEN	set	3317
  1043  0E9D                     _PSMC1ASDC	set	3741
  1044  0E9E                     _PSMC1ASDL	set	3742
  1045  0E9F                     _PSMC1ASDS	set	3743
  1046  0EAC                     _PSMC1BLKF	set	3756
  1047  0EAB                     _PSMC1BLKR	set	3755
  1048  0E97                     _PSMC1BLNK	set	3735
  1049  0E94                     _PSMC1CLK	set	3732
  1050  0E91                     _PSMC1CON	set	3729
  1051  0EAA                     _PSMC1DBF	set	3754
  1052  0EA9                     _PSMC1DBR	set	3753
  1053  0EA4                     _PSMC1DCH	set	3748
  1054  0EA3                     _PSMC1DCL	set	3747
  1055  0E9B                     _PSMC1DCS	set	3739
  1056  0E99                     _PSMC1FEBS	set	3737
  1057  0EAD                     _PSMC1FFA	set	3757
  1058  0EA0                     _PSMC1INT	set	3744
  1059  0E92                     _PSMC1MDL	set	3730
  1060  0E95                     _PSMC1OEN	set	3733
  1061  0EA2                     _PSMC1PHH	set	3746
  1062  0EA1                     _PSMC1PHL	set	3745
  1063  0E9A                     _PSMC1PHS	set	3738
  1064  0E96                     _PSMC1POL	set	3734
  1065  0EA6                     _PSMC1PRH	set	3750
  1066  0EA5                     _PSMC1PRL	set	3749
  1067  0E9C                     _PSMC1PRS	set	3740
  1068  0E98                     _PSMC1REBS	set	3736
  1069  0EAE                     _PSMC1STR0	set	3758
  1070  0EAF                     _PSMC1STR1	set	3759
  1071  0E93                     _PSMC1SYNC	set	3731
  1072  7495                     _P1MDLBIT	set	29845
  1073  080A                     STR_22:	
  1074  080A  3450               	retlw	80	;'P'
  1075  080B  3472               	retlw	114	;'r'
  1076  080C  3465               	retlw	101	;'e'
  1077  080D  3473               	retlw	115	;'s'
  1078  080E  3473               	retlw	115	;'s'
  1079  080F  3420               	retlw	32	;' '
  1080  0810  3427               	retlw	39	;'''
  1081  0811  3464               	retlw	100	;'d'
  1082  0812  3427               	retlw	39	;'''
  1083  0813  342C               	retlw	44	;','
  1084  0814  3420               	retlw	32	;' '
  1085  0815  3427               	retlw	39	;'''
  1086  0816  3468               	retlw	104	;'h'
  1087  0817  3427               	retlw	39	;'''
  1088  0818  342C               	retlw	44	;','
  1089  0819  3420               	retlw	32	;' '
  1090  081A  346F               	retlw	111	;'o'
  1091  081B  3472               	retlw	114	;'r'
  1092  081C  3420               	retlw	32	;' '
  1093  081D  3427               	retlw	39	;'''
  1094  081E  3474               	retlw	116	;'t'
  1095  081F  3427               	retlw	39	;'''
  1096  0820  3420               	retlw	32	;' '
  1097  0821  3474               	retlw	116	;'t'
  1098  0822  346F               	retlw	111	;'o'
  1099  0823  3420               	retlw	32	;' '
  1100  0824  3473               	retlw	115	;'s'
  1101  0825  3465               	retlw	101	;'e'
  1102  0826  346E               	retlw	110	;'n'
  1103  0827  3464               	retlw	100	;'d'
  1104  0828  3420               	retlw	32	;' '
  1105  0829  3464               	retlw	100	;'d'
  1106  082A  3461               	retlw	97	;'a'
  1107  082B  346D               	retlw	109	;'m'
  1108  082C  3461               	retlw	97	;'a'
  1109  082D  3467               	retlw	103	;'g'
  1110  082E  3465               	retlw	101	;'e'
  1111  082F  342C               	retlw	44	;','
  1112  0830  3420               	retlw	32	;' '
  1113  0831  3468               	retlw	104	;'h'
  1114  0832  3465               	retlw	101	;'e'
  1115  0833  3461               	retlw	97	;'a'
  1116  0834  346C               	retlw	108	;'l'
  1117  0835  3474               	retlw	116	;'t'
  1118  0836  3468               	retlw	104	;'h'
  1119  0837  342C               	retlw	44	;','
  1120  0838  3420               	retlw	32	;' '
  1121  0839  346F               	retlw	111	;'o'
  1122  083A  3472               	retlw	114	;'r'
  1123  083B  3420               	retlw	32	;' '
  1124  083C  3473               	retlw	115	;'s'
  1125  083D  3474               	retlw	116	;'t'
  1126  083E  3475               	retlw	117	;'u'
  1127  083F  346E               	retlw	110	;'n'
  1128  0840  3420               	retlw	32	;' '
  1129  0841  3470               	retlw	112	;'p'
  1130  0842  3461               	retlw	97	;'a'
  1131  0843  3463               	retlw	99	;'c'
  1132  0844  346B               	retlw	107	;'k'
  1133  0845  3465               	retlw	101	;'e'
  1134  0846  3474               	retlw	116	;'t'
  1135  0847  3473               	retlw	115	;'s'
  1136  0848  342E               	retlw	46	;'.'
  1137  0849  340A               	retlw	10
  1138  084A  340D               	retlw	13
  1139  084B  3400               	retlw	0
  1140  084C                     STR_10:	
  1141  084C  340A               	retlw	10
  1142  084D  340D               	retlw	13
  1143  084E  3457               	retlw	87	;'W'
  1144  084F  3468               	retlw	104	;'h'
  1145  0850  3469               	retlw	105	;'i'
  1146  0851  3463               	retlw	99	;'c'
  1147  0852  3468               	retlw	104	;'h'
  1148  0853  3420               	retlw	32	;' '
  1149  0854  3462               	retlw	98	;'b'
  1150  0855  346C               	retlw	108	;'l'
  1151  0856  3461               	retlw	97	;'a'
  1152  0857  3464               	retlw	100	;'d'
  1153  0858  3465               	retlw	101	;'e'
  1154  0859  3420               	retlw	32	;' '
  1155  085A  3477               	retlw	119	;'w'
  1156  085B  346F               	retlw	111	;'o'
  1157  085C  3475               	retlw	117	;'u'
  1158  085D  346C               	retlw	108	;'l'
  1159  085E  3464               	retlw	100	;'d'
  1160  085F  3420               	retlw	32	;' '
  1161  0860  3479               	retlw	121	;'y'
  1162  0861  346F               	retlw	111	;'o'
  1163  0862  3475               	retlw	117	;'u'
  1164  0863  3420               	retlw	32	;' '
  1165  0864  346C               	retlw	108	;'l'
  1166  0865  3469               	retlw	105	;'i'
  1167  0866  346B               	retlw	107	;'k'
  1168  0867  3465               	retlw	101	;'e'
  1169  0868  3420               	retlw	32	;' '
  1170  0869  3474               	retlw	116	;'t'
  1171  086A  346F               	retlw	111	;'o'
  1172  086B  3420               	retlw	32	;' '
  1173  086C  3474               	retlw	116	;'t'
  1174  086D  3465               	retlw	101	;'e'
  1175  086E  3473               	retlw	115	;'s'
  1176  086F  3474               	retlw	116	;'t'
  1177  0870  343F               	retlw	63	;'?'
  1178  0871  3420               	retlw	32	;' '
  1179  0872  3445               	retlw	69	;'E'
  1180  0873  346E               	retlw	110	;'n'
  1181  0874  3474               	retlw	116	;'t'
  1182  0875  3465               	retlw	101	;'e'
  1183  0876  3472               	retlw	114	;'r'
  1184  0877  3420               	retlw	32	;' '
  1185  0878  3461               	retlw	97	;'a'
  1186  0879  3420               	retlw	32	;' '
  1187  087A  3466               	retlw	102	;'f'
  1188  087B  346F               	retlw	111	;'o'
  1189  087C  3472               	retlw	114	;'r'
  1190  087D  3420               	retlw	32	;' '
  1191  087E  3441               	retlw	65	;'A'
  1192  087F  346C               	retlw	108	;'l'
  1193  0880  3470               	retlw	112	;'p'
  1194  0881  3468               	retlw	104	;'h'
  1195  0882  3461               	retlw	97	;'a'
  1196  0883  342C               	retlw	44	;','
  1197  0884  3420               	retlw	32	;' '
  1198  0885  3462               	retlw	98	;'b'
  1199  0886  3420               	retlw	32	;' '
  1200  0887  3466               	retlw	102	;'f'
  1201  0888  346F               	retlw	111	;'o'
  1202  0889  3472               	retlw	114	;'r'
  1203  088A  340A               	retlw	10
  1204  088B  340D               	retlw	13
  1205  088C  3400               	retlw	0
  1206  088D                     STR_9:	
  1207  088D  340A               	retlw	10
  1208  088E  340D               	retlw	13
  1209  088F  343D               	retlw	61	;'='
  1210  0890  343D               	retlw	61	;'='
  1211  0891  343D               	retlw	61	;'='
  1212  0892  343D               	retlw	61	;'='
  1213  0893  343D               	retlw	61	;'='
  1214  0894  343D               	retlw	61	;'='
  1215  0895  343D               	retlw	61	;'='
  1216  0896  343D               	retlw	61	;'='
  1217  0897  343D               	retlw	61	;'='
  1218  0898  343D               	retlw	61	;'='
  1219  0899  343D               	retlw	61	;'='
  1220  089A  343D               	retlw	61	;'='
  1221  089B  343D               	retlw	61	;'='
  1222  089C  343D               	retlw	61	;'='
  1223  089D  343D               	retlw	61	;'='
  1224  089E  343D               	retlw	61	;'='
  1225  089F  343D               	retlw	61	;'='
  1226  08A0  343D               	retlw	61	;'='
  1227  08A1  343D               	retlw	61	;'='
  1228  08A2  343D               	retlw	61	;'='
  1229  08A3  343D               	retlw	61	;'='
  1230  08A4  343D               	retlw	61	;'='
  1231  08A5  343D               	retlw	61	;'='
  1232  08A6  343D               	retlw	61	;'='
  1233  08A7  343D               	retlw	61	;'='
  1234  08A8  343D               	retlw	61	;'='
  1235  08A9  343D               	retlw	61	;'='
  1236  08AA  343D               	retlw	61	;'='
  1237  08AB  343D               	retlw	61	;'='
  1238  08AC  343D               	retlw	61	;'='
  1239  08AD  343D               	retlw	61	;'='
  1240  08AE  343D               	retlw	61	;'='
  1241  08AF  343D               	retlw	61	;'='
  1242  08B0  343D               	retlw	61	;'='
  1243  08B1  343D               	retlw	61	;'='
  1244  08B2  343D               	retlw	61	;'='
  1245  08B3  343D               	retlw	61	;'='
  1246  08B4  343D               	retlw	61	;'='
  1247  08B5  343D               	retlw	61	;'='
  1248  08B6  343D               	retlw	61	;'='
  1249  08B7  343D               	retlw	61	;'='
  1250  08B8  343D               	retlw	61	;'='
  1251  08B9  343D               	retlw	61	;'='
  1252  08BA  343D               	retlw	61	;'='
  1253  08BB  343D               	retlw	61	;'='
  1254  08BC  343D               	retlw	61	;'='
  1255  08BD  343D               	retlw	61	;'='
  1256  08BE  343D               	retlw	61	;'='
  1257  08BF  343D               	retlw	61	;'='
  1258  08C0  343D               	retlw	61	;'='
  1259  08C1  343D               	retlw	61	;'='
  1260  08C2  343D               	retlw	61	;'='
  1261  08C3  343D               	retlw	61	;'='
  1262  08C4  343D               	retlw	61	;'='
  1263  08C5  343D               	retlw	61	;'='
  1264  08C6  343D               	retlw	61	;'='
  1265  08C7  343D               	retlw	61	;'='
  1266  08C8  340A               	retlw	10
  1267  08C9  340D               	retlw	13
  1268  08CA  3400               	retlw	0
  1269  08CB                     STR_21:	
  1270  08CB  3450               	retlw	80	;'P'
  1271  08CC  3472               	retlw	114	;'r'
  1272  08CD  3465               	retlw	101	;'e'
  1273  08CE  3473               	retlw	115	;'s'
  1274  08CF  3473               	retlw	115	;'s'
  1275  08D0  3420               	retlw	32	;' '
  1276  08D1  3427               	retlw	39	;'''
  1277  08D2  3473               	retlw	115	;'s'
  1278  08D3  3427               	retlw	39	;'''
  1279  08D4  3420               	retlw	32	;' '
  1280  08D5  3474               	retlw	116	;'t'
  1281  08D6  346F               	retlw	111	;'o'
  1282  08D7  3420               	retlw	32	;' '
  1283  08D8  3473               	retlw	115	;'s'
  1284  08D9  3477               	retlw	119	;'w'
  1285  08DA  3469               	retlw	105	;'i'
  1286  08DB  346E               	retlw	110	;'n'
  1287  08DC  3467               	retlw	103	;'g'
  1288  08DD  3420               	retlw	32	;' '
  1289  08DE  3474               	retlw	116	;'t'
  1290  08DF  3468               	retlw	104	;'h'
  1291  08E0  3465               	retlw	101	;'e'
  1292  08E1  3420               	retlw	32	;' '
  1293  08E2  3473               	retlw	115	;'s'
  1294  08E3  3477               	retlw	119	;'w'
  1295  08E4  346F               	retlw	111	;'o'
  1296  08E5  3472               	retlw	114	;'r'
  1297  08E6  3464               	retlw	100	;'d'
  1298  08E7  3420               	retlw	32	;' '
  1299  08E8  3461               	retlw	97	;'a'
  1300  08E9  346E               	retlw	110	;'n'
  1301  08EA  3464               	retlw	100	;'d'
  1302  08EB  3420               	retlw	32	;' '
  1303  08EC  3473               	retlw	115	;'s'
  1304  08ED  3465               	retlw	101	;'e'
  1305  08EE  3465               	retlw	101	;'e'
  1306  08EF  3420               	retlw	32	;' '
  1307  08F0  3477               	retlw	119	;'w'
  1308  08F1  3468               	retlw	104	;'h'
  1309  08F2  3461               	retlw	97	;'a'
  1310  08F3  3474               	retlw	116	;'t'
  1311  08F4  3420               	retlw	32	;' '
  1312  08F5  3468               	retlw	104	;'h'
  1313  08F6  3461               	retlw	97	;'a'
  1314  08F7  3470               	retlw	112	;'p'
  1315  08F8  3470               	retlw	112	;'p'
  1316  08F9  3465               	retlw	101	;'e'
  1317  08FA  346E               	retlw	110	;'n'
  1318  08FB  3473               	retlw	115	;'s'
  1319  08FC  3421               	retlw	33	;'!'
  1320  08FD  340A               	retlw	10
  1321  08FE  340D               	retlw	13
  1322  08FF  3400               	retlw	0
  1323  0900                     STR_48:	
  1324  0900  340A               	retlw	10
  1325  0901  340D               	retlw	13
  1326  0902  3447               	retlw	71	;'G'
  1327  0903  346F               	retlw	111	;'o'
  1328  0904  346F               	retlw	111	;'o'
  1329  0905  3464               	retlw	100	;'d'
  1330  0906  3420               	retlw	32	;' '
  1331  0907  346A               	retlw	106	;'j'
  1332  0908  346F               	retlw	111	;'o'
  1333  0909  3462               	retlw	98	;'b'
  1334  090A  342E               	retlw	46	;'.'
  1335  090B  3420               	retlw	32	;' '
  1336  090C  3459               	retlw	89	;'Y'
  1337  090D  346F               	retlw	111	;'o'
  1338  090E  3475               	retlw	117	;'u'
  1339  090F  3420               	retlw	32	;' '
  1340  0910  346B               	retlw	107	;'k'
  1341  0911  346E               	retlw	110	;'n'
  1342  0912  346F               	retlw	111	;'o'
  1343  0913  3477               	retlw	119	;'w'
  1344  0914  3420               	retlw	32	;' '
  1345  0915  3468               	retlw	104	;'h'
  1346  0916  346F               	retlw	111	;'o'
  1347  0917  3477               	retlw	119	;'w'
  1348  0918  3420               	retlw	32	;' '
  1349  0919  3474               	retlw	116	;'t'
  1350  091A  346F               	retlw	111	;'o'
  1351  091B  3420               	retlw	32	;' '
  1352  091C  3472               	retlw	114	;'r'
  1353  091D  3465               	retlw	101	;'e'
  1354  091E  3461               	retlw	97	;'a'
  1355  091F  3464               	retlw	100	;'d'
  1356  0920  3420               	retlw	32	;' '
  1357  0921  3469               	retlw	105	;'i'
  1358  0922  346E               	retlw	110	;'n'
  1359  0923  3473               	retlw	115	;'s'
  1360  0924  3474               	retlw	116	;'t'
  1361  0925  3472               	retlw	114	;'r'
  1362  0926  3475               	retlw	117	;'u'
  1363  0927  3463               	retlw	99	;'c'
  1364  0928  3474               	retlw	116	;'t'
  1365  0929  3469               	retlw	105	;'i'
  1366  092A  346F               	retlw	111	;'o'
  1367  092B  346E               	retlw	110	;'n'
  1368  092C  3473               	retlw	115	;'s'
  1369  092D  342E               	retlw	46	;'.'
  1370  092E  340A               	retlw	10
  1371  092F  340A               	retlw	10
  1372  0930  3400               	retlw	0
  1373  0931                     STR_6:	
  1374  0931  3444               	retlw	68	;'D'
  1375  0932  3469               	retlw	105	;'i'
  1376  0933  3473               	retlw	115	;'s'
  1377  0934  3470               	retlw	112	;'p'
  1378  0935  346C               	retlw	108	;'l'
  1379  0936  3461               	retlw	97	;'a'
  1380  0937  3479               	retlw	121	;'y'
  1381  0938  3465               	retlw	101	;'e'
  1382  0939  3464               	retlw	100	;'d'
  1383  093A  3420               	retlw	32	;' '
  1384  093B  3469               	retlw	105	;'i'
  1385  093C  346E               	retlw	110	;'n'
  1386  093D  3464               	retlw	100	;'d'
  1387  093E  3469               	retlw	105	;'i'
  1388  093F  3476               	retlw	118	;'v'
  1389  0940  3469               	retlw	105	;'i'
  1390  0941  3464               	retlw	100	;'d'
  1391  0942  3475               	retlw	117	;'u'
  1392  0943  3461               	retlw	97	;'a'
  1393  0944  346C               	retlw	108	;'l'
  1394  0945  3420               	retlw	32	;' '
  1395  0946  3473               	retlw	115	;'s'
  1396  0947  3477               	retlw	119	;'w'
  1397  0948  346F               	retlw	111	;'o'
  1398  0949  3472               	retlw	114	;'r'
  1399  094A  3464               	retlw	100	;'d'
  1400  094B  3420               	retlw	32	;' '
  1401  094C  3473               	retlw	115	;'s'
  1402  094D  3477               	retlw	119	;'w'
  1403  094E  3469               	retlw	105	;'i'
  1404  094F  346E               	retlw	110	;'n'
  1405  0950  3467               	retlw	103	;'g'
  1406  0951  3420               	retlw	32	;' '
  1407  0952  346C               	retlw	108	;'l'
  1408  0953  3469               	retlw	105	;'i'
  1409  0954  3467               	retlw	103	;'g'
  1410  0955  3468               	retlw	104	;'h'
  1411  0956  3474               	retlw	116	;'t'
  1412  0957  3420               	retlw	32	;' '
  1413  0958  3473               	retlw	115	;'s'
  1414  0959  3468               	retlw	104	;'h'
  1415  095A  346F               	retlw	111	;'o'
  1416  095B  3477               	retlw	119	;'w'
  1417  095C  342E               	retlw	46	;'.'
  1418  095D  340A               	retlw	10
  1419  095E  340D               	retlw	13
  1420  095F  3400               	retlw	0
  1421  0960                     STR_25:	
  1422  0960  3454               	retlw	84	;'T'
  1423  0961  3468               	retlw	104	;'h'
  1424  0962  3465               	retlw	101	;'e'
  1425  0963  3420               	retlw	32	;' '
  1426  0964  3462               	retlw	98	;'b'
  1427  0965  346C               	retlw	108	;'l'
  1428  0966  3461               	retlw	97	;'a'
  1429  0967  3464               	retlw	100	;'d'
  1430  0968  3465               	retlw	101	;'e'
  1431  0969  3420               	retlw	32	;' '
  1432  096A  3468               	retlw	104	;'h'
  1433  096B  3461               	retlw	97	;'a'
  1434  096C  3473               	retlw	115	;'s'
  1435  096D  3420               	retlw	32	;' '
  1436  096E  3462               	retlw	98	;'b'
  1437  096F  3465               	retlw	101	;'e'
  1438  0970  3465               	retlw	101	;'e'
  1439  0971  346E               	retlw	110	;'n'
  1440  0972  3420               	retlw	32	;' '
  1441  0973  3464               	retlw	100	;'d'
  1442  0974  3461               	retlw	97	;'a'
  1443  0975  346D               	retlw	109	;'m'
  1444  0976  3461               	retlw	97	;'a'
  1445  0977  3467               	retlw	103	;'g'
  1446  0978  3465               	retlw	101	;'e'
  1447  0979  3464               	retlw	100	;'d'
  1448  097A  342E               	retlw	46	;'.'
  1449  097B  3420               	retlw	32	;' '
  1450  097C  3448               	retlw	72	;'H'
  1451  097D  3465               	retlw	101	;'e'
  1452  097E  3461               	retlw	97	;'a'
  1453  097F  346C               	retlw	108	;'l'
  1454  0980  3474               	retlw	116	;'t'
  1455  0981  3468               	retlw	104	;'h'
  1456  0982  3420               	retlw	32	;' '
  1457  0983  343D               	retlw	61	;'='
  1458  0984  3420               	retlw	32	;' '
  1459  0985  3425               	retlw	37	;'%'
  1460  0986  3464               	retlw	100	;'d'
  1461  0987  342E               	retlw	46	;'.'
  1462  0988  340A               	retlw	10
  1463  0989  340D               	retlw	13
  1464  098A  3400               	retlw	0
  1465  098B                     STR_26:	
  1466  098B  3454               	retlw	84	;'T'
  1467  098C  3468               	retlw	104	;'h'
  1468  098D  3465               	retlw	101	;'e'
  1469  098E  3420               	retlw	32	;' '
  1470  098F  3462               	retlw	98	;'b'
  1471  0990  346C               	retlw	108	;'l'
  1472  0991  3461               	retlw	97	;'a'
  1473  0992  3464               	retlw	100	;'d'
  1474  0993  3465               	retlw	101	;'e'
  1475  0994  3420               	retlw	32	;' '
  1476  0995  3468               	retlw	104	;'h'
  1477  0996  3461               	retlw	97	;'a'
  1478  0997  3473               	retlw	115	;'s'
  1479  0998  3420               	retlw	32	;' '
  1480  0999  3462               	retlw	98	;'b'
  1481  099A  3465               	retlw	101	;'e'
  1482  099B  3465               	retlw	101	;'e'
  1483  099C  346E               	retlw	110	;'n'
  1484  099D  3420               	retlw	32	;' '
  1485  099E  3468               	retlw	104	;'h'
  1486  099F  3465               	retlw	101	;'e'
  1487  09A0  3461               	retlw	97	;'a'
  1488  09A1  346C               	retlw	108	;'l'
  1489  09A2  3465               	retlw	101	;'e'
  1490  09A3  3464               	retlw	100	;'d'
  1491  09A4  342E               	retlw	46	;'.'
  1492  09A5  3420               	retlw	32	;' '
  1493  09A6  3448               	retlw	72	;'H'
  1494  09A7  3465               	retlw	101	;'e'
  1495  09A8  3461               	retlw	97	;'a'
  1496  09A9  346C               	retlw	108	;'l'
  1497  09AA  3474               	retlw	116	;'t'
  1498  09AB  3468               	retlw	104	;'h'
  1499  09AC  3420               	retlw	32	;' '
  1500  09AD  343D               	retlw	61	;'='
  1501  09AE  3420               	retlw	32	;' '
  1502  09AF  3425               	retlw	37	;'%'
  1503  09B0  3464               	retlw	100	;'d'
  1504  09B1  342E               	retlw	46	;'.'
  1505  09B2  340A               	retlw	10
  1506  09B3  340D               	retlw	13
  1507  09B4  3400               	retlw	0
  1508  09B5                     STR_7:	
  1509  09B5  3444               	retlw	68	;'D'
  1510  09B6  3469               	retlw	105	;'i'
  1511  09B7  3473               	retlw	115	;'s'
  1512  09B8  3470               	retlw	112	;'p'
  1513  09B9  346C               	retlw	108	;'l'
  1514  09BA  3461               	retlw	97	;'a'
  1515  09BB  3479               	retlw	121	;'y'
  1516  09BC  3465               	retlw	101	;'e'
  1517  09BD  3464               	retlw	100	;'d'
  1518  09BE  3420               	retlw	32	;' '
  1519  09BF  344F               	retlw	79	;'O'
  1520  09C0  346D               	retlw	109	;'m'
  1521  09C1  3465               	retlw	101	;'e'
  1522  09C2  3467               	retlw	103	;'g'
  1523  09C3  3461               	retlw	97	;'a'
  1524  09C4  3420               	retlw	32	;' '
  1525  09C5  3462               	retlw	98	;'b'
  1526  09C6  346C               	retlw	108	;'l'
  1527  09C7  3461               	retlw	97	;'a'
  1528  09C8  3464               	retlw	100	;'d'
  1529  09C9  3465               	retlw	101	;'e'
  1530  09CA  3420               	retlw	32	;' '
  1531  09CB  3473               	retlw	115	;'s'
  1532  09CC  3477               	retlw	119	;'w'
  1533  09CD  3469               	retlw	105	;'i'
  1534  09CE  346E               	retlw	110	;'n'
  1535  09CF  3467               	retlw	103	;'g'
  1536  09D0  3420               	retlw	32	;' '
  1537  09D1  346C               	retlw	108	;'l'
  1538  09D2  3469               	retlw	105	;'i'
  1539  09D3  3467               	retlw	103	;'g'
  1540  09D4  3468               	retlw	104	;'h'
  1541  09D5  3474               	retlw	116	;'t'
  1542  09D6  3420               	retlw	32	;' '
  1543  09D7  3473               	retlw	115	;'s'
  1544  09D8  3468               	retlw	104	;'h'
  1545  09D9  346F               	retlw	111	;'o'
  1546  09DA  3477               	retlw	119	;'w'
  1547  09DB  342E               	retlw	46	;'.'
  1548  09DC  340A               	retlw	10
  1549  09DD  340D               	retlw	13
  1550  09DE  3400               	retlw	0
  1551  09DF                     STR_17:	
  1552  09DF  3441               	retlw	65	;'A'
  1553  09E0  3472               	retlw	114	;'r'
  1554  09E1  3465               	retlw	101	;'e'
  1555  09E2  3420               	retlw	32	;' '
  1556  09E3  3474               	retlw	116	;'t'
  1557  09E4  3468               	retlw	104	;'h'
  1558  09E5  3465               	retlw	101	;'e'
  1559  09E6  3420               	retlw	32	;' '
  1560  09E7  3462               	retlw	98	;'b'
  1561  09E8  346C               	retlw	108	;'l'
  1562  09E9  3461               	retlw	97	;'a'
  1563  09EA  3464               	retlw	100	;'d'
  1564  09EB  3465               	retlw	101	;'e'
  1565  09EC  3473               	retlw	115	;'s'
  1566  09ED  3420               	retlw	32	;' '
  1567  09EE  3469               	retlw	105	;'i'
  1568  09EF  346E               	retlw	110	;'n'
  1569  09F0  3420               	retlw	32	;' '
  1570  09F1  346F               	retlw	111	;'o'
  1571  09F2  346D               	retlw	109	;'m'
  1572  09F3  3465               	retlw	101	;'e'
  1573  09F4  3467               	retlw	103	;'g'
  1574  09F5  3461               	retlw	97	;'a'
  1575  09F6  3420               	retlw	32	;' '
  1576  09F7  346D               	retlw	109	;'m'
  1577  09F8  346F               	retlw	111	;'o'
  1578  09F9  3464               	retlw	100	;'d'
  1579  09FA  3465               	retlw	101	;'e'
  1580  09FB  343F               	retlw	63	;'?'
  1581  09FC  3420               	retlw	32	;' '
  1582  09FD  3428               	retlw	40	;'('
  1583  09FE  3479               	retlw	121	;'y'
  1584  09FF  342F               	retlw	47	;'/'
  1585  0A00  346E               	retlw	110	;'n'
  1586  0A01  3429               	retlw	41	;')'
  1587  0A02  340A               	retlw	10
  1588  0A03  340D               	retlw	13
  1589  0A04  3400               	retlw	0
  1590  0A05                     STR_11:	
  1591  0A05  3442               	retlw	66	;'B'
  1592  0A06  3465               	retlw	101	;'e'
  1593  0A07  3474               	retlw	116	;'t'
  1594  0A08  3461               	retlw	97	;'a'
  1595  0A09  342C               	retlw	44	;','
  1596  0A0A  3420               	retlw	32	;' '
  1597  0A0B  3464               	retlw	100	;'d'
  1598  0A0C  3420               	retlw	32	;' '
  1599  0A0D  3466               	retlw	102	;'f'
  1600  0A0E  346F               	retlw	111	;'o'
  1601  0A0F  3472               	retlw	114	;'r'
  1602  0A10  3420               	retlw	32	;' '
  1603  0A11  3444               	retlw	68	;'D'
  1604  0A12  3465               	retlw	101	;'e'
  1605  0A13  346C               	retlw	108	;'l'
  1606  0A14  3474               	retlw	116	;'t'
  1607  0A15  3461               	retlw	97	;'a'
  1608  0A16  342C               	retlw	44	;','
  1609  0A17  3420               	retlw	32	;' '
  1610  0A18  346F               	retlw	111	;'o'
  1611  0A19  3472               	retlw	114	;'r'
  1612  0A1A  3420               	retlw	32	;' '
  1613  0A1B  3467               	retlw	103	;'g'
  1614  0A1C  3420               	retlw	32	;' '
  1615  0A1D  3466               	retlw	102	;'f'
  1616  0A1E  346F               	retlw	111	;'o'
  1617  0A1F  3472               	retlw	114	;'r'
  1618  0A20  3420               	retlw	32	;' '
  1619  0A21  3447               	retlw	71	;'G'
  1620  0A22  3461               	retlw	97	;'a'
  1621  0A23  346D               	retlw	109	;'m'
  1622  0A24  346D               	retlw	109	;'m'
  1623  0A25  3461               	retlw	97	;'a'
  1624  0A26  342E               	retlw	46	;'.'
  1625  0A27  340A               	retlw	10
  1626  0A28  340D               	retlw	13
  1627  0A29  3400               	retlw	0
  1628  0A2A                     STR_23:	
  1629  0A2A  3450               	retlw	80	;'P'
  1630  0A2B  3472               	retlw	114	;'r'
  1631  0A2C  3465               	retlw	101	;'e'
  1632  0A2D  3473               	retlw	115	;'s'
  1633  0A2E  3473               	retlw	115	;'s'
  1634  0A2F  3420               	retlw	32	;' '
  1635  0A30  3427               	retlw	39	;'''
  1636  0A31  346F               	retlw	111	;'o'
  1637  0A32  3427               	retlw	39	;'''
  1638  0A33  3420               	retlw	32	;' '
  1639  0A34  3474               	retlw	116	;'t'
  1640  0A35  346F               	retlw	111	;'o'
  1641  0A36  3420               	retlw	32	;' '
  1642  0A37  3474               	retlw	116	;'t'
  1643  0A38  346F               	retlw	111	;'o'
  1644  0A39  3467               	retlw	103	;'g'
  1645  0A3A  3467               	retlw	103	;'g'
  1646  0A3B  346C               	retlw	108	;'l'
  1647  0A3C  3465               	retlw	101	;'e'
  1648  0A3D  3420               	retlw	32	;' '
  1649  0A3E  344F               	retlw	79	;'O'
  1650  0A3F  346D               	retlw	109	;'m'
  1651  0A40  3465               	retlw	101	;'e'
  1652  0A41  3467               	retlw	103	;'g'
  1653  0A42  3461               	retlw	97	;'a'
  1654  0A43  3420               	retlw	32	;' '
  1655  0A44  346D               	retlw	109	;'m'
  1656  0A45  346F               	retlw	111	;'o'
  1657  0A46  3464               	retlw	100	;'d'
  1658  0A47  3465               	retlw	101	;'e'
  1659  0A48  342E               	retlw	46	;'.'
  1660  0A49  340A               	retlw	10
  1661  0A4A  340D               	retlw	13
  1662  0A4B  340A               	retlw	10
  1663  0A4C  340D               	retlw	13
  1664  0A4D  3400               	retlw	0
  1665  0A4E                     STR_1:	
  1666  0A4E  3449               	retlw	73	;'I'
  1667  0A4F  346E               	retlw	110	;'n'
  1668  0A50  3469               	retlw	105	;'i'
  1669  0A51  3474               	retlw	116	;'t'
  1670  0A52  3469               	retlw	105	;'i'
  1671  0A53  3461               	retlw	97	;'a'
  1672  0A54  346C               	retlw	108	;'l'
  1673  0A55  3469               	retlw	105	;'i'
  1674  0A56  347A               	retlw	122	;'z'
  1675  0A57  3465               	retlw	101	;'e'
  1676  0A58  3464               	retlw	100	;'d'
  1677  0A59  3420               	retlw	32	;' '
  1678  0A5A  3449               	retlw	73	;'I'
  1679  0A5B  3452               	retlw	82	;'R'
  1680  0A5C  3420               	retlw	32	;' '
  1681  0A5D  3473               	retlw	115	;'s'
  1682  0A5E  3465               	retlw	101	;'e'
  1683  0A5F  346E               	retlw	110	;'n'
  1684  0A60  3464               	retlw	100	;'d'
  1685  0A61  342F               	retlw	47	;'/'
  1686  0A62  3472               	retlw	114	;'r'
  1687  0A63  3465               	retlw	101	;'e'
  1688  0A64  3463               	retlw	99	;'c'
  1689  0A65  3465               	retlw	101	;'e'
  1690  0A66  3469               	retlw	105	;'i'
  1691  0A67  3476               	retlw	118	;'v'
  1692  0A68  3465               	retlw	101	;'e'
  1693  0A69  3420               	retlw	32	;' '
  1694  0A6A  3463               	retlw	99	;'c'
  1695  0A6B  346F               	retlw	111	;'o'
  1696  0A6C  3464               	retlw	100	;'d'
  1697  0A6D  3465               	retlw	101	;'e'
  1698  0A6E  342E               	retlw	46	;'.'
  1699  0A6F  340A               	retlw	10
  1700  0A70  340D               	retlw	13
  1701  0A71  3400               	retlw	0
  1702  0A72                     STR_3:	
  1703  0A72  3450               	retlw	80	;'P'
  1704  0A73  346C               	retlw	108	;'l'
  1705  0A74  3461               	retlw	97	;'a'
  1706  0A75  3479               	retlw	121	;'y'
  1707  0A76  3465               	retlw	101	;'e'
  1708  0A77  3464               	retlw	100	;'d'
  1709  0A78  3420               	retlw	32	;' '
  1710  0A79  344F               	retlw	79	;'O'
  1711  0A7A  346D               	retlw	109	;'m'
  1712  0A7B  3465               	retlw	101	;'e'
  1713  0A7C  3467               	retlw	103	;'g'
  1714  0A7D  3461               	retlw	97	;'a'
  1715  0A7E  3420               	retlw	32	;' '
  1716  0A7F  3462               	retlw	98	;'b'
  1717  0A80  346C               	retlw	108	;'l'
  1718  0A81  3461               	retlw	97	;'a'
  1719  0A82  3464               	retlw	100	;'d'
  1720  0A83  3465               	retlw	101	;'e'
  1721  0A84  3420               	retlw	32	;' '
  1722  0A85  3473               	retlw	115	;'s'
  1723  0A86  3477               	retlw	119	;'w'
  1724  0A87  3469               	retlw	105	;'i'
  1725  0A88  346E               	retlw	110	;'n'
  1726  0A89  3467               	retlw	103	;'g'
  1727  0A8A  3420               	retlw	32	;' '
  1728  0A8B  3473               	retlw	115	;'s'
  1729  0A8C  346F               	retlw	111	;'o'
  1730  0A8D  3475               	retlw	117	;'u'
  1731  0A8E  346E               	retlw	110	;'n'
  1732  0A8F  3464               	retlw	100	;'d'
  1733  0A90  342E               	retlw	46	;'.'
  1734  0A91  340A               	retlw	10
  1735  0A92  340D               	retlw	13
  1736  0A93  3400               	retlw	0
  1737  0A94                     STR_2:	
  1738  0A94  3450               	retlw	80	;'P'
  1739  0A95  346C               	retlw	108	;'l'
  1740  0A96  3461               	retlw	97	;'a'
  1741  0A97  3479               	retlw	121	;'y'
  1742  0A98  3465               	retlw	101	;'e'
  1743  0A99  3464               	retlw	100	;'d'
  1744  0A9A  3420               	retlw	32	;' '
  1745  0A9B  3442               	retlw	66	;'B'
  1746  0A9C  3465               	retlw	101	;'e'
  1747  0A9D  3474               	retlw	116	;'t'
  1748  0A9E  3461               	retlw	97	;'a'
  1749  0A9F  3420               	retlw	32	;' '
  1750  0AA0  3462               	retlw	98	;'b'
  1751  0AA1  346C               	retlw	108	;'l'
  1752  0AA2  3461               	retlw	97	;'a'
  1753  0AA3  3464               	retlw	100	;'d'
  1754  0AA4  3465               	retlw	101	;'e'
  1755  0AA5  3420               	retlw	32	;' '
  1756  0AA6  3473               	retlw	115	;'s'
  1757  0AA7  3477               	retlw	119	;'w'
  1758  0AA8  3469               	retlw	105	;'i'
  1759  0AA9  346E               	retlw	110	;'n'
  1760  0AAA  3467               	retlw	103	;'g'
  1761  0AAB  3420               	retlw	32	;' '
  1762  0AAC  3473               	retlw	115	;'s'
  1763  0AAD  346F               	retlw	111	;'o'
  1764  0AAE  3475               	retlw	117	;'u'
  1765  0AAF  346E               	retlw	110	;'n'
  1766  0AB0  3464               	retlw	100	;'d'
  1767  0AB1  342E               	retlw	46	;'.'
  1768  0AB2  340A               	retlw	10
  1769  0AB3  340D               	retlw	13
  1770  0AB4  3400               	retlw	0
  1771  0AB5                     STR_47:	
  1772  0AB5  3450               	retlw	80	;'P'
  1773  0AB6  346C               	retlw	108	;'l'
  1774  0AB7  3465               	retlw	101	;'e'
  1775  0AB8  3461               	retlw	97	;'a'
  1776  0AB9  3473               	retlw	115	;'s'
  1777  0ABA  3465               	retlw	101	;'e'
  1778  0ABB  3420               	retlw	32	;' '
  1779  0ABC  3465               	retlw	101	;'e'
  1780  0ABD  346E               	retlw	110	;'n'
  1781  0ABE  3474               	retlw	116	;'t'
  1782  0ABF  3465               	retlw	101	;'e'
  1783  0AC0  3472               	retlw	114	;'r'
  1784  0AC1  3420               	retlw	32	;' '
  1785  0AC2  3474               	retlw	116	;'t'
  1786  0AC3  3468               	retlw	104	;'h'
  1787  0AC4  3465               	retlw	101	;'e'
  1788  0AC5  3420               	retlw	32	;' '
  1789  0AC6  3463               	retlw	99	;'c'
  1790  0AC7  3468               	retlw	104	;'h'
  1791  0AC8  3461               	retlw	97	;'a'
  1792  0AC9  3472               	retlw	114	;'r'
  1793  0ACA  3461               	retlw	97	;'a'
  1794  0ACB  3463               	retlw	99	;'c'
  1795  0ACC  3474               	retlw	116	;'t'
  1796  0ACD  3465               	retlw	101	;'e'
  1797  0ACE  3472               	retlw	114	;'r'
  1798  0ACF  3420               	retlw	32	;' '
  1799  0AD0  3441               	retlw	65	;'A'
  1800  0AD1  343A               	retlw	58	;':'
  1801  0AD2  3420               	retlw	32	;' '
  1802  0AD3  3400               	retlw	0
  1803  0AD4                     STR_27:	
  1804  0AD4  3454               	retlw	84	;'T'
  1805  0AD5  3468               	retlw	104	;'h'
  1806  0AD6  3465               	retlw	101	;'e'
  1807  0AD7  3420               	retlw	32	;' '
  1808  0AD8  3462               	retlw	98	;'b'
  1809  0AD9  346C               	retlw	108	;'l'
  1810  0ADA  3461               	retlw	97	;'a'
  1811  0ADB  3464               	retlw	100	;'d'
  1812  0ADC  3465               	retlw	101	;'e'
  1813  0ADD  3420               	retlw	32	;' '
  1814  0ADE  3468               	retlw	104	;'h'
  1815  0ADF  3461               	retlw	97	;'a'
  1816  0AE0  3473               	retlw	115	;'s'
  1817  0AE1  3420               	retlw	32	;' '
  1818  0AE2  3462               	retlw	98	;'b'
  1819  0AE3  3465               	retlw	101	;'e'
  1820  0AE4  3465               	retlw	101	;'e'
  1821  0AE5  346E               	retlw	110	;'n'
  1822  0AE6  3420               	retlw	32	;' '
  1823  0AE7  3473               	retlw	115	;'s'
  1824  0AE8  3474               	retlw	116	;'t'
  1825  0AE9  3475               	retlw	117	;'u'
  1826  0AEA  346E               	retlw	110	;'n'
  1827  0AEB  346E               	retlw	110	;'n'
  1828  0AEC  3465               	retlw	101	;'e'
  1829  0AED  3464               	retlw	100	;'d'
  1830  0AEE  342E               	retlw	46	;'.'
  1831  0AEF  340A               	retlw	10
  1832  0AF0  340D               	retlw	13
  1833  0AF1  3400               	retlw	0
  1834  0AF2                     STR_4:	
  1835  0AF2  3449               	retlw	73	;'I'
  1836  0AF3  346E               	retlw	110	;'n'
  1837  0AF4  3469               	retlw	105	;'i'
  1838  0AF5  3474               	retlw	116	;'t'
  1839  0AF6  3469               	retlw	105	;'i'
  1840  0AF7  3461               	retlw	97	;'a'
  1841  0AF8  346C               	retlw	108	;'l'
  1842  0AF9  3469               	retlw	105	;'i'
  1843  0AFA  347A               	retlw	122	;'z'
  1844  0AFB  3465               	retlw	101	;'e'
  1845  0AFC  3464               	retlw	100	;'d'
  1846  0AFD  3420               	retlw	32	;' '
  1847  0AFE  3461               	retlw	97	;'a'
  1848  0AFF  3463               	retlw	99	;'c'
  1849  0B00  3463               	retlw	99	;'c'
  1850  0B01  3465               	retlw	101	;'e'
  1851  0B02  346C               	retlw	108	;'l'
  1852  0B03  3465               	retlw	101	;'e'
  1853  0B04  3472               	retlw	114	;'r'
  1854  0B05  346F               	retlw	111	;'o'
  1855  0B06  346D               	retlw	109	;'m'
  1856  0B07  3465               	retlw	101	;'e'
  1857  0B08  3474               	retlw	116	;'t'
  1858  0B09  3465               	retlw	101	;'e'
  1859  0B0A  3472               	retlw	114	;'r'
  1860  0B0B  342E               	retlw	46	;'.'
  1861  0B0C  340A               	retlw	10
  1862  0B0D  340D               	retlw	13
  1863  0B0E  3400               	retlw	0
  1864  0B0F                     STR_16:	
  1865  0B0F  3449               	retlw	73	;'I'
  1866  0B10  346E               	retlw	110	;'n'
  1867  0B11  3476               	retlw	118	;'v'
  1868  0B12  3461               	retlw	97	;'a'
  1869  0B13  346C               	retlw	108	;'l'
  1870  0B14  3469               	retlw	105	;'i'
  1871  0B15  3464               	retlw	100	;'d'
  1872  0B16  3420               	retlw	32	;' '
  1873  0B17  3469               	retlw	105	;'i'
  1874  0B18  346E               	retlw	110	;'n'
  1875  0B19  3470               	retlw	112	;'p'
  1876  0B1A  3475               	retlw	117	;'u'
  1877  0B1B  3474               	retlw	116	;'t'
  1878  0B1C  342E               	retlw	46	;'.'
  1879  0B1D  3420               	retlw	32	;' '
  1880  0B1E  3454               	retlw	84	;'T'
  1881  0B1F  3472               	retlw	114	;'r'
  1882  0B20  3479               	retlw	121	;'y'
  1883  0B21  3420               	retlw	32	;' '
  1884  0B22  3461               	retlw	97	;'a'
  1885  0B23  3467               	retlw	103	;'g'
  1886  0B24  3461               	retlw	97	;'a'
  1887  0B25  3469               	retlw	105	;'i'
  1888  0B26  346E               	retlw	110	;'n'
  1889  0B27  342E               	retlw	46	;'.'
  1890  0B28  340A               	retlw	10
  1891  0B29  340D               	retlw	13
  1892  0B2A  3400               	retlw	0
  1893  0B2B                     STR_49:	
  1894  0B2B  340A               	retlw	10
  1895  0B2C  340D               	retlw	13
  1896  0B2D  3457               	retlw	87	;'W'
  1897  0B2E  3472               	retlw	114	;'r'
  1898  0B2F  346F               	retlw	111	;'o'
  1899  0B30  346E               	retlw	110	;'n'
  1900  0B31  3467               	retlw	103	;'g'
  1901  0B32  3420               	retlw	32	;' '
  1902  0B33  346B               	retlw	107	;'k'
  1903  0B34  3465               	retlw	101	;'e'
  1904  0B35  3479               	retlw	121	;'y'
  1905  0B36  342E               	retlw	46	;'.'
  1906  0B37  3420               	retlw	32	;' '
  1907  0B38  3454               	retlw	84	;'T'
  1908  0B39  3472               	retlw	114	;'r'
  1909  0B3A  3479               	retlw	121	;'y'
  1910  0B3B  3420               	retlw	32	;' '
  1911  0B3C  3461               	retlw	97	;'a'
  1912  0B3D  3467               	retlw	103	;'g'
  1913  0B3E  3461               	retlw	97	;'a'
  1914  0B3F  3469               	retlw	105	;'i'
  1915  0B40  346E               	retlw	110	;'n'
  1916  0B41  342E               	retlw	46	;'.'
  1917  0B42  340A               	retlw	10
  1918  0B43  340D               	retlw	13
  1919  0B44  3400               	retlw	0
  1920  0B45                     STR_46:	
  1921  0B45  340A               	retlw	10
  1922  0B46  340D               	retlw	13
  1923  0B47  344D               	retlw	77	;'M'
  1924  0B48  3461               	retlw	97	;'a'
  1925  0B49  3469               	retlw	105	;'i'
  1926  0B4A  346E               	retlw	110	;'n'
  1927  0B4B  3420               	retlw	32	;' '
  1928  0B4C  344C               	retlw	76	;'L'
  1929  0B4D  346F               	retlw	111	;'o'
  1930  0B4E  346F               	retlw	111	;'o'
  1931  0B4F  3470               	retlw	112	;'p'
  1932  0B50  3420               	retlw	32	;' '
  1933  0B51  3449               	retlw	73	;'I'
  1934  0B52  346E               	retlw	110	;'n'
  1935  0B53  3464               	retlw	100	;'d'
  1936  0B54  3469               	retlw	105	;'i'
  1937  0B55  3476               	retlw	118	;'v'
  1938  0B56  3469               	retlw	105	;'i'
  1939  0B57  3464               	retlw	100	;'d'
  1940  0B58  3475               	retlw	117	;'u'
  1941  0B59  3461               	retlw	97	;'a'
  1942  0B5A  346C               	retlw	108	;'l'
  1943  0B5B  340A               	retlw	10
  1944  0B5C  340D               	retlw	13
  1945  0B5D  3400               	retlw	0
  1946  0B5E                     STR_29:	
  1947  0B5E  344F               	retlw	79	;'O'
  1948  0B5F  346D               	retlw	109	;'m'
  1949  0B60  3465               	retlw	101	;'e'
  1950  0B61  3467               	retlw	103	;'g'
  1951  0B62  3461               	retlw	97	;'a'
  1952  0B63  3420               	retlw	32	;' '
  1953  0B64  346D               	retlw	109	;'m'
  1954  0B65  346F               	retlw	111	;'o'
  1955  0B66  3464               	retlw	100	;'d'
  1956  0B67  3465               	retlw	101	;'e'
  1957  0B68  3420               	retlw	32	;' '
  1958  0B69  3464               	retlw	100	;'d'
  1959  0B6A  3469               	retlw	105	;'i'
  1960  0B6B  3473               	retlw	115	;'s'
  1961  0B6C  3461               	retlw	97	;'a'
  1962  0B6D  3462               	retlw	98	;'b'
  1963  0B6E  346C               	retlw	108	;'l'
  1964  0B6F  3465               	retlw	101	;'e'
  1965  0B70  3464               	retlw	100	;'d'
  1966  0B71  342E               	retlw	46	;'.'
  1967  0B72  340A               	retlw	10
  1968  0B73  340D               	retlw	13
  1969  0B74  3400               	retlw	0
  1970  0B75                     STR_28:	
  1971  0B75  344F               	retlw	79	;'O'
  1972  0B76  346D               	retlw	109	;'m'
  1973  0B77  3465               	retlw	101	;'e'
  1974  0B78  3467               	retlw	103	;'g'
  1975  0B79  3461               	retlw	97	;'a'
  1976  0B7A  3420               	retlw	32	;' '
  1977  0B7B  346D               	retlw	109	;'m'
  1978  0B7C  346F               	retlw	111	;'o'
  1979  0B7D  3464               	retlw	100	;'d'
  1980  0B7E  3465               	retlw	101	;'e'
  1981  0B7F  3420               	retlw	32	;' '
  1982  0B80  3465               	retlw	101	;'e'
  1983  0B81  346E               	retlw	110	;'n'
  1984  0B82  3461               	retlw	97	;'a'
  1985  0B83  3462               	retlw	98	;'b'
  1986  0B84  346C               	retlw	108	;'l'
  1987  0B85  3465               	retlw	101	;'e'
  1988  0B86  3464               	retlw	100	;'d'
  1989  0B87  342E               	retlw	46	;'.'
  1990  0B88  340A               	retlw	10
  1991  0B89  340D               	retlw	13
  1992  0B8A  3400               	retlw	0
  1993  0B8B                     STR_5:	
  1994  0B8B  3449               	retlw	73	;'I'
  1995  0B8C  346E               	retlw	110	;'n'
  1996  0B8D  3469               	retlw	105	;'i'
  1997  0B8E  3474               	retlw	116	;'t'
  1998  0B8F  3469               	retlw	105	;'i'
  1999  0B90  3461               	retlw	97	;'a'
  2000  0B91  346C               	retlw	108	;'l'
  2001  0B92  3469               	retlw	105	;'i'
  2002  0B93  347A               	retlw	122	;'z'
  2003  0B94  3465               	retlw	101	;'e'
  2004  0B95  3464               	retlw	100	;'d'
  2005  0B96  3420               	retlw	32	;' '
  2006  0B97  344C               	retlw	76	;'L'
  2007  0B98  3445               	retlw	69	;'E'
  2008  0B99  3444               	retlw	68	;'D'
  2009  0B9A  3473               	retlw	115	;'s'
  2010  0B9B  342E               	retlw	46	;'.'
  2011  0B9C  340A               	retlw	10
  2012  0B9D  340D               	retlw	13
  2013  0B9E  3400               	retlw	0
  2014  0B9F                     STR_8:	
  2015  0B9F  3449               	retlw	73	;'I'
  2016  0BA0  346E               	retlw	110	;'n'
  2017  0BA1  3469               	retlw	105	;'i'
  2018  0BA2  3474               	retlw	116	;'t'
  2019  0BA3  3469               	retlw	105	;'i'
  2020  0BA4  3461               	retlw	97	;'a'
  2021  0BA5  346C               	retlw	108	;'l'
  2022  0BA6  3469               	retlw	105	;'i'
  2023  0BA7  347A               	retlw	122	;'z'
  2024  0BA8  3465               	retlw	101	;'e'
  2025  0BA9  3464               	retlw	100	;'d'
  2026  0BAA  3420               	retlw	32	;' '
  2027  0BAB  3449               	retlw	73	;'I'
  2028  0BAC  3453               	retlw	83	;'S'
  2029  0BAD  3452               	retlw	82	;'R'
  2030  0BAE  342E               	retlw	46	;'.'
  2031  0BAF  340A               	retlw	10
  2032  0BB0  340D               	retlw	13
  2033  0BB1  3400               	retlw	0
  2034  0BB2                     STR_24:	
  2035  0BB2  3453               	retlw	83	;'S'
  2036  0BB3  3477               	retlw	119	;'w'
  2037  0BB4  346F               	retlw	111	;'o'
  2038  0BB5  3472               	retlw	114	;'r'
  2039  0BB6  3464               	retlw	100	;'d'
  2040  0BB7  3420               	retlw	32	;' '
  2041  0BB8  3477               	retlw	119	;'w'
  2042  0BB9  3461               	retlw	97	;'a'
  2043  0BBA  3473               	retlw	115	;'s'
  2044  0BBB  3420               	retlw	32	;' '
  2045  0BBC  3473               	retlw	115	;'s'
  2046  0BBD  3477               	retlw	119	;'w'
  2047  0BBE  3475               	retlw	117	;'u'
  2048  0BBF  346E               	retlw	110	;'n'
  2049  0BC0  3467               	retlw	103	;'g'
  2050  0BC1  340A               	retlw	10
  2051  0BC2  340D               	retlw	13
  2052  0BC3  3400               	retlw	0
  2053  0BC4                     STR_12:	
  2054  0BC4  3431               	retlw	49	;'1'
  2055  0BC5  340A               	retlw	10
  2056  0BC6  340D               	retlw	13
  2057  0BC7  3400               	retlw	0
  2058  0BC8                     STR_13:	
  2059  0BC8  3432               	retlw	50	;'2'
  2060  0BC9  340A               	retlw	10
  2061  0BCA  340D               	retlw	13
  2062  0BCB  3400               	retlw	0
  2063  0BCC                     STR_14:	
  2064  0BCC  3433               	retlw	51	;'3'
  2065  0BCD  340A               	retlw	10
  2066  0BCE  340D               	retlw	13
  2067  0BCF  3400               	retlw	0
  2068  0BD0                     STR_15:	
  2069  0BD0  3434               	retlw	52	;'4'
  2070  0BD1  340A               	retlw	10
  2071  0BD2  340D               	retlw	13
  2072  0BD3  3400               	retlw	0
  2073  0BD4                     STR_19:	
  2074  0BD4  346E               	retlw	110	;'n'
  2075  0BD5  340A               	retlw	10
  2076  0BD6  340D               	retlw	13
  2077  0BD7  3400               	retlw	0
  2078  0BD8                     STR_18:	
  2079  0BD8  3479               	retlw	121	;'y'
  2080  0BD9  340A               	retlw	10
  2081  0BDA  340D               	retlw	13
  2082  0BDB  3400               	retlw	0
  2083  0A4B                     
  2084                           ; #config settings
  2085  0000                     
  2086                           	psect	cinit
  2087  07F4                     start_initialization:	
  2088  07F4                     __initialization:	
  2089                           
  2090                           ; Clear objects allocated to BANK0
  2091  07F4  01B7               	clrf	__pbssBANK0& (0+127)
  2092  07F5  01B8               	clrf	(__pbssBANK0+1)& (0+127)
  2093  07F6  01B9               	clrf	(__pbssBANK0+2)& (0+127)
  2094  07F7  01BA               	clrf	(__pbssBANK0+3)& (0+127)
  2095  07F8  01BB               	clrf	(__pbssBANK0+4)& (0+127)
  2096  07F9  01BC               	clrf	(__pbssBANK0+5)& (0+127)
  2097                           
  2098                           ; Initialize objects allocated to BANK0
  2099  07FA  3180  20C1         	fcall	__pidataBANK0	;fetch initializer
  2100  07FC  00BD               	movwf	__pdataBANK0& (0+127)
  2101  07FD                     end_of_initialization:	
  2102                           ;End of C runtime variable initialization code
  2103                           
  2104  07FD                     __end_of__initialization:	
  2105  07FD  0020               	movlb	0
  2106  07FE  3183  2BD9         	ljmp	_main	;jump to C main() function
  2107                           
  2108                           	psect	bssBANK0
  2109  0037                     __pbssBANK0:	
  2110  0037                     main@F7230:	
  2111  0037                     	ds	3
  2112  003A                     _blade:	
  2113  003A                     	ds	1
  2114  003B                     _omega_mode:	
  2115  003B                     	ds	1
  2116  003C                     _stun_counter:	
  2117  003C                     	ds	1
  2118                           
  2119                           	psect	dataBANK0
  2120  003D                     __pdataBANK0:	
  2121  003D                     _health:	
  2122  003D                     	ds	1
  2123                           
  2124                           	psect	cstackCOMMON
  2125  0070                     __pcstackCOMMON:	
  2126  0070                     ??_getch:	
  2127  0070                     ?_init_pic:	
  2128                           ; 0 bytes @ 0x0
  2129                           
  2130  0070                     ??_init_pic:	
  2131                           ; 0 bytes @ 0x0
  2132                           
  2133  0070                     ?_init_uart:	
  2134                           ; 0 bytes @ 0x0
  2135                           
  2136  0070                     ??_init_uart:	
  2137                           ; 0 bytes @ 0x0
  2138                           
  2139  0070                     ??_waitch:	
  2140                           ; 0 bytes @ 0x0
  2141                           
  2142  0070                     ?_init_ir:	
  2143                           ; 0 bytes @ 0x0
  2144                           
  2145  0070                     ?_output_ir:	
  2146                           ; 0 bytes @ 0x0
  2147                           
  2148  0070                     ?_play_sound:	
  2149                           ; 0 bytes @ 0x0
  2150                           
  2151  0070                     ?_init_accel:	
  2152                           ; 0 bytes @ 0x0
  2153                           
  2154  0070                     ??_determine_omega_mode_active:	
  2155                           ; 0 bytes @ 0x0
  2156                           
  2157  0070                     ?_determine_packets_to_send:	
  2158                           ; 0 bytes @ 0x0
  2159                           
  2160  0070                     ??_determine_packets_to_send:	
  2161                           ; 0 bytes @ 0x0
  2162                           
  2163  0070                     ?_display_health:	
  2164                           ; 0 bytes @ 0x0
  2165                           
  2166  0070                     ??_display_health:	
  2167                           ; 0 bytes @ 0x0
  2168                           
  2169  0070                     ?_init_leds:	
  2170                           ; 0 bytes @ 0x0
  2171                           
  2172  0070                     ?_display_blade_lights:	
  2173                           ; 0 bytes @ 0x0
  2174                           
  2175  0070                     ?_init_isr:	
  2176                           ; 0 bytes @ 0x0
  2177                           
  2178  0070                     ?_putch:	
  2179                           ; 0 bytes @ 0x0
  2180                           
  2181  0070                     ??_putch:	
  2182                           ; 0 bytes @ 0x0
  2183                           
  2184  0070                     ?_getch:	
  2185                           ; 0 bytes @ 0x0
  2186                           
  2187  0070                     ?_waitch:	
  2188                           ; 1 bytes @ 0x0
  2189                           
  2190  0070                     ?_determine_sword_was_swung:	
  2191                           ; 1 bytes @ 0x0
  2192                           
  2193  0070                     ?_determine_omega_mode_active:	
  2194                           ; 1 bytes @ 0x0
  2195                           
  2196  0070                     ?_main:	
  2197                           ; 1 bytes @ 0x0
  2198                           
  2199  0070                     ?___lwdiv:	
  2200                           ; 2 bytes @ 0x0
  2201                           
  2202  0070                     output_ir@amount:	
  2203                           ; 2 bytes @ 0x0
  2204                           
  2205  0070                     display_health@health:	
  2206                           ; 1 bytes @ 0x0
  2207                           
  2208  0070                     putch@input:	
  2209                           ; 1 bytes @ 0x0
  2210                           
  2211  0070                     getch@counter:	
  2212                           ; 1 bytes @ 0x0
  2213                           
  2214  0070                     ___lwdiv@divisor:	
  2215                           ; 1 bytes @ 0x0
  2216                           
  2217                           
  2218                           ; 2 bytes @ 0x0
  2219  0070                     	ds	1
  2220  0071                     ??_output_ir:	
  2221  0071                     ??_determine_sword_was_swung:	
  2222                           ; 0 bytes @ 0x1
  2223                           
  2224  0071                     determine_packets_to_send@packets:	
  2225                           ; 0 bytes @ 0x1
  2226                           
  2227                           
  2228                           ; 1 bytes @ 0x1
  2229  0071                     	ds	1
  2230  0072                     determine_sword_was_swung@input:	
  2231  0072                     ___lwdiv@dividend:	
  2232                           ; 1 bytes @ 0x2
  2233                           
  2234                           
  2235                           ; 2 bytes @ 0x2
  2236  0072                     	ds	1
  2237  0073                     output_ir@i:	
  2238                           
  2239                           ; 2 bytes @ 0x3
  2240  0073                     	ds	1
  2241  0074                     ??___lwdiv:	
  2242                           
  2243                           ; 0 bytes @ 0x4
  2244  0074                     	ds	1
  2245  0075                     output_ir@i_72:	
  2246  0075                     ___lwdiv@quotient:	
  2247                           ; 2 bytes @ 0x5
  2248                           
  2249                           
  2250                           ; 2 bytes @ 0x5
  2251  0075                     	ds	2
  2252  0077                     ___lwdiv@counter:	
  2253  0077                     output_ir@i_73:	
  2254                           ; 1 bytes @ 0x7
  2255                           
  2256                           
  2257                           ; 2 bytes @ 0x7
  2258  0077                     	ds	1
  2259  0078                     ?___lwmod:	
  2260  0078                     ___lwmod@divisor:	
  2261                           ; 2 bytes @ 0x8
  2262                           
  2263                           
  2264                           ; 2 bytes @ 0x8
  2265  0078                     	ds	1
  2266  0079                     output_ir@pkt_type:	
  2267                           
  2268                           ; 1 bytes @ 0x9
  2269  0079                     	ds	1
  2270  007A                     ___lwmod@dividend:	
  2271                           
  2272                           ; 2 bytes @ 0xA
  2273  007A                     	ds	2
  2274  007C                     ??___lwmod:	
  2275                           
  2276                           ; 0 bytes @ 0xC
  2277  007C                     	ds	1
  2278  007D                     ___lwmod@counter:	
  2279                           
  2280                           ; 1 bytes @ 0xD
  2281  007D                     	ds	1
  2282  007E                     ??_play_sound:	
  2283  007E                     ??_init_accel:	
  2284                           ; 0 bytes @ 0xE
  2285                           
  2286  007E                     ??_init_leds:	
  2287                           ; 0 bytes @ 0xE
  2288                           
  2289  007E                     ??_display_blade_lights:	
  2290                           ; 0 bytes @ 0xE
  2291                           
  2292  007E                     ??_init_isr:	
  2293                           ; 0 bytes @ 0xE
  2294                           
  2295                           
  2296                           	psect	cstackBANK0
  2297  0020                     __pcstackBANK0:	
  2298                           ; 0 bytes @ 0xE
  2299                           
  2300  0020                     ?_printf:	
  2301  0020                     printf@f:	
  2302                           ; 2 bytes @ 0x0
  2303                           
  2304                           
  2305                           ; 2 bytes @ 0x0
  2306  0020                     	ds	4
  2307  0024                     ??_printf:	
  2308                           
  2309                           ; 0 bytes @ 0x4
  2310  0024                     	ds	4
  2311  0028                     printf@ap:	
  2312                           
  2313                           ; 1 bytes @ 0x8
  2314  0028                     	ds	1
  2315  0029                     printf@flag:	
  2316                           
  2317                           ; 1 bytes @ 0x9
  2318  0029                     	ds	1
  2319  002A                     printf@prec:	
  2320                           
  2321                           ; 1 bytes @ 0xA
  2322  002A                     	ds	1
  2323  002B                     printf@val:	
  2324                           
  2325                           ; 2 bytes @ 0xB
  2326  002B                     	ds	2
  2327  002D                     printf@c:	
  2328                           
  2329                           ; 1 bytes @ 0xD
  2330  002D                     	ds	1
  2331  002E                     ??_init_ir:	
  2332  002E                     play_sound@sound_selection:	
  2333                           ; 0 bytes @ 0xE
  2334                           
  2335  002E                     display_blade_lights@mode:	
  2336                           ; 1 bytes @ 0xE
  2337                           
  2338                           
  2339                           ; 1 bytes @ 0xE
  2340  002E                     	ds	1
  2341  002F                     ??_main:	
  2342                           
  2343                           ; 0 bytes @ 0xF
  2344  002F                     	ds	3
  2345  0032                     main@pkt_arr:	
  2346                           
  2347                           ; 3 bytes @ 0x12
  2348  0032                     	ds	3
  2349  0035                     main@i:	
  2350                           
  2351                           ; 1 bytes @ 0x15
  2352  0035                     	ds	1
  2353  0036                     main@userInput:	
  2354                           
  2355                           ; 1 bytes @ 0x16
  2356  0036                     	ds	1
  2357                           
  2358                           	psect	maintext
  2359  03D9                     __pmaintext:	
  2360 ;;
  2361 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2362 ;;
  2363 ;; *************** function _main *****************
  2364 ;; Defined at:
  2365 ;;		line 18 in file "../../source/main.c"
  2366 ;; Parameters:    Size  Location     Type
  2367 ;;		None
  2368 ;; Auto vars:     Size  Location     Type
  2369 ;;  pkt_arr         3   18[BANK0 ] unsigned char [3]
  2370 ;;  userInput       1   22[BANK0 ] unsigned char 
  2371 ;;  i               1   21[BANK0 ] unsigned char 
  2372 ;; Return value:  Size  Location     Type
  2373 ;;                  2  177[None  ] int 
  2374 ;; Registers used:
  2375 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2376 ;; Tracked objects:
  2377 ;;		On entry : B1F/0
  2378 ;;		On exit  : 0/0
  2379 ;;		Unchanged: 0/0
  2380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2382 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2383 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2384 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2385 ;;Total ram usage:        8 bytes
  2386 ;; Hardware stack levels required when called:    3
  2387 ;; This function calls:
  2388 ;;		_determine_omega_mode_active
  2389 ;;		_determine_packets_to_send
  2390 ;;		_determine_sword_was_swung
  2391 ;;		_display_blade_lights
  2392 ;;		_display_health
  2393 ;;		_init_accel
  2394 ;;		_init_ir
  2395 ;;		_init_isr
  2396 ;;		_init_leds
  2397 ;;		_init_pic
  2398 ;;		_init_uart
  2399 ;;		_output_ir
  2400 ;;		_play_sound
  2401 ;;		_printf
  2402 ;;		_waitch
  2403 ;; This function is called by:
  2404 ;;		Startup code after reset
  2405 ;; This function uses a non-reentrant model
  2406 ;;
  2407                           
  2408                           
  2409                           ;psect for function _main
  2410  03D9                     _main:	
  2411                           
  2412                           ;main.c: 20: char pkt_arr[] = {0, 0, 0};
  2413                           
  2414                           ;incstack = 0
  2415                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2416  03D9  0020               	movlb	0	; select bank0
  2417  03DA  0837               	movf	main@F7230,w
  2418  03DB  00B2               	movwf	main@pkt_arr
  2419  03DC  0838               	movf	main@F7230+1,w
  2420  03DD  00B3               	movwf	main@pkt_arr+1
  2421  03DE  0839               	movf	main@F7230+2,w
  2422  03DF  00B4               	movwf	main@pkt_arr+2
  2423                           
  2424                           ;main.c: 21: char userInput = ' ';
  2425  03E0  3020               	movlw	32
  2426  03E1  00AF               	movwf	??_main
  2427  03E2  082F               	movf	??_main,w
  2428  03E3  00B6               	movwf	main@userInput
  2429                           
  2430                           ;main.c: 22: char i = 0;
  2431  03E4  01B5               	clrf	main@i
  2432                           
  2433                           ;main.c: 25: init_pic();
  2434  03E5  3180  20F1  3183   	fcall	_init_pic
  2435                           
  2436                           ;main.c: 26: init_uart();
  2437  03E8  3181  210A  3183   	fcall	_init_uart
  2438                           
  2439                           ;main.c: 29: _delay((unsigned long)((100)*(32000000/4000.0)));
  2440  03EB  3005               	movlw	5
  2441  03EC  0020               	movlb	0	; select bank0
  2442  03ED  00B1               	movwf	??_main+2
  2443  03EE  300F               	movlw	15
  2444  03EF  00B0               	movwf	??_main+1
  2445  03F0  30F4               	movlw	244
  2446  03F1  00AF               	movwf	??_main
  2447  03F2                     u2157:	
  2448  03F2  0BAF               	decfsz	??_main,f
  2449  03F3  2BF2               	goto	u2157
  2450  03F4  0BB0               	decfsz	??_main+1,f
  2451  03F5  2BF2               	goto	u2157
  2452  03F6  0BB1               	decfsz	??_main+2,f
  2453  03F7  2BF2               	goto	u2157
  2454                           
  2455                           ;main.c: 30: RB3 = 1;
  2456  03F8  0020               	movlb	0	; select bank0
  2457  03F9  158D               	bsf	13,3	;volatile
  2458                           
  2459                           ;main.c: 32: printf("\n\r=========================================================\n\r")
      +                          ;
  2460  03FA  308D               	movlw	low (STR_9| (0+32768))
  2461  03FB  00A0               	movwf	printf@f
  2462  03FC  3088               	movlw	high (STR_9| (0+32768))
  2463  03FD  00A1               	movwf	printf@f+1
  2464  03FE  3181  21FE  3183   	fcall	_printf
  2465                           
  2466                           ;main.c: 35: init_ir();
  2467  0401  3181  21C2  3183   	fcall	_init_ir
  2468                           
  2469                           ;main.c: 36: init_accel();
  2470  0404  3180  20D9  3183   	fcall	_init_accel
  2471                           
  2472                           ;main.c: 37: init_leds();
  2473  0407  3180  20E9  3183   	fcall	_init_leds
  2474                           
  2475                           ;main.c: 38: init_isr();
  2476  040A  3180  20E1  3183   	fcall	_init_isr
  2477                           
  2478                           ;main.c: 41: printf("\n\rWhich blade would you like to test? Enter a for Alpha, b for\n\
      +                          r");
  2479  040D  304C               	movlw	low (STR_10| (0+32768))
  2480  040E  0020               	movlb	0	; select bank0
  2481  040F  00A0               	movwf	printf@f
  2482  0410  3088               	movlw	high (STR_10| (0+32768))
  2483  0411  00A1               	movwf	printf@f+1
  2484  0412  3181  21FE  3183   	fcall	_printf
  2485                           
  2486                           ;main.c: 42: printf("Beta, d for Delta, or g for Gamma.\n\r");
  2487  0415  3005               	movlw	low (STR_11| (0+32768))
  2488  0416  0020               	movlb	0	; select bank0
  2489  0417  00A0               	movwf	printf@f
  2490  0418  308A               	movlw	high (STR_11| (0+32768))
  2491                           
  2492                           ;main.c: 50: break;
  2493  0419  2C48               	goto	L3
  2494  041A                     l1936:	
  2495                           ;main.c: 51: }
  2496                           
  2497                           
  2498                           ;main.c: 52: else if( userInput == 'b' )
  2499  041A  3062               	movlw	98
  2500  041B  0636               	xorwf	main@userInput,w
  2501  041C  1D03               	btfss	3,2
  2502  041D  2C27               	goto	l1944
  2503                           
  2504                           ;main.c: 53: {
  2505                           ;main.c: 54: printf("2\n\r");
  2506  041E  30C8               	movlw	low (STR_13| (0+32768))
  2507  041F  00A0               	movwf	printf@f
  2508  0420  308B               	movlw	high (STR_13| (0+32768))
  2509  0421  00A1               	movwf	printf@f+1
  2510  0422  3181  21FE  3183   	fcall	_printf
  2511                           
  2512                           ;main.c: 55: blade = 2;
  2513  0425  3002               	movlw	2
  2514  0426  2C40               	goto	L2
  2515  0427                     l1944:	
  2516                           ;main.c: 57: }
  2517                           
  2518                           ;main.c: 56: break;
  2519                           
  2520                           
  2521                           ;main.c: 58: else if( userInput == 'd' )
  2522  0427  3064               	movlw	100
  2523  0428  0636               	xorwf	main@userInput,w
  2524  0429  1D03               	btfss	3,2
  2525  042A  2C34               	goto	l1952
  2526                           
  2527                           ;main.c: 59: {
  2528                           ;main.c: 60: printf("3\n\r");
  2529  042B  30CC               	movlw	low (STR_14| (0+32768))
  2530  042C  00A0               	movwf	printf@f
  2531  042D  308B               	movlw	high (STR_14| (0+32768))
  2532  042E  00A1               	movwf	printf@f+1
  2533  042F  3181  21FE  3183   	fcall	_printf
  2534                           
  2535                           ;main.c: 61: blade = 3;
  2536  0432  3003               	movlw	3
  2537  0433  2C40               	goto	L2
  2538  0434                     l1952:	
  2539                           ;main.c: 63: }
  2540                           
  2541                           ;main.c: 62: break;
  2542                           
  2543                           
  2544                           ;main.c: 64: else if( userInput == 'g' )
  2545  0434  3067               	movlw	103
  2546  0435  0636               	xorwf	main@userInput,w
  2547  0436  1D03               	btfss	3,2
  2548  0437  2C45               	goto	l1958
  2549                           
  2550                           ;main.c: 65: {
  2551                           ;main.c: 66: printf("4\n\r");
  2552  0438  30D0               	movlw	low (STR_15| (0+32768))
  2553  0439  00A0               	movwf	printf@f
  2554  043A  308B               	movlw	high (STR_15| (0+32768))
  2555  043B  00A1               	movwf	printf@f+1
  2556  043C  3181  21FE  3183   	fcall	_printf
  2557                           
  2558                           ;main.c: 67: blade = 4;
  2559  043F  3004               	movlw	4
  2560  0440                     L2:	
  2561  0440  0020               	movlb	0	; select bank0
  2562  0441  00AF               	movwf	??_main
  2563  0442  082F               	movf	??_main,w
  2564  0443  00BA               	movwf	_blade
  2565                           
  2566                           ;main.c: 68: break;
  2567  0444  2C61               	goto	l1960
  2568  0445                     l1958:	
  2569                           
  2570                           ;main.c: 69: }
  2571                           ;main.c: 70: printf("Invalid input. Try again.\n\r");
  2572  0445  300F               	movlw	low (STR_16| (0+32768))
  2573  0446  00A0               	movwf	printf@f
  2574  0447  308B               	movlw	high (STR_16| (0+32768))
  2575  0448                     L3:	
  2576  0448  00A1               	movwf	printf@f+1
  2577  0449  3181  21FE  3183   	fcall	_printf
  2578                           
  2579                           ;main.c: 44: {
  2580                           ;main.c: 45: userInput = waitch();
  2581                           
  2582                           ;main.c: 43: while(1)
  2583  044C  3180  20C5  3183   	fcall	_waitch
  2584  044F  0020               	movlb	0	; select bank0
  2585  0450  00AF               	movwf	??_main
  2586  0451  082F               	movf	??_main,w
  2587  0452  00B6               	movwf	main@userInput
  2588                           
  2589                           ;main.c: 46: if(userInput == 'a')
  2590  0453  3061               	movlw	97
  2591  0454  0636               	xorwf	main@userInput,w
  2592  0455  1D03               	btfss	3,2
  2593  0456  2C1A               	goto	l1936
  2594                           
  2595                           ;main.c: 47: {
  2596                           ;main.c: 48: printf("1\n\r");
  2597  0457  30C4               	movlw	low (STR_12| (0+32768))
  2598  0458  00A0               	movwf	printf@f
  2599  0459  308B               	movlw	high (STR_12| (0+32768))
  2600  045A  00A1               	movwf	printf@f+1
  2601  045B  3181  21FE  3183   	fcall	_printf
  2602                           
  2603                           ;main.c: 49: blade = 1;
  2604  045E  0020               	movlb	0	; select bank0
  2605  045F  01BA               	clrf	_blade
  2606  0460  0ABA               	incf	_blade,f
  2607  0461                     l1960:	
  2608                           
  2609                           ;main.c: 71: }
  2610                           ;main.c: 73: printf("Are the blades in omega mode? (y/n)\n\r");
  2611  0461  30DF               	movlw	low (STR_17| (0+32768))
  2612  0462  0020               	movlb	0	; select bank0
  2613  0463  00A0               	movwf	printf@f
  2614  0464  3089               	movlw	high (STR_17| (0+32768))
  2615                           
  2616                           ;main.c: 81: break;
  2617  0465  2C77               	goto	L4
  2618  0466                     l1972:	
  2619                           ;main.c: 82: }
  2620                           
  2621                           
  2622                           ;main.c: 83: else if( userInput == 'n' )
  2623  0466  306E               	movlw	110
  2624  0467  0636               	xorwf	main@userInput,w
  2625  0468  1D03               	btfss	3,2
  2626  0469  2C74               	goto	l1978
  2627                           
  2628                           ;main.c: 84: {
  2629                           ;main.c: 85: printf("n\n\r");
  2630  046A  30D4               	movlw	low (STR_19| (0+32768))
  2631  046B  00A0               	movwf	printf@f
  2632  046C  308B               	movlw	high (STR_19| (0+32768))
  2633  046D  00A1               	movwf	printf@f+1
  2634  046E  3181  21FE  3183   	fcall	_printf
  2635                           
  2636                           ;main.c: 86: omega_mode = 0;
  2637  0471  0020               	movlb	0	; select bank0
  2638  0472  01BB               	clrf	_omega_mode
  2639                           
  2640                           ;main.c: 87: break;
  2641  0473  2C90               	goto	l1980
  2642  0474                     l1978:	
  2643                           
  2644                           ;main.c: 88: }
  2645                           ;main.c: 89: printf("Invalid input. Try again.\n\r");
  2646  0474  300F               	movlw	low (STR_16| (0+32768))
  2647  0475  00A0               	movwf	printf@f
  2648  0476  308B               	movlw	high (STR_16| (0+32768))
  2649  0477                     L4:	
  2650  0477  00A1               	movwf	printf@f+1
  2651  0478  3181  21FE  3183   	fcall	_printf
  2652                           
  2653                           ;main.c: 75: {
  2654                           ;main.c: 76: userInput = waitch();
  2655                           
  2656                           ;main.c: 74: while(1)
  2657  047B  3180  20C5  3183   	fcall	_waitch
  2658  047E  0020               	movlb	0	; select bank0
  2659  047F  00AF               	movwf	??_main
  2660  0480  082F               	movf	??_main,w
  2661  0481  00B6               	movwf	main@userInput
  2662                           
  2663                           ;main.c: 77: if(userInput == 'y')
  2664  0482  3079               	movlw	121
  2665  0483  0636               	xorwf	main@userInput,w
  2666  0484  1D03               	btfss	3,2
  2667  0485  2C66               	goto	l1972
  2668                           
  2669                           ;main.c: 78: {
  2670                           ;main.c: 79: printf("y\n\r");
  2671  0486  30D8               	movlw	low (STR_18| (0+32768))
  2672  0487  00A0               	movwf	printf@f
  2673  0488  308B               	movlw	high (STR_18| (0+32768))
  2674  0489  00A1               	movwf	printf@f+1
  2675  048A  3181  21FE  3183   	fcall	_printf
  2676                           
  2677                           ;main.c: 80: omega_mode = 1;
  2678  048D  0020               	movlb	0	; select bank0
  2679  048E  01BB               	clrf	_omega_mode
  2680  048F  0ABB               	incf	_omega_mode,f
  2681  0490                     l1980:	
  2682                           
  2683                           ;main.c: 90: }
  2684                           ;main.c: 92: printf("Press \'s\' to swing the sword and see what happens!\n\r");
  2685  0490  30CB               	movlw	low (STR_21| (0+32768))
  2686  0491  0020               	movlb	0	; select bank0
  2687  0492  00A0               	movwf	printf@f
  2688  0493  3088               	movlw	high (STR_21| (0+32768))
  2689  0494  00A1               	movwf	printf@f+1
  2690  0495  3181  21FE  3183   	fcall	_printf
  2691                           
  2692                           ;main.c: 93: printf("Press 'd', 'h', or 't' to send damage, health, or stun packets.\n\r
      +                          ");
  2693  0498  300A               	movlw	low (STR_22| (0+32768))
  2694  0499  0020               	movlb	0	; select bank0
  2695  049A  00A0               	movwf	printf@f
  2696  049B  3088               	movlw	high (STR_22| (0+32768))
  2697  049C  00A1               	movwf	printf@f+1
  2698  049D  3181  21FE  3183   	fcall	_printf
  2699                           
  2700                           ;main.c: 94: printf("Press 'o' to toggle Omega mode.\n\r\n\r");
  2701  04A0  302A               	movlw	low (STR_23| (0+32768))
  2702  04A1  0020               	movlb	0	; select bank0
  2703  04A2  00A0               	movwf	printf@f
  2704  04A3  308A               	movlw	high (STR_23| (0+32768))
  2705  04A4                     L5:	
  2706  04A4  00A1               	movwf	printf@f+1
  2707  04A5  3181  21FE  3183   	fcall	_printf
  2708                           
  2709                           ;main.c: 98: {
  2710                           ;main.c: 100: if( blade == 1 )
  2711                           
  2712                           ;main.c: 97: while(1)
  2713  04A8  0020               	movlb	0	; select bank0
  2714  04A9  033A               	decf	_blade,w
  2715  04AA  1D03               	btfss	3,2
  2716  04AB  2D96               	goto	l2072
  2717                           
  2718                           ;main.c: 122: }
  2719  04AC  2D2F               	goto	l1984
  2720  04AD                     l2012:	
  2721                           
  2722                           ;main.c: 123: else
  2723                           ;main.c: 124: {
  2724                           ;main.c: 125: display_blade_lights(1);
  2725  04AD  3001               	movlw	1
  2726  04AE  2D74               	goto	L6
  2727  04AF                     l2014:	
  2728                           ;main.c: 126: }
  2729                           ;main.c: 128: break;
  2730                           
  2731                           
  2732                           ;main.c: 129: }
  2733                           ;main.c: 130: if(userInput == 'd' && !determine_omega_mode_active())
  2734  04AF  3064               	movlw	100
  2735  04B0  0020               	movlb	0	; select bank0
  2736  04B1  0636               	xorwf	main@userInput,w
  2737  04B2  1D03               	btfss	3,2
  2738  04B3  2CCF               	goto	l2026
  2739  04B4  3180  20C2  3183   	fcall	_determine_omega_mode_active
  2740  04B7  3A00               	xorlw	0
  2741  04B8  1D03               	skipz
  2742  04B9  2CCF               	goto	l2026
  2743                           
  2744                           ;main.c: 131: {
  2745                           ;main.c: 132: if(health > 0)
  2746  04BA  0020               	movlb	0	; select bank0
  2747  04BB  083D               	movf	_health,w
  2748  04BC  1903               	btfsc	3,2
  2749  04BD  2CC0               	goto	l2022
  2750                           
  2751                           ;main.c: 133: {
  2752                           ;main.c: 134: health -= 10;
  2753  04BE  300A               	movlw	10
  2754  04BF  02BD               	subwf	_health,f
  2755  04C0                     l2022:	
  2756                           
  2757                           ;main.c: 135: }
  2758                           ;main.c: 136: printf("The blade has been damaged. Health = %d.\n\r",
  2759                           ;main.c: 137: health);
  2760  04C0  3060               	movlw	low (STR_25| (0+32768))
  2761  04C1  00A0               	movwf	printf@f
  2762  04C2  3089               	movlw	high (STR_25| (0+32768))
  2763  04C3  00A1               	movwf	printf@f+1
  2764  04C4  083D               	movf	_health,w
  2765  04C5  00AF               	movwf	??_main
  2766  04C6  01B0               	clrf	??_main+1
  2767  04C7  082F               	movf	??_main,w
  2768  04C8  00A2               	movwf	?_printf+2
  2769  04C9  0830               	movf	??_main+1,w
  2770  04CA  00A3               	movwf	?_printf+3
  2771  04CB  3181  21FE  3183   	fcall	_printf
  2772                           
  2773                           ;main.c: 139: break;
  2774  04CE  2D77               	goto	l205
  2775  04CF                     l2026:	
  2776                           ;main.c: 140: }
  2777                           
  2778                           
  2779                           ;main.c: 141: else if(userInput == 'h' && !determine_omega_mode_active())
  2780  04CF  3068               	movlw	104
  2781  04D0  0020               	movlb	0	; select bank0
  2782  04D1  0636               	xorwf	main@userInput,w
  2783  04D2  1D03               	btfss	3,2
  2784  04D3  2CF2               	goto	l2038
  2785  04D4  3180  20C2  3183   	fcall	_determine_omega_mode_active
  2786  04D7  3A00               	xorlw	0
  2787  04D8  1D03               	skipz
  2788  04D9  2CF2               	goto	l2038
  2789                           
  2790                           ;main.c: 142: {
  2791                           ;main.c: 143: if(health < 50)
  2792  04DA  3032               	movlw	50
  2793  04DB  0020               	movlb	0	; select bank0
  2794  04DC  023D               	subwf	_health,w
  2795  04DD  1803               	skipnc
  2796  04DE  2CE3               	goto	l2034
  2797                           
  2798                           ;main.c: 144: {
  2799                           ;main.c: 145: health += 10;
  2800  04DF  300A               	movlw	10
  2801  04E0  00AF               	movwf	??_main
  2802  04E1  082F               	movf	??_main,w
  2803  04E2  07BD               	addwf	_health,f
  2804  04E3                     l2034:	
  2805                           
  2806                           ;main.c: 146: }
  2807                           ;main.c: 147: printf("The blade has been healed. Health = %d.\n\r",
  2808                           ;main.c: 148: health);
  2809  04E3  308B               	movlw	low (STR_26| (0+32768))
  2810  04E4  00A0               	movwf	printf@f
  2811  04E5  3089               	movlw	high (STR_26| (0+32768))
  2812  04E6  00A1               	movwf	printf@f+1
  2813  04E7  083D               	movf	_health,w
  2814  04E8  00AF               	movwf	??_main
  2815  04E9  01B0               	clrf	??_main+1
  2816  04EA  082F               	movf	??_main,w
  2817  04EB  00A2               	movwf	?_printf+2
  2818  04EC  0830               	movf	??_main+1,w
  2819  04ED  00A3               	movwf	?_printf+3
  2820  04EE  3181  21FE  3183   	fcall	_printf
  2821                           
  2822                           ;main.c: 150: break;
  2823  04F1  2D77               	goto	l205
  2824  04F2                     l2038:	
  2825                           ;main.c: 151: }
  2826                           
  2827                           
  2828                           ;main.c: 152: else if(userInput == 't' && !determine_omega_mode_active())
  2829  04F2  3074               	movlw	116
  2830  04F3  0020               	movlb	0	; select bank0
  2831  04F4  0636               	xorwf	main@userInput,w
  2832  04F5  1D03               	btfss	3,2
  2833  04F6  2D0A               	goto	l2048
  2834  04F7  3180  20C2  3183   	fcall	_determine_omega_mode_active
  2835  04FA  3A00               	xorlw	0
  2836  04FB  1D03               	skipz
  2837  04FC  2D0A               	goto	l2048
  2838                           
  2839                           ;main.c: 153: {
  2840                           ;main.c: 154: stun_counter += 10;
  2841  04FD  300A               	movlw	10
  2842  04FE  0020               	movlb	0	; select bank0
  2843  04FF  00AF               	movwf	??_main
  2844  0500  082F               	movf	??_main,w
  2845  0501  07BC               	addwf	_stun_counter,f
  2846                           
  2847                           ;main.c: 155: printf("The blade has been stunned.\n\r");
  2848  0502  30D4               	movlw	low (STR_27| (0+32768))
  2849  0503  00A0               	movwf	printf@f
  2850  0504  308A               	movlw	high (STR_27| (0+32768))
  2851  0505  00A1               	movwf	printf@f+1
  2852  0506  3181  21FE  3183   	fcall	_printf
  2853                           
  2854                           ;main.c: 157: break;
  2855  0509  2D77               	goto	l205
  2856  050A                     l2048:	
  2857                           ;main.c: 158: }
  2858                           
  2859                           
  2860                           ;main.c: 159: else if(userInput == 'o')
  2861  050A  306F               	movlw	111
  2862  050B  0020               	movlb	0	; select bank0
  2863  050C  0636               	xorwf	main@userInput,w
  2864  050D  1D03               	btfss	3,2
  2865  050E  2D2A               	goto	l2060
  2866                           
  2867                           ;main.c: 160: {
  2868                           ;main.c: 161: if(!determine_omega_mode_active())
  2869  050F  3180  20C2  3183   	fcall	_determine_omega_mode_active
  2870  0512  3A00               	xorlw	0
  2871  0513  1D03               	skipz
  2872  0514  2D20               	goto	l2056
  2873                           
  2874                           ;main.c: 162: {
  2875                           ;main.c: 163: omega_mode = 1;
  2876  0515  0020               	movlb	0	; select bank0
  2877  0516  01BB               	clrf	_omega_mode
  2878  0517  0ABB               	incf	_omega_mode,f
  2879                           
  2880                           ;main.c: 164: printf("Omega mode enabled.\n\r");
  2881  0518  3075               	movlw	low (STR_28| (0+32768))
  2882  0519  00A0               	movwf	printf@f
  2883  051A  308B               	movlw	high (STR_28| (0+32768))
  2884  051B  00A1               	movwf	printf@f+1
  2885  051C  3181  21FE  3183   	fcall	_printf
  2886                           
  2887                           ;main.c: 165: }
  2888  051F  2D77               	goto	l205
  2889  0520                     l2056:	
  2890                           
  2891                           ;main.c: 166: else
  2892                           ;main.c: 167: {
  2893                           ;main.c: 168: omega_mode = 0;
  2894  0520  0020               	movlb	0	; select bank0
  2895  0521  01BB               	clrf	_omega_mode
  2896                           
  2897                           ;main.c: 169: printf("Omega mode disabled.\n\r");
  2898  0522  305E               	movlw	low (STR_29| (0+32768))
  2899  0523  00A0               	movwf	printf@f
  2900  0524  308B               	movlw	high (STR_29| (0+32768))
  2901  0525  00A1               	movwf	printf@f+1
  2902  0526  3181  21FE  3183   	fcall	_printf
  2903                           
  2904                           ;main.c: 170: }
  2905                           ;main.c: 171: break;
  2906  0529  2D77               	goto	l205
  2907  052A                     l2060:	
  2908                           
  2909                           ;main.c: 172: }
  2910                           ;main.c: 174: userInput = ' ';
  2911  052A  3020               	movlw	32
  2912  052B  0020               	movlb	0	; select bank0
  2913  052C  00AF               	movwf	??_main
  2914  052D  082F               	movf	??_main,w
  2915  052E  00B6               	movwf	main@userInput
  2916  052F                     l1984:	
  2917                           ;main.c: 101: {
  2918                           ;main.c: 102: while( 1 )
  2919                           
  2920                           
  2921                           ;main.c: 103: {
  2922                           ;main.c: 104: display_health(50);
  2923  052F  3032               	movlw	50
  2924  0530  3180  20C0  3183   	fcall	_display_health
  2925                           
  2926                           ;main.c: 105: userInput = determine_sword_was_swung();
  2927  0533  3180  20FC  3183   	fcall	_determine_sword_was_swung
  2928  0536  0020               	movlb	0	; select bank0
  2929  0537  00AF               	movwf	??_main
  2930  0538  082F               	movf	??_main,w
  2931  0539  00B6               	movwf	main@userInput
  2932                           
  2933                           ;main.c: 106: if( ( userInput == 1 ) && ( health > 0) )
  2934  053A  0336               	decf	main@userInput,w
  2935  053B  1D03               	btfss	3,2
  2936  053C  2CAF               	goto	l2014
  2937  053D  083D               	movf	_health,w
  2938  053E  1903               	btfsc	3,2
  2939  053F  2CAF               	goto	l2014
  2940                           
  2941                           ;main.c: 107: {
  2942                           ;main.c: 108: printf("Sword was swung\n\r");
  2943  0540  30B2               	movlw	low (STR_24| (0+32768))
  2944  0541  00A0               	movwf	printf@f
  2945  0542  308B               	movlw	high (STR_24| (0+32768))
  2946  0543  00A1               	movwf	printf@f+1
  2947  0544  3181  21FE  3183   	fcall	_printf
  2948                           
  2949                           ;main.c: 110: if(!determine_omega_mode_active())
  2950  0547  3180  20C2  3183   	fcall	_determine_omega_mode_active
  2951  054A  3A00               	xorlw	0
  2952  054B  1D03               	skipz
  2953  054C  2CAD               	goto	l2012
  2954                           
  2955                           ;main.c: 111: {
  2956                           ;main.c: 112: determine_packets_to_send(&pkt_arr);
  2957  054D  3032               	movlw	(low (main@pkt_arr| 0))& (0+255)
  2958  054E  3181  214A  3183   	fcall	_determine_packets_to_send
  2959                           
  2960                           ;main.c: 114: for(i = 0; i < 3; ++i)
  2961  0551  0020               	movlb	0	; select bank0
  2962  0552  01B5               	clrf	main@i
  2963  0553  3003               	movlw	3
  2964  0554  0235               	subwf	main@i,w
  2965  0555  1803               	btfsc	3,0
  2966  0556  2D73               	goto	l2010
  2967  0557                     l2002:	
  2968                           
  2969                           ;main.c: 115: {
  2970                           ;main.c: 116: if(pkt_arr[i] > 0)
  2971  0557  0835               	movf	main@i,w
  2972  0558  3E32               	addlw	(low (main@pkt_arr| 0))& (0+255)
  2973  0559  0086               	movwf	6
  2974  055A  0187               	clrf	7
  2975  055B  0801               	movf	1,w
  2976  055C  1903               	btfsc	3,2
  2977  055D  2D6A               	goto	l2006
  2978                           
  2979                           ;main.c: 117: {
  2980                           ;main.c: 118: output_ir(i, pkt_arr[i]);
  2981  055E  0835               	movf	main@i,w
  2982  055F  3E32               	addlw	(low (main@pkt_arr| 0))& (0+255)
  2983  0560  0086               	movwf	6
  2984  0561  0187               	clrf	7
  2985  0562  0801               	movf	1,w
  2986  0563  00AF               	movwf	??_main
  2987  0564  082F               	movf	??_main,w
  2988  0565  00F0               	movwf	output_ir@amount
  2989  0566  0835               	movf	main@i,w
  2990  0567  3182  22B5  3183   	fcall	_output_ir
  2991  056A                     l2006:	
  2992  056A  3001               	movlw	1
  2993  056B  0020               	movlb	0	; select bank0
  2994  056C  00AF               	movwf	??_main
  2995  056D  082F               	movf	??_main,w
  2996  056E  07B5               	addwf	main@i,f
  2997  056F  3003               	movlw	3
  2998  0570  0235               	subwf	main@i,w
  2999  0571  1C03               	skipc
  3000  0572  2D57               	goto	l2002
  3001  0573                     l2010:	
  3002                           
  3003                           ;main.c: 119: }
  3004                           ;main.c: 120: }
  3005                           ;main.c: 121: display_blade_lights(0);
  3006  0573  3000               	movlw	0
  3007  0574                     L6:	
  3008  0574  3181  211C  3183   	fcall	_display_blade_lights
  3009  0577                     l205:	
  3010                           
  3011                           ;main.c: 175: }
  3012                           ;main.c: 177: GIE = 0;
  3013  0577  138B               	bcf	11,7	;volatile
  3014                           
  3015                           ;main.c: 178: while( ( stun_counter > 0 ) && !determine_omega_mode_active() )
  3016  0578  2D8B               	goto	l2068
  3017  0579                     l219:	
  3018                           
  3019                           ;main.c: 179: {
  3020                           ;main.c: 180: GIE = 1;
  3021  0579  178B               	bsf	11,7	;volatile
  3022                           
  3023                           ;main.c: 181: _delay((unsigned long)((100)*(32000000/4000.0)));
  3024  057A  3005               	movlw	5
  3025  057B  0020               	movlb	0	; select bank0
  3026  057C  00B1               	movwf	??_main+2
  3027  057D  300F               	movlw	15
  3028  057E  00B0               	movwf	??_main+1
  3029  057F  30F4               	movlw	244
  3030  0580  00AF               	movwf	??_main
  3031  0581                     u2167:	
  3032  0581  0BAF               	decfsz	??_main,f
  3033  0582  2D81               	goto	u2167
  3034  0583  0BB0               	decfsz	??_main+1,f
  3035  0584  2D81               	goto	u2167
  3036  0585  0BB1               	decfsz	??_main+2,f
  3037  0586  2D81               	goto	u2167
  3038                           
  3039                           ;main.c: 182: GIE = 0;
  3040  0587  138B               	bcf	11,7	;volatile
  3041                           
  3042                           ;main.c: 183: --stun_counter;
  3043  0588  3001               	movlw	1
  3044  0589  0020               	movlb	0	; select bank0
  3045  058A  02BC               	subwf	_stun_counter,f
  3046  058B                     l2068:	
  3047  058B  0020               	movlb	0	; select bank0
  3048  058C  083C               	movf	_stun_counter,w
  3049  058D  1903               	btfsc	3,2
  3050  058E  2D95               	goto	l222
  3051  058F  3180  20C2  3183   	fcall	_determine_omega_mode_active
  3052  0592  3A00               	xorlw	0
  3053  0593  1903               	skipnz
  3054  0594  2D79               	goto	l219
  3055  0595                     l222:	
  3056                           
  3057                           ;main.c: 184: }
  3058                           ;main.c: 185: GIE = 1;
  3059  0595  178B               	bsf	11,7	;volatile
  3060  0596                     l2072:	
  3061                           
  3062                           ;main.c: 186: }
  3063                           ;main.c: 188: if( blade == 2 )
  3064  0596  3002               	movlw	2
  3065  0597  0020               	movlb	0	; select bank0
  3066  0598  063A               	xorwf	_blade,w
  3067  0599  1D03               	btfss	3,2
  3068  059A  2E13               	goto	l2120
  3069                           
  3070                           ;main.c: 212: }
  3071  059B  2DC7               	goto	l2074
  3072  059C                     l2102:	
  3073                           
  3074                           ;main.c: 213: else
  3075                           ;main.c: 214: {
  3076                           ;main.c: 215: play_sound(1);
  3077  059C  3001               	movlw	1
  3078  059D  3181  2133  3183   	fcall	_play_sound
  3079                           
  3080                           ;main.c: 216: display_blade_lights(1);
  3081  05A0  3001               	movlw	1
  3082  05A1  2E10               	goto	L7
  3083  05A2                     l2106:	
  3084                           ;main.c: 220: }
  3085                           
  3086                           ;main.c: 217: }
  3087                           ;main.c: 219: break;
  3088                           
  3089                           
  3090                           ;main.c: 221: else if(userInput == 'o')
  3091  05A2  306F               	movlw	111
  3092  05A3  0020               	movlb	0	; select bank0
  3093  05A4  0636               	xorwf	main@userInput,w
  3094  05A5  1D03               	btfss	3,2
  3095  05A6  2DC2               	goto	l2118
  3096                           
  3097                           ;main.c: 222: {
  3098                           ;main.c: 223: if(!determine_omega_mode_active())
  3099  05A7  3180  20C2  3183   	fcall	_determine_omega_mode_active
  3100  05AA  3A00               	xorlw	0
  3101  05AB  1D03               	skipz
  3102  05AC  2DB8               	goto	l2114
  3103                           
  3104                           ;main.c: 224: {
  3105                           ;main.c: 225: omega_mode = 1;
  3106  05AD  0020               	movlb	0	; select bank0
  3107  05AE  01BB               	clrf	_omega_mode
  3108  05AF  0ABB               	incf	_omega_mode,f
  3109                           
  3110                           ;main.c: 226: printf("Omega mode enabled.\n\r");
  3111  05B0  3075               	movlw	low (STR_28| (0+32768))
  3112  05B1  00A0               	movwf	printf@f
  3113  05B2  308B               	movlw	high (STR_28| (0+32768))
  3114  05B3  00A1               	movwf	printf@f+1
  3115  05B4  3181  21FE  3183   	fcall	_printf
  3116                           
  3117                           ;main.c: 227: }
  3118  05B7  2E13               	goto	l2120
  3119  05B8                     l2114:	
  3120                           
  3121                           ;main.c: 228: else
  3122                           ;main.c: 229: {
  3123                           ;main.c: 230: omega_mode = 0;
  3124  05B8  0020               	movlb	0	; select bank0
  3125  05B9  01BB               	clrf	_omega_mode
  3126                           
  3127                           ;main.c: 231: printf("Omega mode disabled.\n\r");
  3128  05BA  305E               	movlw	low (STR_29| (0+32768))
  3129  05BB  00A0               	movwf	printf@f
  3130  05BC  308B               	movlw	high (STR_29| (0+32768))
  3131  05BD  00A1               	movwf	printf@f+1
  3132  05BE  3181  21FE  3183   	fcall	_printf
  3133                           
  3134                           ;main.c: 232: }
  3135                           ;main.c: 233: break;
  3136  05C1  2E13               	goto	l2120
  3137  05C2                     l2118:	
  3138                           
  3139                           ;main.c: 234: }
  3140                           ;main.c: 236: userInput = ' ';
  3141  05C2  3020               	movlw	32
  3142  05C3  0020               	movlb	0	; select bank0
  3143  05C4  00AF               	movwf	??_main
  3144  05C5  082F               	movf	??_main,w
  3145  05C6  00B6               	movwf	main@userInput
  3146  05C7                     l2074:	
  3147                           ;main.c: 189: {
  3148                           ;main.c: 190: while( 1 )
  3149                           
  3150                           
  3151                           ;main.c: 191: {
  3152                           ;main.c: 192: display_health(50);
  3153  05C7  3032               	movlw	50
  3154  05C8  3180  20C0  3183   	fcall	_display_health
  3155                           
  3156                           ;main.c: 193: userInput = determine_sword_was_swung();
  3157  05CB  3180  20FC  3183   	fcall	_determine_sword_was_swung
  3158  05CE  0020               	movlb	0	; select bank0
  3159  05CF  00AF               	movwf	??_main
  3160  05D0  082F               	movf	??_main,w
  3161  05D1  00B6               	movwf	main@userInput
  3162                           
  3163                           ;main.c: 194: if( ( userInput == 1 ) && ( health > 0) )
  3164  05D2  0336               	decf	main@userInput,w
  3165  05D3  1D03               	btfss	3,2
  3166  05D4  2DA2               	goto	l2106
  3167  05D5  083D               	movf	_health,w
  3168  05D6  1903               	btfsc	3,2
  3169  05D7  2DA2               	goto	l2106
  3170                           
  3171                           ;main.c: 195: {
  3172                           ;main.c: 196: printf("Sword was swung\n\r");
  3173  05D8  30B2               	movlw	low (STR_24| (0+32768))
  3174  05D9  00A0               	movwf	printf@f
  3175  05DA  308B               	movlw	high (STR_24| (0+32768))
  3176  05DB  00A1               	movwf	printf@f+1
  3177  05DC  3181  21FE  3183   	fcall	_printf
  3178                           
  3179                           ;main.c: 198: if(!determine_omega_mode_active())
  3180  05DF  3180  20C2  3183   	fcall	_determine_omega_mode_active
  3181  05E2  3A00               	xorlw	0
  3182  05E3  1D03               	skipz
  3183  05E4  2D9C               	goto	l2102
  3184                           
  3185                           ;main.c: 199: {
  3186                           ;main.c: 200: determine_packets_to_send(&pkt_arr);
  3187  05E5  3032               	movlw	(low (main@pkt_arr| 0))& (0+255)
  3188  05E6  3181  214A  3183   	fcall	_determine_packets_to_send
  3189                           
  3190                           ;main.c: 202: for(i = 0; i < 3; ++i)
  3191  05E9  0020               	movlb	0	; select bank0
  3192  05EA  01B5               	clrf	main@i
  3193  05EB  3003               	movlw	3
  3194  05EC  0235               	subwf	main@i,w
  3195  05ED  1803               	btfsc	3,0
  3196  05EE  2E0B               	goto	l2100
  3197  05EF                     l2092:	
  3198                           
  3199                           ;main.c: 203: {
  3200                           ;main.c: 204: if(pkt_arr[i] > 0)
  3201  05EF  0835               	movf	main@i,w
  3202  05F0  3E32               	addlw	(low (main@pkt_arr| 0))& (0+255)
  3203  05F1  0086               	movwf	6
  3204  05F2  0187               	clrf	7
  3205  05F3  0801               	movf	1,w
  3206  05F4  1903               	btfsc	3,2
  3207  05F5  2E02               	goto	l2096
  3208                           
  3209                           ;main.c: 205: {
  3210                           ;main.c: 206: output_ir(i, pkt_arr[i]);
  3211  05F6  0835               	movf	main@i,w
  3212  05F7  3E32               	addlw	(low (main@pkt_arr| 0))& (0+255)
  3213  05F8  0086               	movwf	6
  3214  05F9  0187               	clrf	7
  3215  05FA  0801               	movf	1,w
  3216  05FB  00AF               	movwf	??_main
  3217  05FC  082F               	movf	??_main,w
  3218  05FD  00F0               	movwf	output_ir@amount
  3219  05FE  0835               	movf	main@i,w
  3220  05FF  3182  22B5  3183   	fcall	_output_ir
  3221  0602                     l2096:	
  3222  0602  3001               	movlw	1
  3223  0603  0020               	movlb	0	; select bank0
  3224  0604  00AF               	movwf	??_main
  3225  0605  082F               	movf	??_main,w
  3226  0606  07B5               	addwf	main@i,f
  3227  0607  3003               	movlw	3
  3228  0608  0235               	subwf	main@i,w
  3229  0609  1C03               	skipc
  3230  060A  2DEF               	goto	l2092
  3231  060B                     l2100:	
  3232                           
  3233                           ;main.c: 207: }
  3234                           ;main.c: 208: }
  3235                           ;main.c: 210: play_sound(0);
  3236  060B  3000               	movlw	0
  3237  060C  3181  2133  3183   	fcall	_play_sound
  3238                           
  3239                           ;main.c: 211: display_blade_lights(0);
  3240  060F  3000               	movlw	0
  3241  0610                     L7:	
  3242  0610  3181  211C  3183   	fcall	_display_blade_lights
  3243  0613                     l2120:	
  3244                           
  3245                           ;main.c: 237: }
  3246                           ;main.c: 238: }
  3247                           ;main.c: 240: if( ( userInput == 1 ) && ( health > 0) )
  3248  0613  0020               	movlb	0	; select bank0
  3249  0614  0336               	decf	main@userInput,w
  3250  0615  1D03               	btfss	3,2
  3251  0616  2F01               	goto	l2210
  3252  0617  083D               	movf	_health,w
  3253  0618  1903               	btfsc	3,2
  3254  0619  2F01               	goto	l2210
  3255                           
  3256                           ;main.c: 263: }
  3257  061A  2E9D               	goto	l2124
  3258  061B                     l2150:	
  3259                           
  3260                           ;main.c: 264: else
  3261                           ;main.c: 265: {
  3262                           ;main.c: 266: display_blade_lights(1);
  3263  061B  3001               	movlw	1
  3264  061C  2EDF               	goto	L8
  3265  061D                     l2152:	
  3266                           ;main.c: 267: }
  3267                           ;main.c: 269: break;
  3268                           
  3269                           
  3270                           ;main.c: 270: }
  3271                           ;main.c: 271: if(userInput == 'd' && !determine_omega_mode_active())
  3272  061D  3064               	movlw	100
  3273  061E  0020               	movlb	0	; select bank0
  3274  061F  0636               	xorwf	main@userInput,w
  3275  0620  1D03               	btfss	3,2
  3276  0621  2E3D               	goto	l2164
  3277  0622  3180  20C2  3183   	fcall	_determine_omega_mode_active
  3278  0625  3A00               	xorlw	0
  3279  0626  1D03               	skipz
  3280  0627  2E3D               	goto	l2164
  3281                           
  3282                           ;main.c: 272: {
  3283                           ;main.c: 273: if(health > 0)
  3284  0628  0020               	movlb	0	; select bank0
  3285  0629  083D               	movf	_health,w
  3286  062A  1903               	btfsc	3,2
  3287  062B  2E2E               	goto	l2160
  3288                           
  3289                           ;main.c: 274: {
  3290                           ;main.c: 275: health -= 10;
  3291  062C  300A               	movlw	10
  3292  062D  02BD               	subwf	_health,f
  3293  062E                     l2160:	
  3294                           
  3295                           ;main.c: 276: }
  3296                           ;main.c: 277: printf("The blade has been damaged. Health = %d.\n\r",
  3297                           ;main.c: 278: health);
  3298  062E  3060               	movlw	low (STR_25| (0+32768))
  3299  062F  00A0               	movwf	printf@f
  3300  0630  3089               	movlw	high (STR_25| (0+32768))
  3301  0631  00A1               	movwf	printf@f+1
  3302  0632  083D               	movf	_health,w
  3303  0633  00AF               	movwf	??_main
  3304  0634  01B0               	clrf	??_main+1
  3305  0635  082F               	movf	??_main,w
  3306  0636  00A2               	movwf	?_printf+2
  3307  0637  0830               	movf	??_main+1,w
  3308  0638  00A3               	movwf	?_printf+3
  3309  0639  3181  21FE  3183   	fcall	_printf
  3310                           
  3311                           ;main.c: 280: break;
  3312  063C  2EE2               	goto	l245
  3313  063D                     l2164:	
  3314                           ;main.c: 281: }
  3315                           
  3316                           
  3317                           ;main.c: 282: else if(userInput == 'h' && !determine_omega_mode_active())
  3318  063D  3068               	movlw	104
  3319  063E  0020               	movlb	0	; select bank0
  3320  063F  0636               	xorwf	main@userInput,w
  3321  0640  1D03               	btfss	3,2
  3322  0641  2E60               	goto	l2176
  3323  0642  3180  20C2  3183   	fcall	_determine_omega_mode_active
  3324  0645  3A00               	xorlw	0
  3325  0646  1D03               	skipz
  3326  0647  2E60               	goto	l2176
  3327                           
  3328                           ;main.c: 283: {
  3329                           ;main.c: 284: if(health < 50)
  3330  0648  3032               	movlw	50
  3331  0649  0020               	movlb	0	; select bank0
  3332  064A  023D               	subwf	_health,w
  3333  064B  1803               	skipnc
  3334  064C  2E51               	goto	l2172
  3335                           
  3336                           ;main.c: 285: {
  3337                           ;main.c: 286: health += 10;
  3338  064D  300A               	movlw	10
  3339  064E  00AF               	movwf	??_main
  3340  064F  082F               	movf	??_main,w
  3341  0650  07BD               	addwf	_health,f
  3342  0651                     l2172:	
  3343                           
  3344                           ;main.c: 287: }
  3345                           ;main.c: 288: printf("The blade has been healed. Health = %d.\n\r",
  3346                           ;main.c: 289: health);
  3347  0651  308B               	movlw	low (STR_26| (0+32768))
  3348  0652  00A0               	movwf	printf@f
  3349  0653  3089               	movlw	high (STR_26| (0+32768))
  3350  0654  00A1               	movwf	printf@f+1
  3351  0655  083D               	movf	_health,w
  3352  0656  00AF               	movwf	??_main
  3353  0657  01B0               	clrf	??_main+1
  3354  0658  082F               	movf	??_main,w
  3355  0659  00A2               	movwf	?_printf+2
  3356  065A  0830               	movf	??_main+1,w
  3357  065B  00A3               	movwf	?_printf+3
  3358  065C  3181  21FE  3183   	fcall	_printf
  3359                           
  3360                           ;main.c: 291: break;
  3361  065F  2EE2               	goto	l245
  3362  0660                     l2176:	
  3363                           ;main.c: 292: }
  3364                           
  3365                           
  3366                           ;main.c: 293: else if(userInput == 't' && !determine_omega_mode_active())
  3367  0660  3074               	movlw	116
  3368  0661  0020               	movlb	0	; select bank0
  3369  0662  0636               	xorwf	main@userInput,w
  3370  0663  1D03               	btfss	3,2
  3371  0664  2E78               	goto	l2186
  3372  0665  3180  20C2  3183   	fcall	_determine_omega_mode_active
  3373  0668  3A00               	xorlw	0
  3374  0669  1D03               	skipz
  3375  066A  2E78               	goto	l2186
  3376                           
  3377                           ;main.c: 294: {
  3378                           ;main.c: 295: stun_counter += 10;
  3379  066B  300A               	movlw	10
  3380  066C  0020               	movlb	0	; select bank0
  3381  066D  00AF               	movwf	??_main
  3382  066E  082F               	movf	??_main,w
  3383  066F  07BC               	addwf	_stun_counter,f
  3384                           
  3385                           ;main.c: 296: printf("The blade has been stunned.\n\r");
  3386  0670  30D4               	movlw	low (STR_27| (0+32768))
  3387  0671  00A0               	movwf	printf@f
  3388  0672  308A               	movlw	high (STR_27| (0+32768))
  3389  0673  00A1               	movwf	printf@f+1
  3390  0674  3181  21FE  3183   	fcall	_printf
  3391                           
  3392                           ;main.c: 298: break;
  3393  0677  2EE2               	goto	l245
  3394  0678                     l2186:	
  3395                           ;main.c: 299: }
  3396                           
  3397                           
  3398                           ;main.c: 300: else if(userInput == 'o')
  3399  0678  306F               	movlw	111
  3400  0679  0020               	movlb	0	; select bank0
  3401  067A  0636               	xorwf	main@userInput,w
  3402  067B  1D03               	btfss	3,2
  3403  067C  2E98               	goto	l2198
  3404                           
  3405                           ;main.c: 301: {
  3406                           ;main.c: 302: if(!determine_omega_mode_active())
  3407  067D  3180  20C2  3183   	fcall	_determine_omega_mode_active
  3408  0680  3A00               	xorlw	0
  3409  0681  1D03               	skipz
  3410  0682  2E8E               	goto	l2194
  3411                           
  3412                           ;main.c: 303: {
  3413                           ;main.c: 304: omega_mode = 1;
  3414  0683  0020               	movlb	0	; select bank0
  3415  0684  01BB               	clrf	_omega_mode
  3416  0685  0ABB               	incf	_omega_mode,f
  3417                           
  3418                           ;main.c: 305: printf("Omega mode enabled.\n\r");
  3419  0686  3075               	movlw	low (STR_28| (0+32768))
  3420  0687  00A0               	movwf	printf@f
  3421  0688  308B               	movlw	high (STR_28| (0+32768))
  3422  0689  00A1               	movwf	printf@f+1
  3423  068A  3181  21FE  3183   	fcall	_printf
  3424                           
  3425                           ;main.c: 306: }
  3426  068D  2EE2               	goto	l245
  3427  068E                     l2194:	
  3428                           
  3429                           ;main.c: 307: else
  3430                           ;main.c: 308: {
  3431                           ;main.c: 309: omega_mode = 0;
  3432  068E  0020               	movlb	0	; select bank0
  3433  068F  01BB               	clrf	_omega_mode
  3434                           
  3435                           ;main.c: 310: printf("Omega mode disabled.\n\r");
  3436  0690  305E               	movlw	low (STR_29| (0+32768))
  3437  0691  00A0               	movwf	printf@f
  3438  0692  308B               	movlw	high (STR_29| (0+32768))
  3439  0693  00A1               	movwf	printf@f+1
  3440  0694  3181  21FE  3183   	fcall	_printf
  3441                           
  3442                           ;main.c: 311: }
  3443                           ;main.c: 312: break;
  3444  0697  2EE2               	goto	l245
  3445  0698                     l2198:	
  3446                           
  3447                           ;main.c: 313: }
  3448                           ;main.c: 315: userInput = ' ';
  3449  0698  3020               	movlw	32
  3450  0699  0020               	movlb	0	; select bank0
  3451  069A  00AF               	movwf	??_main
  3452  069B  082F               	movf	??_main,w
  3453  069C  00B6               	movwf	main@userInput
  3454  069D                     l2124:	
  3455                           ;main.c: 241: {
  3456                           ;main.c: 242: while( 1 )
  3457                           
  3458                           
  3459                           ;main.c: 243: {
  3460                           ;main.c: 244: display_health(50);
  3461  069D  3032               	movlw	50
  3462  069E  3180  20C0  3183   	fcall	_display_health
  3463                           
  3464                           ;main.c: 245: userInput = determine_sword_was_swung();
  3465  06A1  3180  20FC  3183   	fcall	_determine_sword_was_swung
  3466  06A4  0020               	movlb	0	; select bank0
  3467  06A5  00AF               	movwf	??_main
  3468  06A6  082F               	movf	??_main,w
  3469  06A7  00B6               	movwf	main@userInput
  3470                           
  3471                           ;main.c: 246: if(userInput == 1)
  3472  06A8  0336               	decf	main@userInput,w
  3473  06A9  1D03               	btfss	3,2
  3474  06AA  2E1D               	goto	l2152
  3475                           
  3476                           ;main.c: 247: {
  3477                           ;main.c: 248: printf("Sword was swung\n\r");
  3478  06AB  30B2               	movlw	low (STR_24| (0+32768))
  3479  06AC  00A0               	movwf	printf@f
  3480  06AD  308B               	movlw	high (STR_24| (0+32768))
  3481  06AE  00A1               	movwf	printf@f+1
  3482  06AF  3181  21FE  3183   	fcall	_printf
  3483                           
  3484                           ;main.c: 250: determine_packets_to_send(&pkt_arr);
  3485  06B2  3032               	movlw	(low (main@pkt_arr| 0))& (0+255)
  3486  06B3  3181  214A  3183   	fcall	_determine_packets_to_send
  3487                           
  3488                           ;main.c: 252: for(i = 0; i < 3; ++i)
  3489  06B6  0020               	movlb	0	; select bank0
  3490  06B7  01B5               	clrf	main@i
  3491  06B8  3003               	movlw	3
  3492  06B9  0235               	subwf	main@i,w
  3493  06BA  1803               	btfsc	3,0
  3494  06BB  2ED8               	goto	l2146
  3495  06BC                     l2138:	
  3496                           
  3497                           ;main.c: 253: {
  3498                           ;main.c: 254: if(pkt_arr[i] > 0)
  3499  06BC  0835               	movf	main@i,w
  3500  06BD  3E32               	addlw	(low (main@pkt_arr| 0))& (0+255)
  3501  06BE  0086               	movwf	6
  3502  06BF  0187               	clrf	7
  3503  06C0  0801               	movf	1,w
  3504  06C1  1903               	btfsc	3,2
  3505  06C2  2ECF               	goto	l2142
  3506                           
  3507                           ;main.c: 255: {
  3508                           ;main.c: 256: output_ir(i, pkt_arr[i]);
  3509  06C3  0835               	movf	main@i,w
  3510  06C4  3E32               	addlw	(low (main@pkt_arr| 0))& (0+255)
  3511  06C5  0086               	movwf	6
  3512  06C6  0187               	clrf	7
  3513  06C7  0801               	movf	1,w
  3514  06C8  00AF               	movwf	??_main
  3515  06C9  082F               	movf	??_main,w
  3516  06CA  00F0               	movwf	output_ir@amount
  3517  06CB  0835               	movf	main@i,w
  3518  06CC  3182  22B5  3183   	fcall	_output_ir
  3519  06CF                     l2142:	
  3520  06CF  3001               	movlw	1
  3521  06D0  0020               	movlb	0	; select bank0
  3522  06D1  00AF               	movwf	??_main
  3523  06D2  082F               	movf	??_main,w
  3524  06D3  07B5               	addwf	main@i,f
  3525  06D4  3003               	movlw	3
  3526  06D5  0235               	subwf	main@i,w
  3527  06D6  1C03               	skipc
  3528  06D7  2EBC               	goto	l2138
  3529  06D8                     l2146:	
  3530                           
  3531                           ;main.c: 257: }
  3532                           ;main.c: 258: }
  3533                           ;main.c: 260: if(!determine_omega_mode_active())
  3534  06D8  3180  20C2  3183   	fcall	_determine_omega_mode_active
  3535  06DB  3A00               	xorlw	0
  3536  06DC  1D03               	skipz
  3537  06DD  2E1B               	goto	l2150
  3538                           
  3539                           ;main.c: 261: {
  3540                           ;main.c: 262: display_blade_lights(0);
  3541  06DE  3000               	movlw	0
  3542  06DF                     L8:	
  3543  06DF  3181  211C  3183   	fcall	_display_blade_lights
  3544  06E2                     l245:	
  3545                           
  3546                           ;main.c: 316: }
  3547                           ;main.c: 318: GIE = 0;
  3548  06E2  138B               	bcf	11,7	;volatile
  3549                           
  3550                           ;main.c: 319: while( ( stun_counter > 0 ) && !determine_omega_mode_active() )
  3551  06E3  2EF6               	goto	l2206
  3552  06E4                     l259:	
  3553                           
  3554                           ;main.c: 320: {
  3555                           ;main.c: 321: GIE = 1;
  3556  06E4  178B               	bsf	11,7	;volatile
  3557                           
  3558                           ;main.c: 322: _delay((unsigned long)((100)*(32000000/4000.0)));
  3559  06E5  3005               	movlw	5
  3560  06E6  0020               	movlb	0	; select bank0
  3561  06E7  00B1               	movwf	??_main+2
  3562  06E8  300F               	movlw	15
  3563  06E9  00B0               	movwf	??_main+1
  3564  06EA  30F4               	movlw	244
  3565  06EB  00AF               	movwf	??_main
  3566  06EC                     u2177:	
  3567  06EC  0BAF               	decfsz	??_main,f
  3568  06ED  2EEC               	goto	u2177
  3569  06EE  0BB0               	decfsz	??_main+1,f
  3570  06EF  2EEC               	goto	u2177
  3571  06F0  0BB1               	decfsz	??_main+2,f
  3572  06F1  2EEC               	goto	u2177
  3573                           
  3574                           ;main.c: 323: GIE = 0;
  3575  06F2  138B               	bcf	11,7	;volatile
  3576                           
  3577                           ;main.c: 324: --stun_counter;
  3578  06F3  3001               	movlw	1
  3579  06F4  0020               	movlb	0	; select bank0
  3580  06F5  02BC               	subwf	_stun_counter,f
  3581  06F6                     l2206:	
  3582  06F6  0020               	movlb	0	; select bank0
  3583  06F7  083C               	movf	_stun_counter,w
  3584  06F8  1903               	btfsc	3,2
  3585  06F9  2F00               	goto	l262
  3586  06FA  3180  20C2  3183   	fcall	_determine_omega_mode_active
  3587  06FD  3A00               	xorlw	0
  3588  06FE  1903               	skipnz
  3589  06FF  2EE4               	goto	l259
  3590  0700                     l262:	
  3591                           
  3592                           ;main.c: 325: }
  3593                           ;main.c: 326: GIE = 1;
  3594  0700  178B               	bsf	11,7	;volatile
  3595  0701                     l2210:	
  3596                           
  3597                           ;main.c: 327: }
  3598                           ;main.c: 329: if( ( userInput == 1 ) && ( health > 0) )
  3599  0701  0020               	movlb	0	; select bank0
  3600  0702  0336               	decf	main@userInput,w
  3601  0703  1D03               	btfss	3,2
  3602  0704  2FEF               	goto	l2300
  3603  0705  083D               	movf	_health,w
  3604  0706  1903               	btfsc	3,2
  3605  0707  2FEF               	goto	l2300
  3606                           
  3607                           ;main.c: 351: }
  3608  0708  2F8B               	goto	l2214
  3609  0709                     l2240:	
  3610                           
  3611                           ;main.c: 352: else
  3612                           ;main.c: 353: {
  3613                           ;main.c: 354: display_blade_lights(1);
  3614  0709  3001               	movlw	1
  3615  070A  2FCD               	goto	L9
  3616  070B                     l2242:	
  3617                           ;main.c: 355: }
  3618                           ;main.c: 357: break;
  3619                           
  3620                           
  3621                           ;main.c: 358: }
  3622                           ;main.c: 359: if(userInput == 'd' && !determine_omega_mode_active())
  3623  070B  3064               	movlw	100
  3624  070C  0020               	movlb	0	; select bank0
  3625  070D  0636               	xorwf	main@userInput,w
  3626  070E  1D03               	btfss	3,2
  3627  070F  2F2B               	goto	l2254
  3628  0710  3180  20C2  3183   	fcall	_determine_omega_mode_active
  3629  0713  3A00               	xorlw	0
  3630  0714  1D03               	skipz
  3631  0715  2F2B               	goto	l2254
  3632                           
  3633                           ;main.c: 360: {
  3634                           ;main.c: 361: if(health > 0)
  3635  0716  0020               	movlb	0	; select bank0
  3636  0717  083D               	movf	_health,w
  3637  0718  1903               	btfsc	3,2
  3638  0719  2F1C               	goto	l2250
  3639                           
  3640                           ;main.c: 362: {
  3641                           ;main.c: 363: health -= 10;
  3642  071A  300A               	movlw	10
  3643  071B  02BD               	subwf	_health,f
  3644  071C                     l2250:	
  3645                           
  3646                           ;main.c: 364: }
  3647                           ;main.c: 365: printf("The blade has been damaged. Health = %d.\n\r",
  3648                           ;main.c: 366: health);
  3649  071C  3060               	movlw	low (STR_25| (0+32768))
  3650  071D  00A0               	movwf	printf@f
  3651  071E  3089               	movlw	high (STR_25| (0+32768))
  3652  071F  00A1               	movwf	printf@f+1
  3653  0720  083D               	movf	_health,w
  3654  0721  00AF               	movwf	??_main
  3655  0722  01B0               	clrf	??_main+1
  3656  0723  082F               	movf	??_main,w
  3657  0724  00A2               	movwf	?_printf+2
  3658  0725  0830               	movf	??_main+1,w
  3659  0726  00A3               	movwf	?_printf+3
  3660  0727  3181  21FE  3183   	fcall	_printf
  3661                           
  3662                           ;main.c: 368: break;
  3663  072A  2FD0               	goto	l271
  3664  072B                     l2254:	
  3665                           ;main.c: 369: }
  3666                           
  3667                           
  3668                           ;main.c: 370: else if(userInput == 'h' && !determine_omega_mode_active())
  3669  072B  3068               	movlw	104
  3670  072C  0020               	movlb	0	; select bank0
  3671  072D  0636               	xorwf	main@userInput,w
  3672  072E  1D03               	btfss	3,2
  3673  072F  2F4E               	goto	l2266
  3674  0730  3180  20C2  3183   	fcall	_determine_omega_mode_active
  3675  0733  3A00               	xorlw	0
  3676  0734  1D03               	skipz
  3677  0735  2F4E               	goto	l2266
  3678                           
  3679                           ;main.c: 371: {
  3680                           ;main.c: 372: if(health < 50)
  3681  0736  3032               	movlw	50
  3682  0737  0020               	movlb	0	; select bank0
  3683  0738  023D               	subwf	_health,w
  3684  0739  1803               	skipnc
  3685  073A  2F3F               	goto	l2262
  3686                           
  3687                           ;main.c: 373: {
  3688                           ;main.c: 374: health += 10;
  3689  073B  300A               	movlw	10
  3690  073C  00AF               	movwf	??_main
  3691  073D  082F               	movf	??_main,w
  3692  073E  07BD               	addwf	_health,f
  3693  073F                     l2262:	
  3694                           
  3695                           ;main.c: 375: }
  3696                           ;main.c: 376: printf("The blade has been healed. Health = %d.\n\r",
  3697                           ;main.c: 377: health);
  3698  073F  308B               	movlw	low (STR_26| (0+32768))
  3699  0740  00A0               	movwf	printf@f
  3700  0741  3089               	movlw	high (STR_26| (0+32768))
  3701  0742  00A1               	movwf	printf@f+1
  3702  0743  083D               	movf	_health,w
  3703  0744  00AF               	movwf	??_main
  3704  0745  01B0               	clrf	??_main+1
  3705  0746  082F               	movf	??_main,w
  3706  0747  00A2               	movwf	?_printf+2
  3707  0748  0830               	movf	??_main+1,w
  3708  0749  00A3               	movwf	?_printf+3
  3709  074A  3181  21FE  3183   	fcall	_printf
  3710                           
  3711                           ;main.c: 379: break;
  3712  074D  2FD0               	goto	l271
  3713  074E                     l2266:	
  3714                           ;main.c: 380: }
  3715                           
  3716                           
  3717                           ;main.c: 381: else if(userInput == 't' && !determine_omega_mode_active())
  3718  074E  3074               	movlw	116
  3719  074F  0020               	movlb	0	; select bank0
  3720  0750  0636               	xorwf	main@userInput,w
  3721  0751  1D03               	btfss	3,2
  3722  0752  2F66               	goto	l2276
  3723  0753  3180  20C2  3183   	fcall	_determine_omega_mode_active
  3724  0756  3A00               	xorlw	0
  3725  0757  1D03               	skipz
  3726  0758  2F66               	goto	l2276
  3727                           
  3728                           ;main.c: 382: {
  3729                           ;main.c: 383: stun_counter += 10;
  3730  0759  300A               	movlw	10
  3731  075A  0020               	movlb	0	; select bank0
  3732  075B  00AF               	movwf	??_main
  3733  075C  082F               	movf	??_main,w
  3734  075D  07BC               	addwf	_stun_counter,f
  3735                           
  3736                           ;main.c: 384: printf("The blade has been stunned.\n\r");
  3737  075E  30D4               	movlw	low (STR_27| (0+32768))
  3738  075F  00A0               	movwf	printf@f
  3739  0760  308A               	movlw	high (STR_27| (0+32768))
  3740  0761  00A1               	movwf	printf@f+1
  3741  0762  3181  21FE  3183   	fcall	_printf
  3742                           
  3743                           ;main.c: 386: break;
  3744  0765  2FD0               	goto	l271
  3745  0766                     l2276:	
  3746                           ;main.c: 387: }
  3747                           
  3748                           
  3749                           ;main.c: 388: else if(userInput == 'o')
  3750  0766  306F               	movlw	111
  3751  0767  0020               	movlb	0	; select bank0
  3752  0768  0636               	xorwf	main@userInput,w
  3753  0769  1D03               	btfss	3,2
  3754  076A  2F86               	goto	l2288
  3755                           
  3756                           ;main.c: 389: {
  3757                           ;main.c: 390: if(!determine_omega_mode_active())
  3758  076B  3180  20C2  3183   	fcall	_determine_omega_mode_active
  3759  076E  3A00               	xorlw	0
  3760  076F  1D03               	skipz
  3761  0770  2F7C               	goto	l2284
  3762                           
  3763                           ;main.c: 391: {
  3764                           ;main.c: 392: omega_mode = 1;
  3765  0771  0020               	movlb	0	; select bank0
  3766  0772  01BB               	clrf	_omega_mode
  3767  0773  0ABB               	incf	_omega_mode,f
  3768                           
  3769                           ;main.c: 393: printf("Omega mode enabled.\n\r");
  3770  0774  3075               	movlw	low (STR_28| (0+32768))
  3771  0775  00A0               	movwf	printf@f
  3772  0776  308B               	movlw	high (STR_28| (0+32768))
  3773  0777  00A1               	movwf	printf@f+1
  3774  0778  3181  21FE  3183   	fcall	_printf
  3775                           
  3776                           ;main.c: 394: }
  3777  077B  2FD0               	goto	l271
  3778  077C                     l2284:	
  3779                           
  3780                           ;main.c: 395: else
  3781                           ;main.c: 396: {
  3782                           ;main.c: 397: omega_mode = 0;
  3783  077C  0020               	movlb	0	; select bank0
  3784  077D  01BB               	clrf	_omega_mode
  3785                           
  3786                           ;main.c: 398: printf("Omega mode disabled.\n\r");
  3787  077E  305E               	movlw	low (STR_29| (0+32768))
  3788  077F  00A0               	movwf	printf@f
  3789  0780  308B               	movlw	high (STR_29| (0+32768))
  3790  0781  00A1               	movwf	printf@f+1
  3791  0782  3181  21FE  3183   	fcall	_printf
  3792                           
  3793                           ;main.c: 399: }
  3794                           ;main.c: 400: break;
  3795  0785  2FD0               	goto	l271
  3796  0786                     l2288:	
  3797                           
  3798                           ;main.c: 401: }
  3799                           ;main.c: 403: userInput = ' ';
  3800  0786  3020               	movlw	32
  3801  0787  0020               	movlb	0	; select bank0
  3802  0788  00AF               	movwf	??_main
  3803  0789  082F               	movf	??_main,w
  3804  078A  00B6               	movwf	main@userInput
  3805  078B                     l2214:	
  3806                           ;main.c: 330: {
  3807                           ;main.c: 331: while( 1 )
  3808                           
  3809                           
  3810                           ;main.c: 332: {
  3811                           ;main.c: 333: display_health(50);
  3812  078B  3032               	movlw	50
  3813  078C  3180  20C0  3183   	fcall	_display_health
  3814                           
  3815                           ;main.c: 334: userInput = determine_sword_was_swung();
  3816  078F  3180  20FC  3183   	fcall	_determine_sword_was_swung
  3817  0792  0020               	movlb	0	; select bank0
  3818  0793  00AF               	movwf	??_main
  3819  0794  082F               	movf	??_main,w
  3820  0795  00B6               	movwf	main@userInput
  3821                           
  3822                           ;main.c: 335: if(userInput == 1)
  3823  0796  0336               	decf	main@userInput,w
  3824  0797  1D03               	btfss	3,2
  3825  0798  2F0B               	goto	l2242
  3826                           
  3827                           ;main.c: 336: {
  3828                           ;main.c: 337: printf("Sword was swung\n\r");
  3829  0799  30B2               	movlw	low (STR_24| (0+32768))
  3830  079A  00A0               	movwf	printf@f
  3831  079B  308B               	movlw	high (STR_24| (0+32768))
  3832  079C  00A1               	movwf	printf@f+1
  3833  079D  3181  21FE  3183   	fcall	_printf
  3834                           
  3835                           ;main.c: 339: if(!determine_omega_mode_active())
  3836  07A0  3180  20C2  3183   	fcall	_determine_omega_mode_active
  3837  07A3  3A00               	xorlw	0
  3838  07A4  1D03               	skipz
  3839  07A5  2F09               	goto	l2240
  3840                           
  3841                           ;main.c: 340: {
  3842                           ;main.c: 341: determine_packets_to_send(&pkt_arr);
  3843  07A6  3032               	movlw	(low (main@pkt_arr| 0))& (0+255)
  3844  07A7  3181  214A  3183   	fcall	_determine_packets_to_send
  3845                           
  3846                           ;main.c: 343: for(i = 0; i < 3; ++i)
  3847  07AA  0020               	movlb	0	; select bank0
  3848  07AB  01B5               	clrf	main@i
  3849  07AC  3003               	movlw	3
  3850  07AD  0235               	subwf	main@i,w
  3851  07AE  1803               	btfsc	3,0
  3852  07AF  2FCC               	goto	l2238
  3853  07B0                     l2230:	
  3854                           
  3855                           ;main.c: 344: {
  3856                           ;main.c: 345: if(pkt_arr[i] > 0)
  3857  07B0  0835               	movf	main@i,w
  3858  07B1  3E32               	addlw	(low (main@pkt_arr| 0))& (0+255)
  3859  07B2  0086               	movwf	6
  3860  07B3  0187               	clrf	7
  3861  07B4  0801               	movf	1,w
  3862  07B5  1903               	btfsc	3,2
  3863  07B6  2FC3               	goto	l2234
  3864                           
  3865                           ;main.c: 346: {
  3866                           ;main.c: 347: output_ir(i, pkt_arr[i]);
  3867  07B7  0835               	movf	main@i,w
  3868  07B8  3E32               	addlw	(low (main@pkt_arr| 0))& (0+255)
  3869  07B9  0086               	movwf	6
  3870  07BA  0187               	clrf	7
  3871  07BB  0801               	movf	1,w
  3872  07BC  00AF               	movwf	??_main
  3873  07BD  082F               	movf	??_main,w
  3874  07BE  00F0               	movwf	output_ir@amount
  3875  07BF  0835               	movf	main@i,w
  3876  07C0  3182  22B5  3183   	fcall	_output_ir
  3877  07C3                     l2234:	
  3878  07C3  3001               	movlw	1
  3879  07C4  0020               	movlb	0	; select bank0
  3880  07C5  00AF               	movwf	??_main
  3881  07C6  082F               	movf	??_main,w
  3882  07C7  07B5               	addwf	main@i,f
  3883  07C8  3003               	movlw	3
  3884  07C9  0235               	subwf	main@i,w
  3885  07CA  1C03               	skipc
  3886  07CB  2FB0               	goto	l2230
  3887  07CC                     l2238:	
  3888                           
  3889                           ;main.c: 348: }
  3890                           ;main.c: 349: }
  3891                           ;main.c: 350: display_blade_lights(0);
  3892  07CC  3000               	movlw	0
  3893  07CD                     L9:	
  3894  07CD  3181  211C  3183   	fcall	_display_blade_lights
  3895  07D0                     l271:	
  3896                           
  3897                           ;main.c: 404: }
  3898                           ;main.c: 406: GIE = 0;
  3899  07D0  138B               	bcf	11,7	;volatile
  3900                           
  3901                           ;main.c: 407: while( ( stun_counter > 0 ) && !determine_omega_mode_active() )
  3902  07D1  2FE4               	goto	l2296
  3903  07D2                     l285:	
  3904                           
  3905                           ;main.c: 408: {
  3906                           ;main.c: 409: GIE = 1;
  3907  07D2  178B               	bsf	11,7	;volatile
  3908                           
  3909                           ;main.c: 410: _delay((unsigned long)((100)*(32000000/4000.0)));
  3910  07D3  3005               	movlw	5
  3911  07D4  0020               	movlb	0	; select bank0
  3912  07D5  00B1               	movwf	??_main+2
  3913  07D6  300F               	movlw	15
  3914  07D7  00B0               	movwf	??_main+1
  3915  07D8  30F4               	movlw	244
  3916  07D9  00AF               	movwf	??_main
  3917  07DA                     u2187:	
  3918  07DA  0BAF               	decfsz	??_main,f
  3919  07DB  2FDA               	goto	u2187
  3920  07DC  0BB0               	decfsz	??_main+1,f
  3921  07DD  2FDA               	goto	u2187
  3922  07DE  0BB1               	decfsz	??_main+2,f
  3923  07DF  2FDA               	goto	u2187
  3924                           
  3925                           ;main.c: 411: GIE = 0;
  3926  07E0  138B               	bcf	11,7	;volatile
  3927                           
  3928                           ;main.c: 412: --stun_counter;
  3929  07E1  3001               	movlw	1
  3930  07E2  0020               	movlb	0	; select bank0
  3931  07E3  02BC               	subwf	_stun_counter,f
  3932  07E4                     l2296:	
  3933  07E4  0020               	movlb	0	; select bank0
  3934  07E5  083C               	movf	_stun_counter,w
  3935  07E6  1903               	btfsc	3,2
  3936  07E7  2FEE               	goto	l288
  3937  07E8  3180  20C2  3183   	fcall	_determine_omega_mode_active
  3938  07EB  3A00               	xorlw	0
  3939  07EC  1903               	skipnz
  3940  07ED  2FD2               	goto	l285
  3941  07EE                     l288:	
  3942                           
  3943                           ;main.c: 413: }
  3944                           ;main.c: 414: GIE = 1;
  3945  07EE  178B               	bsf	11,7	;volatile
  3946  07EF                     l2300:	
  3947                           
  3948                           ;main.c: 415: }
  3949                           ;main.c: 431: printf("\n\r");
  3950  07EF  304B               	movlw	low ((STR_23+33)| (0+32768))
  3951  07F0  0020               	movlb	0	; select bank0
  3952  07F1  00A0               	movwf	printf@f
  3953  07F2  308A               	movlw	high ((STR_23+33)| (0+32768))
  3954  07F3  2CA4               	goto	L5
  3955  07F4                     __end_of_main:	
  3956                           
  3957                           	psect	text1
  3958  00C5                     __ptext1:	
  3959 ;; *************** function _waitch *****************
  3960 ;; Defined at:
  3961 ;;		line 76 in file "../../source/uart.c"
  3962 ;; Parameters:    Size  Location     Type
  3963 ;;		None
  3964 ;; Auto vars:     Size  Location     Type
  3965 ;;		None
  3966 ;; Return value:  Size  Location     Type
  3967 ;;                  1    wreg      unsigned char 
  3968 ;; Registers used:
  3969 ;;		wreg
  3970 ;; Tracked objects:
  3971 ;;		On entry : 0/0
  3972 ;;		On exit  : 0/0
  3973 ;;		Unchanged: 0/0
  3974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3979 ;;Total ram usage:        0 bytes
  3980 ;; Hardware stack levels used:    1
  3981 ;; This function calls:
  3982 ;;		Nothing
  3983 ;; This function is called by:
  3984 ;;		_main
  3985 ;; This function uses a non-reentrant model
  3986 ;;
  3987                           
  3988                           
  3989                           ;psect for function _waitch
  3990  00C5                     _waitch:	
  3991  00C5                     l353:	
  3992                           ;uart.c: 79: {
  3993                           ;uart.c: 80: continue;
  3994                           
  3995                           ;uart.c: 78: while(!RCIF)
  3996                           
  3997                           ;incstack = 0
  3998                           ; Regs used in _waitch: [wreg]
  3999                           
  4000  00C5  0020               	movlb	0	; select bank0
  4001  00C6  1E91               	btfss	17,5	;volatile
  4002  00C7  28C5               	goto	l353
  4003                           
  4004                           ;uart.c: 81: }
  4005                           ;uart.c: 82: return RCREG;
  4006  00C8  0023               	movlb	3	; select bank3
  4007  00C9  0819               	movf	25,w	;volatile
  4008  00CA  0008               	return
  4009  00CB                     __end_of_waitch:	
  4010                           
  4011                           	psect	text2
  4012  0133                     __ptext2:	
  4013 ;; *************** function _play_sound *****************
  4014 ;; Defined at:
  4015 ;;		line 132 in file "../../source/function_stubs.c"
  4016 ;; Parameters:    Size  Location     Type
  4017 ;;  sound_select    1    wreg     unsigned char 
  4018 ;; Auto vars:     Size  Location     Type
  4019 ;;  sound_select    1   14[BANK0 ] unsigned char 
  4020 ;; Return value:  Size  Location     Type
  4021 ;;		None               void
  4022 ;; Registers used:
  4023 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4024 ;; Tracked objects:
  4025 ;;		On entry : 0/0
  4026 ;;		On exit  : 0/0
  4027 ;;		Unchanged: 0/0
  4028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4030 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4032 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4033 ;;Total ram usage:        1 bytes
  4034 ;; Hardware stack levels used:    1
  4035 ;; Hardware stack levels required when called:    2
  4036 ;; This function calls:
  4037 ;;		_printf
  4038 ;; This function is called by:
  4039 ;;		_main
  4040 ;; This function uses a non-reentrant model
  4041 ;;
  4042                           
  4043                           
  4044                           ;psect for function _play_sound
  4045  0133                     _play_sound:	
  4046                           
  4047                           ;incstack = 0
  4048                           ; Regs used in _play_sound: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4049                           ;play_sound@sound_selection stored from wreg
  4050  0133  0020               	movlb	0	; select bank0
  4051  0134  00AE               	movwf	play_sound@sound_selection
  4052                           
  4053                           ;function_stubs.c: 134: if(sound_selection == 0)
  4054  0135  082E               	movf	play_sound@sound_selection,w
  4055  0136  1D03               	btfss	3,2
  4056  0137  293F               	goto	l1828
  4057                           
  4058                           ;function_stubs.c: 135: {
  4059                           ;function_stubs.c: 136: printf("Played Beta blade swing sound.\n\r");
  4060  0138  3094               	movlw	low (STR_2| (0+32768))
  4061  0139  00A0               	movwf	printf@f
  4062  013A  308A               	movlw	high (STR_2| (0+32768))
  4063  013B  00A1               	movwf	printf@f+1
  4064  013C  3181  21FE         	fcall	_printf
  4065                           
  4066                           ;function_stubs.c: 137: }
  4067  013E  0008               	return
  4068  013F                     l1828:	
  4069                           
  4070                           ;function_stubs.c: 138: else if(sound_selection == 1)
  4071  013F  0020               	movlb	0	; select bank0
  4072  0140  032E               	decf	play_sound@sound_selection,w
  4073  0141  1D03               	btfss	3,2
  4074  0142  0008               	return
  4075                           
  4076                           ;function_stubs.c: 139: {
  4077                           ;function_stubs.c: 140: printf("Played Omega blade swing sound.\n\r");
  4078  0143  3072               	movlw	low (STR_3| (0+32768))
  4079  0144  00A0               	movwf	printf@f
  4080  0145  308A               	movlw	high (STR_3| (0+32768))
  4081  0146  00A1               	movwf	printf@f+1
  4082  0147  3181  21FE         	fcall	_printf
  4083  0149  0008               	return
  4084  014A                     __end_of_play_sound:	
  4085                           
  4086                           	psect	text3
  4087  02B5                     __ptext3:	
  4088 ;; *************** function _output_ir *****************
  4089 ;; Defined at:
  4090 ;;		line 47 in file "../../source/function_stubs.c"
  4091 ;; Parameters:    Size  Location     Type
  4092 ;;  pkt_type        1    wreg     unsigned char 
  4093 ;;  amount          1    0[COMMON] unsigned char 
  4094 ;; Auto vars:     Size  Location     Type
  4095 ;;  pkt_type        1    9[COMMON] unsigned char 
  4096 ;;  i               2    7[COMMON] int 
  4097 ;;  i               2    5[COMMON] int 
  4098 ;;  i               2    3[COMMON] int 
  4099 ;; Return value:  Size  Location     Type
  4100 ;;		None               void
  4101 ;; Registers used:
  4102 ;;		wreg, status,2, status,0
  4103 ;; Tracked objects:
  4104 ;;		On entry : 0/0
  4105 ;;		On exit  : 0/0
  4106 ;;		Unchanged: 0/0
  4107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4108 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4109 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4110 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4111 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4112 ;;Total ram usage:       10 bytes
  4113 ;; Hardware stack levels used:    1
  4114 ;; This function calls:
  4115 ;;		Nothing
  4116 ;; This function is called by:
  4117 ;;		_main
  4118 ;; This function uses a non-reentrant model
  4119 ;;
  4120                           
  4121                           
  4122                           ;psect for function _output_ir
  4123  02B5                     _output_ir:	
  4124                           
  4125                           ;incstack = 0
  4126                           ; Regs used in _output_ir: [wreg+status,2+status,0]
  4127                           ;output_ir@pkt_type stored from wreg
  4128  02B5  00F9               	movwf	output_ir@pkt_type
  4129                           
  4130                           ;function_stubs.c: 50: if(pkt_type == 0)
  4131  02B6  0879               	movf	output_ir@pkt_type,w
  4132  02B7  1D03               	btfss	3,2
  4133  02B8  2B18               	goto	l1786
  4134                           
  4135                           ;function_stubs.c: 51: {
  4136                           ;function_stubs.c: 52: for(int i = 0;i < amount;i++){
  4137  02B9  01F3               	clrf	output_ir@i
  4138  02BA  01F4               	clrf	output_ir@i+1
  4139  02BB                     l77:	
  4140  02BB  0874               	movf	output_ir@i+1,w
  4141  02BC  3A80               	xorlw	128
  4142  02BD  00F1               	movwf	??_output_ir
  4143  02BE  3080               	movlw	128
  4144  02BF  0271               	subwf	??_output_ir,w
  4145  02C0  1D03               	skipz
  4146  02C1  2AC4               	goto	u1325
  4147  02C2  0870               	movf	output_ir@amount,w
  4148  02C3  0273               	subwf	output_ir@i,w
  4149  02C4                     u1325:	
  4150  02C4  1803               	btfsc	3,0
  4151  02C5  0008               	return
  4152                           
  4153                           ;function_stubs.c: 55: P1MDLBIT = 1;
  4154  02C6  003D               	movlb	29	; select bank29
  4155  02C7  1692               	bsf	18,5	;volatile
  4156                           
  4157                           ;function_stubs.c: 56: _delay((unsigned long)((178)*(32000000/4000000.0)));
  4158  02C8  30ED               	movlw	237
  4159  02C9  00F1               	movwf	??_output_ir
  4160  02CA                     u2197:	
  4161  02CA  3200               	nop2
  4162  02CB  0000               	nop
  4163  02CC  0BF1               	decfsz	??_output_ir,f
  4164  02CD  2ACA               	goto	u2197
  4165  02CE  0000               	nop
  4166                           
  4167                           ;function_stubs.c: 57: P1MDLBIT = 0;
  4168  02CF  003D               	movlb	29	; select bank29
  4169  02D0  1292               	bcf	18,5	;volatile
  4170                           
  4171                           ;function_stubs.c: 58: _delay((unsigned long)((2678-178)*(32000000/4000000.0)));
  4172  02D1  301A               	movlw	26
  4173  02D2  00F2               	movwf	??_output_ir+1
  4174  02D3  30F8               	movlw	248
  4175  02D4  00F1               	movwf	??_output_ir
  4176  02D5                     u2207:	
  4177  02D5  0BF1               	decfsz	??_output_ir,f
  4178  02D6  2AD5               	goto	u2207
  4179  02D7  0BF2               	decfsz	??_output_ir+1,f
  4180  02D8  2AD5               	goto	u2207
  4181  02D9  0000               	nop
  4182                           
  4183                           ;function_stubs.c: 61: P1MDLBIT = 1;
  4184  02DA  003D               	movlb	29	; select bank29
  4185  02DB  1692               	bsf	18,5	;volatile
  4186                           
  4187                           ;function_stubs.c: 62: _delay((unsigned long)((357)*(32000000/4000000.0)));
  4188  02DC  3004               	movlw	4
  4189  02DD  00F2               	movwf	??_output_ir+1
  4190  02DE  30B4               	movlw	180
  4191  02DF  00F1               	movwf	??_output_ir
  4192  02E0                     u2217:	
  4193  02E0  0BF1               	decfsz	??_output_ir,f
  4194  02E1  2AE0               	goto	u2217
  4195  02E2  0BF2               	decfsz	??_output_ir+1,f
  4196  02E3  2AE0               	goto	u2217
  4197  02E4  0000               	nop
  4198                           
  4199                           ;function_stubs.c: 63: P1MDLBIT = 0;
  4200  02E5  003D               	movlb	29	; select bank29
  4201  02E6  1292               	bcf	18,5	;volatile
  4202                           
  4203                           ;function_stubs.c: 64: _delay((unsigned long)((2678-357)*(32000000/4000000.0)));
  4204  02E7  3019               	movlw	25
  4205  02E8  00F2               	movwf	??_output_ir+1
  4206  02E9  301B               	movlw	27
  4207  02EA  00F1               	movwf	??_output_ir
  4208  02EB                     u2227:	
  4209  02EB  0BF1               	decfsz	??_output_ir,f
  4210  02EC  2AEB               	goto	u2227
  4211  02ED  0BF2               	decfsz	??_output_ir+1,f
  4212  02EE  2AEB               	goto	u2227
  4213  02EF  3200               	nop2
  4214                           
  4215                           ;function_stubs.c: 65: P1MDLBIT = 1;
  4216  02F0  003D               	movlb	29	; select bank29
  4217  02F1  1692               	bsf	18,5	;volatile
  4218                           
  4219                           ;function_stubs.c: 66: _delay((unsigned long)((357)*(32000000/4000000.0)));
  4220  02F2  3004               	movlw	4
  4221  02F3  00F2               	movwf	??_output_ir+1
  4222  02F4  30B4               	movlw	180
  4223  02F5  00F1               	movwf	??_output_ir
  4224  02F6                     u2237:	
  4225  02F6  0BF1               	decfsz	??_output_ir,f
  4226  02F7  2AF6               	goto	u2237
  4227  02F8  0BF2               	decfsz	??_output_ir+1,f
  4228  02F9  2AF6               	goto	u2237
  4229  02FA  0000               	nop
  4230                           
  4231                           ;function_stubs.c: 67: P1MDLBIT = 0;
  4232  02FB  003D               	movlb	29	; select bank29
  4233  02FC  1292               	bcf	18,5	;volatile
  4234                           
  4235                           ;function_stubs.c: 68: _delay((unsigned long)((2678-357)*(32000000/4000000.0)));
  4236  02FD  3019               	movlw	25
  4237  02FE  00F2               	movwf	??_output_ir+1
  4238  02FF  301B               	movlw	27
  4239  0300  00F1               	movwf	??_output_ir
  4240  0301                     u2247:	
  4241  0301  0BF1               	decfsz	??_output_ir,f
  4242  0302  2B01               	goto	u2247
  4243  0303  0BF2               	decfsz	??_output_ir+1,f
  4244  0304  2B01               	goto	u2247
  4245  0305  3200               	nop2
  4246                           
  4247                           ;function_stubs.c: 71: P1MDLBIT = 1;
  4248  0306  003D               	movlb	29	; select bank29
  4249  0307  1692               	bsf	18,5	;volatile
  4250                           
  4251                           ;function_stubs.c: 72: _delay((unsigned long)((2678)*(32000000/4000000.0)));
  4252  0308  301C               	movlw	28
  4253  0309  00F2               	movwf	??_output_ir+1
  4254  030A  30D1               	movlw	209
  4255  030B  00F1               	movwf	??_output_ir
  4256  030C                     u2257:	
  4257  030C  0BF1               	decfsz	??_output_ir,f
  4258  030D  2B0C               	goto	u2257
  4259  030E  0BF2               	decfsz	??_output_ir+1,f
  4260  030F  2B0C               	goto	u2257
  4261  0310  3200               	nop2
  4262                           
  4263                           ;function_stubs.c: 73: P1MDLBIT = 0;
  4264  0311  003D               	movlb	29	; select bank29
  4265  0312  1292               	bcf	18,5	;volatile
  4266  0313  3001               	movlw	1
  4267  0314  07F3               	addwf	output_ir@i,f
  4268  0315  3000               	movlw	0
  4269  0316  3DF4               	addwfc	output_ir@i+1,f
  4270  0317  2ABB               	goto	l77
  4271  0318                     l1786:	
  4272                           ;function_stubs.c: 74: }
  4273                           ;function_stubs.c: 76: }
  4274                           
  4275                           
  4276                           ;function_stubs.c: 77: else if(pkt_type == 1)
  4277  0318  0379               	decf	output_ir@pkt_type,w
  4278  0319  1D03               	btfss	3,2
  4279  031A  2B7A               	goto	l1806
  4280                           
  4281                           ;function_stubs.c: 78: {
  4282                           ;function_stubs.c: 79: for(int i = 0;i < amount;i++){
  4283  031B  01F5               	clrf	output_ir@i_72
  4284  031C  01F6               	clrf	output_ir@i_72+1
  4285  031D                     l82:	
  4286  031D  0876               	movf	output_ir@i_72+1,w
  4287  031E  3A80               	xorlw	128
  4288  031F  00F1               	movwf	??_output_ir
  4289  0320  3080               	movlw	128
  4290  0321  0271               	subwf	??_output_ir,w
  4291  0322  1D03               	skipz
  4292  0323  2B26               	goto	u1345
  4293  0324  0870               	movf	output_ir@amount,w
  4294  0325  0275               	subwf	output_ir@i_72,w
  4295  0326                     u1345:	
  4296  0326  1803               	btfsc	3,0
  4297  0327  0008               	return
  4298                           
  4299                           ;function_stubs.c: 82: P1MDLBIT = 1;
  4300  0328  003D               	movlb	29	; select bank29
  4301  0329  1692               	bsf	18,5	;volatile
  4302                           
  4303                           ;function_stubs.c: 83: _delay((unsigned long)((178)*(32000000/4000000.0)));
  4304  032A  30ED               	movlw	237
  4305  032B  00F1               	movwf	??_output_ir
  4306  032C                     u2267:	
  4307  032C  3200               	nop2
  4308  032D  0000               	nop
  4309  032E  0BF1               	decfsz	??_output_ir,f
  4310  032F  2B2C               	goto	u2267
  4311  0330  0000               	nop
  4312                           
  4313                           ;function_stubs.c: 84: P1MDLBIT = 0;
  4314  0331  003D               	movlb	29	; select bank29
  4315  0332  1292               	bcf	18,5	;volatile
  4316                           
  4317                           ;function_stubs.c: 85: _delay((unsigned long)((2678-178)*(32000000/4000000.0)));
  4318  0333  301A               	movlw	26
  4319  0334  00F2               	movwf	??_output_ir+1
  4320  0335  30F8               	movlw	248
  4321  0336  00F1               	movwf	??_output_ir
  4322  0337                     u2277:	
  4323  0337  0BF1               	decfsz	??_output_ir,f
  4324  0338  2B37               	goto	u2277
  4325  0339  0BF2               	decfsz	??_output_ir+1,f
  4326  033A  2B37               	goto	u2277
  4327  033B  0000               	nop
  4328                           
  4329                           ;function_stubs.c: 88: P1MDLBIT = 1;
  4330  033C  003D               	movlb	29	; select bank29
  4331  033D  1692               	bsf	18,5	;volatile
  4332                           
  4333                           ;function_stubs.c: 89: _delay((unsigned long)((535)*(32000000/4000000.0)));
  4334  033E  3006               	movlw	6
  4335  033F  00F2               	movwf	??_output_ir+1
  4336  0340  308D               	movlw	141
  4337  0341  00F1               	movwf	??_output_ir
  4338  0342                     u2287:	
  4339  0342  0BF1               	decfsz	??_output_ir,f
  4340  0343  2B42               	goto	u2287
  4341  0344  0BF2               	decfsz	??_output_ir+1,f
  4342  0345  2B42               	goto	u2287
  4343  0346  3200               	nop2
  4344                           
  4345                           ;function_stubs.c: 90: P1MDLBIT = 0;
  4346  0347  003D               	movlb	29	; select bank29
  4347  0348  1292               	bcf	18,5	;volatile
  4348                           
  4349                           ;function_stubs.c: 91: _delay((unsigned long)((2678-535)*(32000000/4000000.0)));
  4350  0349  3017               	movlw	23
  4351  034A  00F2               	movwf	??_output_ir+1
  4352  034B  3042               	movlw	66
  4353  034C  00F1               	movwf	??_output_ir
  4354  034D                     u2297:	
  4355  034D  0BF1               	decfsz	??_output_ir,f
  4356  034E  2B4D               	goto	u2297
  4357  034F  0BF2               	decfsz	??_output_ir+1,f
  4358  0350  2B4D               	goto	u2297
  4359  0351  0000               	nop
  4360                           
  4361                           ;function_stubs.c: 92: P1MDLBIT = 1;
  4362  0352  003D               	movlb	29	; select bank29
  4363  0353  1692               	bsf	18,5	;volatile
  4364                           
  4365                           ;function_stubs.c: 93: _delay((unsigned long)((535)*(32000000/4000000.0)));
  4366  0354  3006               	movlw	6
  4367  0355  00F2               	movwf	??_output_ir+1
  4368  0356  308D               	movlw	141
  4369  0357  00F1               	movwf	??_output_ir
  4370  0358                     u2307:	
  4371  0358  0BF1               	decfsz	??_output_ir,f
  4372  0359  2B58               	goto	u2307
  4373  035A  0BF2               	decfsz	??_output_ir+1,f
  4374  035B  2B58               	goto	u2307
  4375  035C  3200               	nop2
  4376                           
  4377                           ;function_stubs.c: 94: P1MDLBIT = 0;
  4378  035D  003D               	movlb	29	; select bank29
  4379  035E  1292               	bcf	18,5	;volatile
  4380                           
  4381                           ;function_stubs.c: 95: _delay((unsigned long)((2678-535)*(32000000/4000000.0)));
  4382  035F  3017               	movlw	23
  4383  0360  00F2               	movwf	??_output_ir+1
  4384  0361  3042               	movlw	66
  4385  0362  00F1               	movwf	??_output_ir
  4386  0363                     u2317:	
  4387  0363  0BF1               	decfsz	??_output_ir,f
  4388  0364  2B63               	goto	u2317
  4389  0365  0BF2               	decfsz	??_output_ir+1,f
  4390  0366  2B63               	goto	u2317
  4391  0367  0000               	nop
  4392                           
  4393                           ;function_stubs.c: 98: P1MDLBIT = 1;
  4394  0368  003D               	movlb	29	; select bank29
  4395  0369  1692               	bsf	18,5	;volatile
  4396                           
  4397                           ;function_stubs.c: 99: _delay((unsigned long)((2678)*(32000000/4000000.0)));
  4398  036A  301C               	movlw	28
  4399  036B  00F2               	movwf	??_output_ir+1
  4400  036C  30D1               	movlw	209
  4401  036D  00F1               	movwf	??_output_ir
  4402  036E                     u2327:	
  4403  036E  0BF1               	decfsz	??_output_ir,f
  4404  036F  2B6E               	goto	u2327
  4405  0370  0BF2               	decfsz	??_output_ir+1,f
  4406  0371  2B6E               	goto	u2327
  4407  0372  3200               	nop2
  4408                           
  4409                           ;function_stubs.c: 100: P1MDLBIT = 0;
  4410  0373  003D               	movlb	29	; select bank29
  4411  0374  1292               	bcf	18,5	;volatile
  4412  0375  3001               	movlw	1
  4413  0376  07F5               	addwf	output_ir@i_72,f
  4414  0377  3000               	movlw	0
  4415  0378  3DF6               	addwfc	output_ir@i_72+1,f
  4416  0379  2B1D               	goto	l82
  4417  037A                     l1806:	
  4418                           ;function_stubs.c: 101: }
  4419                           ;function_stubs.c: 102: }
  4420                           
  4421                           
  4422                           ;function_stubs.c: 103: else
  4423                           ;function_stubs.c: 104: {
  4424                           ;function_stubs.c: 105: for(int i = 0;i < amount;i++){
  4425  037A  01F7               	clrf	output_ir@i_73
  4426  037B  01F8               	clrf	output_ir@i_73+1
  4427  037C                     l86:	
  4428  037C  0878               	movf	output_ir@i_73+1,w
  4429  037D  3A80               	xorlw	128
  4430  037E  00F1               	movwf	??_output_ir
  4431  037F  3080               	movlw	128
  4432  0380  0271               	subwf	??_output_ir,w
  4433  0381  1D03               	skipz
  4434  0382  2B85               	goto	u1355
  4435  0383  0870               	movf	output_ir@amount,w
  4436  0384  0277               	subwf	output_ir@i_73,w
  4437  0385                     u1355:	
  4438  0385  1803               	btfsc	3,0
  4439  0386  0008               	return
  4440                           
  4441                           ;function_stubs.c: 108: P1MDLBIT = 1;
  4442  0387  003D               	movlb	29	; select bank29
  4443  0388  1692               	bsf	18,5	;volatile
  4444                           
  4445                           ;function_stubs.c: 109: _delay((unsigned long)((178)*(32000000/4000000.0)));
  4446  0389  30ED               	movlw	237
  4447  038A  00F1               	movwf	??_output_ir
  4448  038B                     u2337:	
  4449  038B  3200               	nop2
  4450  038C  0000               	nop
  4451  038D  0BF1               	decfsz	??_output_ir,f
  4452  038E  2B8B               	goto	u2337
  4453  038F  0000               	nop
  4454                           
  4455                           ;function_stubs.c: 110: P1MDLBIT = 0;
  4456  0390  003D               	movlb	29	; select bank29
  4457  0391  1292               	bcf	18,5	;volatile
  4458                           
  4459                           ;function_stubs.c: 111: _delay((unsigned long)((2678-178)*(32000000/4000000.0)));
  4460  0392  301A               	movlw	26
  4461  0393  00F2               	movwf	??_output_ir+1
  4462  0394  30F8               	movlw	248
  4463  0395  00F1               	movwf	??_output_ir
  4464  0396                     u2347:	
  4465  0396  0BF1               	decfsz	??_output_ir,f
  4466  0397  2B96               	goto	u2347
  4467  0398  0BF2               	decfsz	??_output_ir+1,f
  4468  0399  2B96               	goto	u2347
  4469  039A  0000               	nop
  4470                           
  4471                           ;function_stubs.c: 114: P1MDLBIT = 1;
  4472  039B  003D               	movlb	29	; select bank29
  4473  039C  1692               	bsf	18,5	;volatile
  4474                           
  4475                           ;function_stubs.c: 115: _delay((unsigned long)((714)*(32000000/4000000.0)));
  4476  039D  3008               	movlw	8
  4477  039E  00F2               	movwf	??_output_ir+1
  4478  039F  3069               	movlw	105
  4479  03A0  00F1               	movwf	??_output_ir
  4480  03A1                     u2357:	
  4481  03A1  0BF1               	decfsz	??_output_ir,f
  4482  03A2  2BA1               	goto	u2357
  4483  03A3  0BF2               	decfsz	??_output_ir+1,f
  4484  03A4  2BA1               	goto	u2357
  4485  03A5  3200               	nop2
  4486                           
  4487                           ;function_stubs.c: 116: P1MDLBIT = 0;
  4488  03A6  003D               	movlb	29	; select bank29
  4489  03A7  1292               	bcf	18,5	;volatile
  4490                           
  4491                           ;function_stubs.c: 117: _delay((unsigned long)((2678-714)*(32000000/4000000.0)));
  4492  03A8  3015               	movlw	21
  4493  03A9  00F2               	movwf	??_output_ir+1
  4494  03AA  3066               	movlw	102
  4495  03AB  00F1               	movwf	??_output_ir
  4496  03AC                     u2367:	
  4497  03AC  0BF1               	decfsz	??_output_ir,f
  4498  03AD  2BAC               	goto	u2367
  4499  03AE  0BF2               	decfsz	??_output_ir+1,f
  4500  03AF  2BAC               	goto	u2367
  4501  03B0  0000               	nop
  4502                           
  4503                           ;function_stubs.c: 118: P1MDLBIT = 1;
  4504  03B1  003D               	movlb	29	; select bank29
  4505  03B2  1692               	bsf	18,5	;volatile
  4506                           
  4507                           ;function_stubs.c: 119: _delay((unsigned long)((714)*(32000000/4000000.0)));
  4508  03B3  3008               	movlw	8
  4509  03B4  00F2               	movwf	??_output_ir+1
  4510  03B5  3069               	movlw	105
  4511  03B6  00F1               	movwf	??_output_ir
  4512  03B7                     u2377:	
  4513  03B7  0BF1               	decfsz	??_output_ir,f
  4514  03B8  2BB7               	goto	u2377
  4515  03B9  0BF2               	decfsz	??_output_ir+1,f
  4516  03BA  2BB7               	goto	u2377
  4517  03BB  3200               	nop2
  4518                           
  4519                           ;function_stubs.c: 120: P1MDLBIT = 0;
  4520  03BC  003D               	movlb	29	; select bank29
  4521  03BD  1292               	bcf	18,5	;volatile
  4522                           
  4523                           ;function_stubs.c: 121: _delay((unsigned long)((2678-714)*(32000000/4000000.0)));
  4524  03BE  3015               	movlw	21
  4525  03BF  00F2               	movwf	??_output_ir+1
  4526  03C0  3066               	movlw	102
  4527  03C1  00F1               	movwf	??_output_ir
  4528  03C2                     u2387:	
  4529  03C2  0BF1               	decfsz	??_output_ir,f
  4530  03C3  2BC2               	goto	u2387
  4531  03C4  0BF2               	decfsz	??_output_ir+1,f
  4532  03C5  2BC2               	goto	u2387
  4533  03C6  0000               	nop
  4534                           
  4535                           ;function_stubs.c: 124: P1MDLBIT = 1;
  4536  03C7  003D               	movlb	29	; select bank29
  4537  03C8  1692               	bsf	18,5	;volatile
  4538                           
  4539                           ;function_stubs.c: 125: _delay((unsigned long)((2678)*(32000000/4000000.0)));
  4540  03C9  301C               	movlw	28
  4541  03CA  00F2               	movwf	??_output_ir+1
  4542  03CB  30D1               	movlw	209
  4543  03CC  00F1               	movwf	??_output_ir
  4544  03CD                     u2397:	
  4545  03CD  0BF1               	decfsz	??_output_ir,f
  4546  03CE  2BCD               	goto	u2397
  4547  03CF  0BF2               	decfsz	??_output_ir+1,f
  4548  03D0  2BCD               	goto	u2397
  4549  03D1  3200               	nop2
  4550                           
  4551                           ;function_stubs.c: 126: P1MDLBIT = 0;
  4552  03D2  003D               	movlb	29	; select bank29
  4553  03D3  1292               	bcf	18,5	;volatile
  4554  03D4  3001               	movlw	1
  4555  03D5  07F7               	addwf	output_ir@i_73,f
  4556  03D6  3000               	movlw	0
  4557  03D7  3DF8               	addwfc	output_ir@i_73+1,f
  4558  03D8  2B7C               	goto	l86
  4559  03D9                     __end_of_output_ir:	
  4560                           
  4561                           	psect	text4
  4562  010A                     __ptext4:	
  4563 ;; *************** function _init_uart *****************
  4564 ;; Defined at:
  4565 ;;		line 11 in file "../../source/uart.c"
  4566 ;; Parameters:    Size  Location     Type
  4567 ;;		None
  4568 ;; Auto vars:     Size  Location     Type
  4569 ;;		None
  4570 ;; Return value:  Size  Location     Type
  4571 ;;		None               void
  4572 ;; Registers used:
  4573 ;;		wreg, status,2, status,0
  4574 ;; Tracked objects:
  4575 ;;		On entry : 0/0
  4576 ;;		On exit  : 0/0
  4577 ;;		Unchanged: 0/0
  4578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4581 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4582 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4583 ;;Total ram usage:        1 bytes
  4584 ;; Hardware stack levels used:    1
  4585 ;; This function calls:
  4586 ;;		Nothing
  4587 ;; This function is called by:
  4588 ;;		_main
  4589 ;; This function uses a non-reentrant model
  4590 ;;
  4591                           
  4592                           
  4593                           ;psect for function _init_uart
  4594  010A                     _init_uart:	
  4595                           
  4596                           ;uart.c: 14: TRISC &= 10111111;
  4597                           
  4598                           ;incstack = 0
  4599                           ; Regs used in _init_uart: [wreg+status,2+status,0]
  4600  010A  3087               	movlw	135
  4601  010B  00F0               	movwf	??_init_uart
  4602  010C  0870               	movf	??_init_uart,w
  4603  010D  0021               	movlb	1	; select bank1
  4604  010E  058E               	andwf	14,f	;volatile
  4605                           
  4606                           ;uart.c: 17: TRISC |= 10000000;
  4607  010F  178E               	bsf	14,7	;volatile
  4608                           
  4609                           ;uart.c: 20: SPBRG = 51;
  4610  0110  3033               	movlw	51
  4611  0111  0023               	movlb	3	; select bank3
  4612  0112  009B               	movwf	27	;volatile
  4613                           
  4614                           ;uart.c: 21: BRGH = 0;
  4615  0113  111E               	bcf	30,2	;volatile
  4616                           
  4617                           ;uart.c: 22: BRG16 = 0;
  4618  0114  119F               	bcf	31,3	;volatile
  4619                           
  4620                           ;uart.c: 27: SYNC = 0;
  4621  0115  121E               	bcf	30,4	;volatile
  4622                           
  4623                           ;uart.c: 28: SPEN = 1;
  4624  0116  179D               	bsf	29,7	;volatile
  4625                           
  4626                           ;uart.c: 29: TXEN = 1;
  4627  0117  169E               	bsf	30,5	;volatile
  4628                           
  4629                           ;uart.c: 30: CREN = 1;
  4630  0118  161D               	bsf	29,4	;volatile
  4631                           
  4632                           ;uart.c: 31: RCIE = 1;
  4633  0119  0021               	movlb	1	; select bank1
  4634  011A  1691               	bsf	17,5	;volatile
  4635  011B  0008               	return
  4636  011C                     __end_of_init_uart:	
  4637                           
  4638                           	psect	text5
  4639  00F1                     __ptext5:	
  4640 ;; *************** function _init_pic *****************
  4641 ;; Defined at:
  4642 ;;		line 462 in file "../../source/main.c"
  4643 ;; Parameters:    Size  Location     Type
  4644 ;;		None
  4645 ;; Auto vars:     Size  Location     Type
  4646 ;;		None
  4647 ;; Return value:  Size  Location     Type
  4648 ;;		None               void
  4649 ;; Registers used:
  4650 ;;		wreg, status,2, status,0
  4651 ;; Tracked objects:
  4652 ;;		On entry : 0/0
  4653 ;;		On exit  : 0/0
  4654 ;;		Unchanged: 0/0
  4655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4658 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4659 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4660 ;;Total ram usage:        1 bytes
  4661 ;; Hardware stack levels used:    1
  4662 ;; This function calls:
  4663 ;;		Nothing
  4664 ;; This function is called by:
  4665 ;;		_main
  4666 ;; This function uses a non-reentrant model
  4667 ;;
  4668                           
  4669                           
  4670                           ;psect for function _init_pic
  4671  00F1                     _init_pic:	
  4672                           
  4673                           ;main.c: 465: OSCCON |= 0b11111000;
  4674                           
  4675                           ;incstack = 0
  4676                           ; Regs used in _init_pic: [wreg+status,2+status,0]
  4677  00F1  30F8               	movlw	248
  4678  00F2  00F0               	movwf	??_init_pic
  4679  00F3  0870               	movf	??_init_pic,w
  4680  00F4  0021               	movlb	1	; select bank1
  4681  00F5  0499               	iorwf	25,f	;volatile
  4682                           
  4683                           ;main.c: 468: TRISB &= 0b11110111;
  4684  00F6  30F7               	movlw	247
  4685  00F7  00F0               	movwf	??_init_pic
  4686  00F8  0870               	movf	??_init_pic,w
  4687  00F9  058D               	andwf	13,f	;volatile
  4688                           
  4689                           ;main.c: 471: GIE = 1;
  4690  00FA  178B               	bsf	11,7	;volatile
  4691  00FB  0008               	return
  4692  00FC                     __end_of_init_pic:	
  4693                           
  4694                           	psect	text6
  4695  00E9                     __ptext6:	
  4696 ;; *************** function _init_leds *****************
  4697 ;; Defined at:
  4698 ;;		line 176 in file "../../source/function_stubs.c"
  4699 ;; Parameters:    Size  Location     Type
  4700 ;;		None
  4701 ;; Auto vars:     Size  Location     Type
  4702 ;;		None
  4703 ;; Return value:  Size  Location     Type
  4704 ;;		None               void
  4705 ;; Registers used:
  4706 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4707 ;; Tracked objects:
  4708 ;;		On entry : 0/0
  4709 ;;		On exit  : 0/0
  4710 ;;		Unchanged: 0/0
  4711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4716 ;;Total ram usage:        0 bytes
  4717 ;; Hardware stack levels used:    1
  4718 ;; Hardware stack levels required when called:    2
  4719 ;; This function calls:
  4720 ;;		_printf
  4721 ;; This function is called by:
  4722 ;;		_main
  4723 ;; This function uses a non-reentrant model
  4724 ;;
  4725                           
  4726                           
  4727                           ;psect for function _init_leds
  4728  00E9                     _init_leds:	
  4729                           
  4730                           ;function_stubs.c: 178: printf("Initialized LEDs.\n\r");
  4731                           
  4732                           ;incstack = 0
  4733                           ; Regs used in _init_leds: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4734  00E9  308B               	movlw	low (STR_5| (0+32768))
  4735  00EA  0020               	movlb	0	; select bank0
  4736  00EB  00A0               	movwf	printf@f
  4737  00EC  308B               	movlw	high (STR_5| (0+32768))
  4738  00ED  00A1               	movwf	printf@f+1
  4739  00EE  3181  21FE         	fcall	_printf
  4740  00F0  0008               	return
  4741  00F1                     __end_of_init_leds:	
  4742                           
  4743                           	psect	text7
  4744  00E1                     __ptext7:	
  4745 ;; *************** function _init_isr *****************
  4746 ;; Defined at:
  4747 ;;		line 193 in file "../../source/function_stubs.c"
  4748 ;; Parameters:    Size  Location     Type
  4749 ;;		None
  4750 ;; Auto vars:     Size  Location     Type
  4751 ;;		None
  4752 ;; Return value:  Size  Location     Type
  4753 ;;		None               void
  4754 ;; Registers used:
  4755 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4756 ;; Tracked objects:
  4757 ;;		On entry : 0/0
  4758 ;;		On exit  : 0/0
  4759 ;;		Unchanged: 0/0
  4760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4765 ;;Total ram usage:        0 bytes
  4766 ;; Hardware stack levels used:    1
  4767 ;; Hardware stack levels required when called:    2
  4768 ;; This function calls:
  4769 ;;		_printf
  4770 ;; This function is called by:
  4771 ;;		_main
  4772 ;; This function uses a non-reentrant model
  4773 ;;
  4774                           
  4775                           
  4776                           ;psect for function _init_isr
  4777  00E1                     _init_isr:	
  4778                           
  4779                           ;function_stubs.c: 195: printf("Initialized ISR.\n\r");
  4780                           
  4781                           ;incstack = 0
  4782                           ; Regs used in _init_isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4783  00E1  309F               	movlw	low (STR_8| (0+32768))
  4784  00E2  0020               	movlb	0	; select bank0
  4785  00E3  00A0               	movwf	printf@f
  4786  00E4  308B               	movlw	high (STR_8| (0+32768))
  4787  00E5  00A1               	movwf	printf@f+1
  4788  00E6  3181  21FE         	fcall	_printf
  4789  00E8  0008               	return
  4790  00E9                     __end_of_init_isr:	
  4791                           
  4792                           	psect	text8
  4793  01C2                     __ptext8:	
  4794 ;; *************** function _init_ir *****************
  4795 ;; Defined at:
  4796 ;;		line 10 in file "../../source/function_stubs.c"
  4797 ;; Parameters:    Size  Location     Type
  4798 ;;		None
  4799 ;; Auto vars:     Size  Location     Type
  4800 ;;		None
  4801 ;; Return value:  Size  Location     Type
  4802 ;;		None               void
  4803 ;; Registers used:
  4804 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4805 ;; Tracked objects:
  4806 ;;		On entry : 0/0
  4807 ;;		On exit  : 0/0
  4808 ;;		Unchanged: 0/0
  4809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4812 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4813 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4814 ;;Total ram usage:        1 bytes
  4815 ;; Hardware stack levels used:    1
  4816 ;; Hardware stack levels required when called:    2
  4817 ;; This function calls:
  4818 ;;		_printf
  4819 ;; This function is called by:
  4820 ;;		_main
  4821 ;; This function uses a non-reentrant model
  4822 ;;
  4823                           
  4824                           
  4825                           ;psect for function _init_ir
  4826  01C2                     _init_ir:	
  4827                           
  4828                           ;function_stubs.c: 12: printf("Initialized IR send/receive code.\n\r");
  4829                           
  4830                           ;incstack = 0
  4831                           ; Regs used in _init_ir: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4832  01C2  304E               	movlw	low (STR_1| (0+32768))
  4833  01C3  0020               	movlb	0	; select bank0
  4834  01C4  00A0               	movwf	printf@f
  4835  01C5  308A               	movlw	high (STR_1| (0+32768))
  4836  01C6  00A1               	movwf	printf@f+1
  4837  01C7  3181  21FE  3181   	fcall	_printf
  4838                           
  4839                           ;function_stubs.c: 13: PSMC1CON = 0x00;
  4840  01CA  003D               	movlb	29	; select bank29
  4841  01CB  0191               	clrf	17	;volatile
  4842                           
  4843                           ;function_stubs.c: 14: PSMC1MDL = 0x80;
  4844  01CC  3080               	movlw	128
  4845  01CD  0092               	movwf	18	;volatile
  4846                           
  4847                           ;function_stubs.c: 15: PSMC1SYNC = 0x00;
  4848  01CE  0193               	clrf	19	;volatile
  4849                           
  4850                           ;function_stubs.c: 16: PSMC1CLK = 0x01;
  4851  01CF  3001               	movlw	1
  4852  01D0  0094               	movwf	20	;volatile
  4853                           
  4854                           ;function_stubs.c: 17: PSMC1POL = 0x00;
  4855  01D1  0196               	clrf	22	;volatile
  4856                           
  4857                           ;function_stubs.c: 18: PSMC1BLNK = 0x00;
  4858  01D2  0197               	clrf	23	;volatile
  4859                           
  4860                           ;function_stubs.c: 19: PSMC1REBS = 0x80;
  4861  01D3  3080               	movlw	128
  4862  01D4  0098               	movwf	24	;volatile
  4863                           
  4864                           ;function_stubs.c: 20: PSMC1FEBS = 0x80;
  4865  01D5  3080               	movlw	128
  4866  01D6  0099               	movwf	25	;volatile
  4867                           
  4868                           ;function_stubs.c: 21: PSMC1PHS = 0x01;
  4869  01D7  3001               	movlw	1
  4870  01D8  009A               	movwf	26	;volatile
  4871                           
  4872                           ;function_stubs.c: 22: PSMC1DCS = 0x01;
  4873  01D9  3001               	movlw	1
  4874  01DA  009B               	movwf	27	;volatile
  4875                           
  4876                           ;function_stubs.c: 23: PSMC1PRS = 0x01;
  4877  01DB  3001               	movlw	1
  4878  01DC  009C               	movwf	28	;volatile
  4879                           
  4880                           ;function_stubs.c: 24: PSMC1ASDC = 0x00;
  4881  01DD  019D               	clrf	29	;volatile
  4882                           
  4883                           ;function_stubs.c: 25: PSMC1ASDL = 0x10;
  4884  01DE  3010               	movlw	16
  4885  01DF  009E               	movwf	30	;volatile
  4886                           
  4887                           ;function_stubs.c: 26: PSMC1ASDS = 0x00;
  4888  01E0  019F               	clrf	31	;volatile
  4889                           
  4890                           ;function_stubs.c: 27: PSMC1PHH = 0x00;
  4891  01E1  01A2               	clrf	34	;volatile
  4892                           
  4893                           ;function_stubs.c: 28: PSMC1PHL = 0x00;
  4894  01E2  01A1               	clrf	33	;volatile
  4895                           
  4896                           ;function_stubs.c: 29: PSMC1DCH = 0x02;
  4897  01E3  3002               	movlw	2
  4898  01E4  00A4               	movwf	36	;volatile
  4899                           
  4900                           ;function_stubs.c: 30: PSMC1DCL = 0x30;
  4901  01E5  3030               	movlw	48
  4902  01E6  00A3               	movwf	35	;volatile
  4903                           
  4904                           ;function_stubs.c: 31: PSMC1PRH = 0x04;
  4905  01E7  3004               	movlw	4
  4906  01E8  00A6               	movwf	38	;volatile
  4907                           
  4908                           ;function_stubs.c: 32: PSMC1PRL = 0x76;
  4909  01E9  3076               	movlw	118
  4910  01EA  00A5               	movwf	37	;volatile
  4911                           
  4912                           ;function_stubs.c: 33: PSMC1DBR = 0x00;
  4913  01EB  01A9               	clrf	41	;volatile
  4914                           
  4915                           ;function_stubs.c: 34: PSMC1DBF = 0x00;
  4916  01EC  01AA               	clrf	42	;volatile
  4917                           
  4918                           ;function_stubs.c: 35: PSMC1FFA = 0x00;
  4919  01ED  01AD               	clrf	45	;volatile
  4920                           
  4921                           ;function_stubs.c: 36: PSMC1BLKR = 0x00;
  4922  01EE  01AB               	clrf	43	;volatile
  4923                           
  4924                           ;function_stubs.c: 37: PSMC1BLKF = 0x00;
  4925  01EF  01AC               	clrf	44	;volatile
  4926                           
  4927                           ;function_stubs.c: 38: PSMC1STR0 = 0x00;
  4928  01F0  01AE               	clrf	46	;volatile
  4929                           
  4930                           ;function_stubs.c: 39: PSMC1STR1 = 0x00;
  4931  01F1  01AF               	clrf	47	;volatile
  4932                           
  4933                           ;function_stubs.c: 40: PSMC1INT = 0x00;
  4934  01F2  01A0               	clrf	32	;volatile
  4935                           
  4936                           ;function_stubs.c: 41: PSMC1OEN = 0x00;
  4937  01F3  0195               	clrf	21	;volatile
  4938                           
  4939                           ;function_stubs.c: 42: PSMC1CON = 0x8A;
  4940  01F4  308A               	movlw	138
  4941  01F5  0091               	movwf	17	;volatile
  4942                           
  4943                           ;function_stubs.c: 43: PIE4 &= 0xEE;
  4944  01F6  30EE               	movlw	238
  4945  01F7  0020               	movlb	0	; select bank0
  4946  01F8  00AE               	movwf	??_init_ir
  4947  01F9  082E               	movf	??_init_ir,w
  4948  01FA  0021               	movlb	1	; select bank1
  4949  01FB  0594               	andwf	20,f	;volatile
  4950                           
  4951                           ;function_stubs.c: 44: PIE4 |= 0x00;
  4952  01FC  0814               	movf	20,w	;volatile
  4953  01FD  0008               	return
  4954  01FE                     __end_of_init_ir:	
  4955                           
  4956                           	psect	text9
  4957  00D9                     __ptext9:	
  4958 ;; *************** function _init_accel *****************
  4959 ;; Defined at:
  4960 ;;		line 144 in file "../../source/function_stubs.c"
  4961 ;; Parameters:    Size  Location     Type
  4962 ;;		None
  4963 ;; Auto vars:     Size  Location     Type
  4964 ;;		None
  4965 ;; Return value:  Size  Location     Type
  4966 ;;		None               void
  4967 ;; Registers used:
  4968 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4969 ;; Tracked objects:
  4970 ;;		On entry : 0/0
  4971 ;;		On exit  : 0/0
  4972 ;;		Unchanged: 0/0
  4973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4978 ;;Total ram usage:        0 bytes
  4979 ;; Hardware stack levels used:    1
  4980 ;; Hardware stack levels required when called:    2
  4981 ;; This function calls:
  4982 ;;		_printf
  4983 ;; This function is called by:
  4984 ;;		_main
  4985 ;; This function uses a non-reentrant model
  4986 ;;
  4987                           
  4988                           
  4989                           ;psect for function _init_accel
  4990  00D9                     _init_accel:	
  4991                           
  4992                           ;function_stubs.c: 146: printf("Initialized accelerometer.\n\r");
  4993                           
  4994                           ;incstack = 0
  4995                           ; Regs used in _init_accel: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4996  00D9  30F2               	movlw	low (STR_4| (0+32768))
  4997  00DA  0020               	movlb	0	; select bank0
  4998  00DB  00A0               	movwf	printf@f
  4999  00DC  308A               	movlw	high (STR_4| (0+32768))
  5000  00DD  00A1               	movwf	printf@f+1
  5001  00DE  3181  21FE         	fcall	_printf
  5002  00E0  0008               	return
  5003  00E1                     __end_of_init_accel:	
  5004                           
  5005                           	psect	text10
  5006  00C0                     __ptext10:	
  5007 ;; *************** function _display_health *****************
  5008 ;; Defined at:
  5009 ;;		line 174 in file "../../source/function_stubs.c"
  5010 ;; Parameters:    Size  Location     Type
  5011 ;;  health          1    wreg     unsigned char 
  5012 ;; Auto vars:     Size  Location     Type
  5013 ;;  health          1    0[COMMON] unsigned char 
  5014 ;; Return value:  Size  Location     Type
  5015 ;;		None               void
  5016 ;; Registers used:
  5017 ;;		wreg
  5018 ;; Tracked objects:
  5019 ;;		On entry : 0/0
  5020 ;;		On exit  : 0/0
  5021 ;;		Unchanged: 0/0
  5022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5027 ;;Total ram usage:        0 bytes
  5028 ;; Hardware stack levels used:    1
  5029 ;; This function calls:
  5030 ;;		Nothing
  5031 ;; This function is called by:
  5032 ;;		_main
  5033 ;; This function uses a non-reentrant model
  5034 ;;
  5035                           
  5036                           
  5037                           ;psect for function _display_health
  5038  00C0                     _display_health:	
  5039                           
  5040                           ;incstack = 0
  5041                           ; Regs used in _display_health: [wreg]
  5042  00C0  0008               	return
  5043  00C1                     __end_of_display_health:	
  5044                           
  5045                           	psect	text11
  5046  011C                     __ptext11:	
  5047 ;; *************** function _display_blade_lights *****************
  5048 ;; Defined at:
  5049 ;;		line 181 in file "../../source/function_stubs.c"
  5050 ;; Parameters:    Size  Location     Type
  5051 ;;  mode            1    wreg     unsigned char 
  5052 ;; Auto vars:     Size  Location     Type
  5053 ;;  mode            1   14[BANK0 ] unsigned char 
  5054 ;; Return value:  Size  Location     Type
  5055 ;;		None               void
  5056 ;; Registers used:
  5057 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5058 ;; Tracked objects:
  5059 ;;		On entry : 0/0
  5060 ;;		On exit  : 0/0
  5061 ;;		Unchanged: 0/0
  5062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5064 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5066 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5067 ;;Total ram usage:        1 bytes
  5068 ;; Hardware stack levels used:    1
  5069 ;; Hardware stack levels required when called:    2
  5070 ;; This function calls:
  5071 ;;		_printf
  5072 ;; This function is called by:
  5073 ;;		_main
  5074 ;; This function uses a non-reentrant model
  5075 ;;
  5076                           
  5077                           
  5078                           ;psect for function _display_blade_lights
  5079  011C                     _display_blade_lights:	
  5080                           
  5081                           ;incstack = 0
  5082                           ; Regs used in _display_blade_lights: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5083                           ;display_blade_lights@mode stored from wreg
  5084  011C  0020               	movlb	0	; select bank0
  5085  011D  00AE               	movwf	display_blade_lights@mode
  5086                           
  5087                           ;function_stubs.c: 183: if(mode == 0)
  5088  011E  082E               	movf	display_blade_lights@mode,w
  5089  011F  1D03               	btfss	3,2
  5090  0120  2928               	goto	l1864
  5091                           
  5092                           ;function_stubs.c: 184: {
  5093                           ;function_stubs.c: 185: printf("Displayed individual sword swing light show.\n\r");
  5094  0121  3031               	movlw	low (STR_6| (0+32768))
  5095  0122  00A0               	movwf	printf@f
  5096  0123  3089               	movlw	high (STR_6| (0+32768))
  5097  0124  00A1               	movwf	printf@f+1
  5098  0125  3181  21FE         	fcall	_printf
  5099                           
  5100                           ;function_stubs.c: 186: }
  5101  0127  0008               	return
  5102  0128                     l1864:	
  5103                           
  5104                           ;function_stubs.c: 187: else if(mode == 1)
  5105  0128  0020               	movlb	0	; select bank0
  5106  0129  032E               	decf	display_blade_lights@mode,w
  5107  012A  1D03               	btfss	3,2
  5108  012B  0008               	return
  5109                           
  5110                           ;function_stubs.c: 188: {
  5111                           ;function_stubs.c: 189: printf("Displayed Omega blade swing light show.\n\r");
  5112  012C  30B5               	movlw	low (STR_7| (0+32768))
  5113  012D  00A0               	movwf	printf@f
  5114  012E  3089               	movlw	high (STR_7| (0+32768))
  5115  012F  00A1               	movwf	printf@f+1
  5116  0130  3181  21FE         	fcall	_printf
  5117  0132  0008               	return
  5118  0133                     __end_of_display_blade_lights:	
  5119                           
  5120                           	psect	text12
  5121  01FE                     __ptext12:	
  5122 ;; *************** function _printf *****************
  5123 ;; Defined at:
  5124 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  5125 ;; Parameters:    Size  Location     Type
  5126 ;;  f               2    0[BANK0 ] PTR const unsigned char 
  5127 ;;		 -> STR_49(26), STR_48(49), STR_47(31), STR_46(25), 
  5128 ;;		 -> STR_45(3), STR_44(23), STR_43(22), STR_42(30), 
  5129 ;;		 -> STR_41(42), STR_40(43), STR_39(18), STR_38(23), 
  5130 ;;		 -> STR_37(22), STR_36(30), STR_35(42), STR_34(43), 
  5131 ;;		 -> STR_33(18), STR_32(23), STR_31(22), STR_30(18), 
  5132 ;;		 -> STR_29(23), STR_28(22), STR_27(30), STR_26(42), 
  5133 ;;		 -> STR_25(43), STR_24(18), STR_23(36), STR_22(66), 
  5134 ;;		 -> STR_21(53), STR_20(28), STR_19(4), STR_18(4), 
  5135 ;;		 -> STR_17(38), STR_16(28), STR_15(4), STR_14(4), 
  5136 ;;		 -> STR_13(4), STR_12(4), STR_11(37), STR_10(65), 
  5137 ;;		 -> STR_9(62), STR_8(19), STR_7(42), STR_6(47), 
  5138 ;;		 -> STR_5(20), STR_4(29), STR_3(34), STR_2(33), 
  5139 ;;		 -> STR_1(36), 
  5140 ;; Auto vars:     Size  Location     Type
  5141 ;;  tmpval          4    0        struct .
  5142 ;;  val             2   11[BANK0 ] unsigned int 
  5143 ;;  cp              2    0        PTR const unsigned char 
  5144 ;;  len             2    0        unsigned int 
  5145 ;;  c               1   13[BANK0 ] char 
  5146 ;;  prec            1   10[BANK0 ] char 
  5147 ;;  flag            1    9[BANK0 ] unsigned char 
  5148 ;;  ap              1    8[BANK0 ] PTR void [1]
  5149 ;;		 -> ?_printf(2), 
  5150 ;; Return value:  Size  Location     Type
  5151 ;;                  2    0[BANK0 ] int 
  5152 ;; Registers used:
  5153 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5154 ;; Tracked objects:
  5155 ;;		On entry : 0/0
  5156 ;;		On exit  : 0/0
  5157 ;;		Unchanged: 0/0
  5158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5159 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5160 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5161 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5162 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5163 ;;Total ram usage:       14 bytes
  5164 ;; Hardware stack levels used:    1
  5165 ;; Hardware stack levels required when called:    1
  5166 ;; This function calls:
  5167 ;;		___lwdiv
  5168 ;;		___lwmod
  5169 ;;		_putch
  5170 ;; This function is called by:
  5171 ;;		_init_ir
  5172 ;;		_play_sound
  5173 ;;		_init_accel
  5174 ;;		_init_leds
  5175 ;;		_display_blade_lights
  5176 ;;		_init_isr
  5177 ;;		_main
  5178 ;;		_uart_test
  5179 ;; This function uses a non-reentrant model
  5180 ;;
  5181                           
  5182                           
  5183                           ;psect for function _printf
  5184  01FE                     _printf:	
  5185                           
  5186                           ;doprnt.c: 466: va_list ap;
  5187                           ;doprnt.c: 499: signed char c;
  5188                           ;doprnt.c: 506: signed char prec;
  5189                           ;doprnt.c: 508: unsigned char flag;
  5190                           ;doprnt.c: 523: union {
  5191                           ;doprnt.c: 524: unsigned long vd;
  5192                           ;doprnt.c: 525: double integ;
  5193                           ;doprnt.c: 526: } tmpval;
  5194                           ;doprnt.c: 528: unsigned int val;
  5195                           ;doprnt.c: 529: unsigned len;
  5196                           ;doprnt.c: 530: const char * cp;
  5197                           ;doprnt.c: 533: *ap = __va_start();
  5198                           
  5199                           ;incstack = 0
  5200                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5201  01FE  3022               	movlw	(low ((?_printf| 0+2)))& (0+255)
  5202  01FF  0020               	movlb	0	; select bank0
  5203  0200  00A4               	movwf	??_printf
  5204  0201  0824               	movf	??_printf,w
  5205  0202  00A8               	movwf	printf@ap
  5206  0203                     l1692:	
  5207                           ;doprnt.c: 536: while(c = *f++) {
  5208                           
  5209  0203  0020               	movlb	0	; select bank0
  5210  0204  0821               	movf	printf@f+1,w
  5211  0205  00A5               	movwf	??_printf+1
  5212  0206  0820               	movf	printf@f,w
  5213  0207  00A4               	movwf	??_printf
  5214  0208  0AA0               	incf	printf@f,f
  5215  0209  1903               	skipnz
  5216  020A  0AA1               	incf	printf@f+1,f
  5217  020B  0824               	movf	??_printf,w
  5218  020C  0084               	movwf	4
  5219  020D  0825               	movf	??_printf+1,w
  5220  020E  0085               	movwf	5
  5221  020F  0800               	movf	0,w	;code access
  5222  0210  00A6               	movwf	??_printf+2
  5223  0211  0826               	movf	??_printf+2,w
  5224  0212  00AD               	movwf	printf@c
  5225  0213  082D               	movf	printf@c,w
  5226  0214  1903               	btfsc	3,2
  5227  0215  0008               	return
  5228                           
  5229                           ;doprnt.c: 538: if(c != '%')
  5230  0216  3025               	movlw	37
  5231  0217  062D               	xorwf	printf@c,w
  5232  0218  1903               	btfsc	3,2
  5233  0219  2A1F               	goto	l1652
  5234                           
  5235                           ;doprnt.c: 540: {
  5236                           ;doprnt.c: 541: (putch(c) );
  5237  021A  082D               	movf	printf@c,w
  5238  021B  3180  20D2  3181   	fcall	_putch
  5239                           
  5240                           ;doprnt.c: 542: continue;
  5241  021E  2A03               	goto	l1692
  5242  021F                     l1652:	
  5243                           
  5244                           ;doprnt.c: 543: }
  5245                           ;doprnt.c: 548: flag = 0;
  5246  021F  0020               	movlb	0	; select bank0
  5247  0220  01A9               	clrf	printf@flag
  5248                           
  5249                           ;doprnt.c: 822: }
  5250                           
  5251                           ;doprnt.c: 813: continue;
  5252                           
  5253                           ;doprnt.c: 802: default:
  5254                           
  5255                           ;doprnt.c: 698: case 'i':
  5256                           ;doprnt.c: 699: break;
  5257                           
  5258                           ;doprnt.c: 697: case 'd':
  5259                           
  5260                           ;doprnt.c: 638: goto alldone;
  5261                           
  5262                           ;doprnt.c: 637: case 0:
  5263                           
  5264                           ;doprnt.c: 635: switch(c = *f++) {
  5265  0221  0821               	movf	printf@f+1,w
  5266  0222  00A5               	movwf	??_printf+1
  5267  0223  0820               	movf	printf@f,w
  5268  0224  00A4               	movwf	??_printf
  5269  0225  0AA0               	incf	printf@f,f
  5270  0226  1903               	skipnz
  5271  0227  0AA1               	incf	printf@f+1,f
  5272  0228  0824               	movf	??_printf,w
  5273  0229  0084               	movwf	4
  5274  022A  0825               	movf	??_printf+1,w
  5275  022B  0085               	movwf	5
  5276  022C  0800               	movf	0,w	;code access
  5277  022D  00AD               	movwf	printf@c
  5278                           
  5279                           ; Switch size 1, requested type "space"
  5280                           ; Number of cases is 3, Range of values is 0 to 105
  5281                           ; switch strategies available:
  5282                           ; Name         Instructions Cycles
  5283                           ; simple_byte           10     6 (average)
  5284                           ; direct_byte          218     6 (fixed)
  5285                           ; jumptable            260     6 (fixed)
  5286                           ;	Chosen strategy is simple_byte
  5287  022E  3A00               	xorlw	0	; case 0
  5288  022F  1903               	skipnz
  5289  0230  2AB4               	goto	l394
  5290  0231  3A64               	xorlw	100	; case 100
  5291  0232  1903               	skipnz
  5292  0233  2A38               	goto	l1658
  5293  0234  3A0D               	xorlw	13	; case 105
  5294  0235  1903               	skipnz
  5295  0236  2A38               	goto	l1658
  5296  0237  2A03               	goto	l1692
  5297  0238                     l1658:	
  5298                           
  5299                           ;doprnt.c: 1253: {
  5300                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  5301  0238  0828               	movf	printf@ap,w
  5302  0239  0086               	movwf	6
  5303  023A  0187               	clrf	7
  5304  023B  3F40               	moviw [0]fsr1
  5305  023C  00AB               	movwf	printf@val
  5306  023D  3F41               	moviw [1]fsr1
  5307  023E  00AC               	movwf	printf@val+1
  5308  023F  3002               	movlw	2
  5309  0240  00A4               	movwf	??_printf
  5310  0241  0824               	movf	??_printf,w
  5311  0242  07A8               	addwf	printf@ap,f
  5312                           
  5313                           ;doprnt.c: 1261: if((int)val < 0) {
  5314  0243  1FAC               	btfss	printf@val+1,7
  5315  0244  2A4E               	goto	l1668
  5316                           
  5317                           ;doprnt.c: 1262: flag |= 0x03;
  5318  0245  3003               	movlw	3
  5319  0246  00A4               	movwf	??_printf
  5320  0247  0824               	movf	??_printf,w
  5321  0248  04A9               	iorwf	printf@flag,f
  5322                           
  5323                           ;doprnt.c: 1263: val = -val;
  5324  0249  09AB               	comf	printf@val,f
  5325  024A  09AC               	comf	printf@val+1,f
  5326  024B  0AAB               	incf	printf@val,f
  5327  024C  1903               	skipnz
  5328  024D  0AAC               	incf	printf@val+1,f
  5329  024E                     l1668:	
  5330                           
  5331                           ;doprnt.c: 1264: }
  5332                           ;doprnt.c: 1266: }
  5333                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  5334  024E  01AD               	clrf	printf@c
  5335  024F  0AAD               	incf	printf@c,f
  5336  0250  3005               	movlw	5
  5337  0251  062D               	xorwf	printf@c,w
  5338  0252  1903               	btfsc	3,2
  5339  0253  2A73               	goto	l1680
  5340  0254                     l1674:	
  5341                           
  5342                           ;doprnt.c: 1306: if(val < dpowers[c])
  5343  0254  082D               	movf	printf@c,w
  5344  0255  00A4               	movwf	??_printf
  5345  0256  01A5               	clrf	??_printf+1
  5346  0257  35A4               	lslf	??_printf,f
  5347  0258  0DA5               	rlf	??_printf+1,f
  5348  0259  3000               	movlw	low (_dpowers| (0+32768))
  5349  025A  0724               	addwf	??_printf,w
  5350  025B  0084               	movwf	4
  5351  025C  3088               	movlw	high (_dpowers| (0+32768))
  5352  025D  3D25               	addwfc	??_printf+1,w
  5353  025E  0085               	movwf	5
  5354  025F  3F00               	moviw [0]fsr0
  5355  0260  00A6               	movwf	??_printf+2
  5356  0261  3F01               	moviw [1]fsr0
  5357  0262  00A7               	movwf	??_printf+3
  5358  0263  0827               	movf	??_printf+3,w
  5359  0264  022C               	subwf	printf@val+1,w
  5360  0265  1D03               	skipz
  5361  0266  2A69               	goto	u1255
  5362  0267  0826               	movf	??_printf+2,w
  5363  0268  022B               	subwf	printf@val,w
  5364  0269                     u1255:	
  5365  0269  1C03               	btfss	3,0
  5366  026A  2A73               	goto	l1680
  5367                           
  5368                           ;doprnt.c: 1307: break;
  5369  026B  3001               	movlw	1
  5370  026C  00A4               	movwf	??_printf
  5371  026D  0824               	movf	??_printf,w
  5372  026E  07AD               	addwf	printf@c,f
  5373  026F  3005               	movlw	5
  5374  0270  062D               	xorwf	printf@c,w
  5375  0271  1D03               	btfss	3,2
  5376  0272  2A54               	goto	l1674
  5377  0273                     l1680:	
  5378                           
  5379                           ;doprnt.c: 1422: {
  5380                           ;doprnt.c: 1438: if(flag & 0x03)
  5381  0273  0829               	movf	printf@flag,w
  5382  0274  3903               	andlw	3
  5383  0275  1903               	btfsc	3,2
  5384  0276  2A7B               	goto	l1684
  5385                           
  5386                           ;doprnt.c: 1439: (putch('-') );
  5387  0277  302D               	movlw	45
  5388  0278  3180  20D2  3181   	fcall	_putch
  5389  027B                     l1684:	
  5390                           
  5391                           ;doprnt.c: 1469: }
  5392                           ;doprnt.c: 1472: prec = c;
  5393  027B  0020               	movlb	0	; select bank0
  5394  027C  082D               	movf	printf@c,w
  5395  027D  00A4               	movwf	??_printf
  5396  027E  0824               	movf	??_printf,w
  5397  027F  00AA               	movwf	printf@prec
  5398  0280                     l1690:	
  5399                           ;doprnt.c: 1474: while(prec--) {
  5400                           
  5401  0280  30FF               	movlw	255
  5402  0281  0020               	movlb	0	; select bank0
  5403  0282  00A4               	movwf	??_printf
  5404  0283  0824               	movf	??_printf,w
  5405  0284  07AA               	addwf	printf@prec,f
  5406  0285  0A2A               	incf	printf@prec,w
  5407  0286  1903               	btfsc	3,2
  5408  0287  2A03               	goto	l1692
  5409                           
  5410                           ;doprnt.c: 1478: {
  5411                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  5412  0288  300A               	movlw	10
  5413  0289  00F8               	movwf	___lwmod@divisor
  5414  028A  3000               	movlw	0
  5415  028B  00F9               	movwf	___lwmod@divisor+1
  5416  028C  082A               	movf	printf@prec,w
  5417  028D  00A4               	movwf	??_printf
  5418  028E  01A5               	clrf	??_printf+1
  5419  028F  35A4               	lslf	??_printf,f
  5420  0290  0DA5               	rlf	??_printf+1,f
  5421  0291  3000               	movlw	low (_dpowers| (0+32768))
  5422  0292  0724               	addwf	??_printf,w
  5423  0293  0084               	movwf	4
  5424  0294  3088               	movlw	high (_dpowers| (0+32768))
  5425  0295  3D25               	addwfc	??_printf+1,w
  5426  0296  0085               	movwf	5
  5427  0297  3F00               	moviw [0]fsr0
  5428  0298  00F0               	movwf	___lwdiv@divisor
  5429  0299  3F01               	moviw [1]fsr0
  5430  029A  00F1               	movwf	___lwdiv@divisor+1
  5431  029B  082C               	movf	printf@val+1,w
  5432  029C  00F3               	movwf	___lwdiv@dividend+1
  5433  029D  082B               	movf	printf@val,w
  5434  029E  00F2               	movwf	___lwdiv@dividend
  5435  029F  3181  218E  3181   	fcall	___lwdiv
  5436  02A2  0871               	movf	?___lwdiv+1,w
  5437  02A3  00FB               	movwf	___lwmod@dividend+1
  5438  02A4  0870               	movf	?___lwdiv,w
  5439  02A5  00FA               	movwf	___lwmod@dividend
  5440  02A6  3181  2162  3181   	fcall	___lwmod
  5441  02A9  0878               	movf	?___lwmod,w
  5442  02AA  3E30               	addlw	48
  5443  02AB  0020               	movlb	0	; select bank0
  5444  02AC  00A6               	movwf	??_printf+2
  5445  02AD  0826               	movf	??_printf+2,w
  5446  02AE  00AD               	movwf	printf@c
  5447                           
  5448                           ;doprnt.c: 1523: }
  5449                           ;doprnt.c: 1524: (putch(c) );
  5450  02AF  082D               	movf	printf@c,w
  5451  02B0  3180  20D2  3181   	fcall	_putch
  5452  02B3  2A80               	goto	l1690
  5453  02B4                     l394:	
  5454                           ;doprnt.c: 1540: return 0;
  5455                           ;	Return value of _printf is never used
  5456                           
  5457                           ;doprnt.c: 1525: }
  5458                           ;doprnt.c: 1533: }
  5459                           ;doprnt.c: 1535: alldone:
  5460                           
  5461  02B4  0008               	return
  5462  02B5                     __end_of_printf:	
  5463                           
  5464                           	psect	text13
  5465  00D2                     __ptext13:	
  5466 ;; *************** function _putch *****************
  5467 ;; Defined at:
  5468 ;;		line 41 in file "../../source/uart.c"
  5469 ;; Parameters:    Size  Location     Type
  5470 ;;  input           1    wreg     unsigned char 
  5471 ;; Auto vars:     Size  Location     Type
  5472 ;;  input           1    0[COMMON] unsigned char 
  5473 ;; Return value:  Size  Location     Type
  5474 ;;		None               void
  5475 ;; Registers used:
  5476 ;;		wreg
  5477 ;; Tracked objects:
  5478 ;;		On entry : 0/0
  5479 ;;		On exit  : 0/0
  5480 ;;		Unchanged: 0/0
  5481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5483 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5485 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5486 ;;Total ram usage:        1 bytes
  5487 ;; Hardware stack levels used:    1
  5488 ;; This function calls:
  5489 ;;		Nothing
  5490 ;; This function is called by:
  5491 ;;		_printf
  5492 ;;		_getche
  5493 ;; This function uses a non-reentrant model
  5494 ;;
  5495                           
  5496                           
  5497                           ;psect for function _putch
  5498  00D2                     _putch:	
  5499                           
  5500                           ;incstack = 0
  5501                           ; Regs used in _putch: [wreg]
  5502                           ;putch@input stored from wreg
  5503  00D2  00F0               	movwf	putch@input
  5504  00D3                     l338:	
  5505                           ;uart.c: 44: {
  5506                           ;uart.c: 45: continue;
  5507                           
  5508                           ;uart.c: 43: while(!TRMT)
  5509                           
  5510  00D3  0023               	movlb	3	; select bank3
  5511  00D4  1C9E               	btfss	30,1	;volatile
  5512  00D5  28D3               	goto	l338
  5513                           
  5514                           ;uart.c: 46: }
  5515                           ;uart.c: 47: TXREG = input;
  5516  00D6  0870               	movf	putch@input,w
  5517  00D7  009A               	movwf	26	;volatile
  5518  00D8  0008               	return
  5519  00D9                     __end_of_putch:	
  5520                           
  5521                           	psect	text14
  5522  0162                     __ptext14:	
  5523 ;; *************** function ___lwmod *****************
  5524 ;; Defined at:
  5525 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  5526 ;; Parameters:    Size  Location     Type
  5527 ;;  divisor         2    8[COMMON] unsigned int 
  5528 ;;  dividend        2   10[COMMON] unsigned int 
  5529 ;; Auto vars:     Size  Location     Type
  5530 ;;  counter         1   13[COMMON] unsigned char 
  5531 ;; Return value:  Size  Location     Type
  5532 ;;                  2    8[COMMON] unsigned int 
  5533 ;; Registers used:
  5534 ;;		wreg, status,2, status,0
  5535 ;; Tracked objects:
  5536 ;;		On entry : 0/0
  5537 ;;		On exit  : 0/0
  5538 ;;		Unchanged: 0/0
  5539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5540 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5541 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5542 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5543 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5544 ;;Total ram usage:        6 bytes
  5545 ;; Hardware stack levels used:    1
  5546 ;; This function calls:
  5547 ;;		Nothing
  5548 ;; This function is called by:
  5549 ;;		_printf
  5550 ;; This function uses a non-reentrant model
  5551 ;;
  5552                           
  5553                           
  5554                           ;psect for function ___lwmod
  5555  0162                     ___lwmod:	
  5556                           
  5557                           ;incstack = 0
  5558                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5559  0162  0878               	movf	___lwmod@divisor,w
  5560  0163  0479               	iorwf	___lwmod@divisor+1,w
  5561  0164  1903               	btfsc	3,2
  5562  0165  2989               	goto	l1642
  5563  0166  01FD               	clrf	___lwmod@counter
  5564  0167  0AFD               	incf	___lwmod@counter,f
  5565  0168                     l1632:	
  5566  0168  1BF9               	btfsc	___lwmod@divisor+1,7
  5567  0169  2974               	goto	l1634
  5568  016A  3001               	movlw	1
  5569  016B                     u1175:	
  5570  016B  35F8               	lslf	___lwmod@divisor,f
  5571  016C  0DF9               	rlf	___lwmod@divisor+1,f
  5572  016D  0B89               	decfsz	9,f
  5573  016E  296B               	goto	u1175
  5574  016F  3001               	movlw	1
  5575  0170  00FC               	movwf	??___lwmod
  5576  0171  087C               	movf	??___lwmod,w
  5577  0172  07FD               	addwf	___lwmod@counter,f
  5578  0173  2968               	goto	l1632
  5579  0174                     l1634:	
  5580  0174  0879               	movf	___lwmod@divisor+1,w
  5581  0175  027B               	subwf	___lwmod@dividend+1,w
  5582  0176  1D03               	skipz
  5583  0177  297A               	goto	u1195
  5584  0178  0878               	movf	___lwmod@divisor,w
  5585  0179  027A               	subwf	___lwmod@dividend,w
  5586  017A                     u1195:	
  5587  017A  1C03               	skipc
  5588  017B  2980               	goto	l1638
  5589  017C  0878               	movf	___lwmod@divisor,w
  5590  017D  02FA               	subwf	___lwmod@dividend,f
  5591  017E  0879               	movf	___lwmod@divisor+1,w
  5592  017F  3BFB               	subwfb	___lwmod@dividend+1,f
  5593  0180                     l1638:	
  5594  0180  3001               	movlw	1
  5595  0181                     u1205:	
  5596  0181  36F9               	lsrf	___lwmod@divisor+1,f
  5597  0182  0CF8               	rrf	___lwmod@divisor,f
  5598  0183  0B89               	decfsz	9,f
  5599  0184  2981               	goto	u1205
  5600  0185  3001               	movlw	1
  5601  0186  02FD               	subwf	___lwmod@counter,f
  5602  0187  1D03               	btfss	3,2
  5603  0188  2974               	goto	l1634
  5604  0189                     l1642:	
  5605  0189  087B               	movf	___lwmod@dividend+1,w
  5606  018A  00F9               	movwf	?___lwmod+1
  5607  018B  087A               	movf	___lwmod@dividend,w
  5608  018C  00F8               	movwf	?___lwmod
  5609  018D  0008               	return
  5610  018E                     __end_of___lwmod:	
  5611                           
  5612                           	psect	text15
  5613  018E                     __ptext15:	
  5614 ;; *************** function ___lwdiv *****************
  5615 ;; Defined at:
  5616 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  5617 ;; Parameters:    Size  Location     Type
  5618 ;;  divisor         2    0[COMMON] unsigned int 
  5619 ;;  dividend        2    2[COMMON] unsigned int 
  5620 ;; Auto vars:     Size  Location     Type
  5621 ;;  quotient        2    5[COMMON] unsigned int 
  5622 ;;  counter         1    7[COMMON] unsigned char 
  5623 ;; Return value:  Size  Location     Type
  5624 ;;                  2    0[COMMON] unsigned int 
  5625 ;; Registers used:
  5626 ;;		wreg, status,2, status,0
  5627 ;; Tracked objects:
  5628 ;;		On entry : 0/0
  5629 ;;		On exit  : 0/0
  5630 ;;		Unchanged: 0/0
  5631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5632 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5633 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5634 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5635 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5636 ;;Total ram usage:        8 bytes
  5637 ;; Hardware stack levels used:    1
  5638 ;; This function calls:
  5639 ;;		Nothing
  5640 ;; This function is called by:
  5641 ;;		_printf
  5642 ;; This function uses a non-reentrant model
  5643 ;;
  5644                           
  5645                           
  5646                           ;psect for function ___lwdiv
  5647  018E                     ___lwdiv:	
  5648                           
  5649                           ;incstack = 0
  5650                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5651  018E  01F5               	clrf	___lwdiv@quotient
  5652  018F  01F6               	clrf	___lwdiv@quotient+1
  5653  0190  0870               	movf	___lwdiv@divisor,w
  5654  0191  0471               	iorwf	___lwdiv@divisor+1,w
  5655  0192  1903               	btfsc	3,2
  5656  0193  29BD               	goto	l1620
  5657  0194  01F7               	clrf	___lwdiv@counter
  5658  0195  0AF7               	incf	___lwdiv@counter,f
  5659  0196                     l1608:	
  5660  0196  1BF1               	btfsc	___lwdiv@divisor+1,7
  5661  0197  29A2               	goto	l1610
  5662  0198  3001               	movlw	1
  5663  0199                     u1105:	
  5664  0199  35F0               	lslf	___lwdiv@divisor,f
  5665  019A  0DF1               	rlf	___lwdiv@divisor+1,f
  5666  019B  0B89               	decfsz	9,f
  5667  019C  2999               	goto	u1105
  5668  019D  3001               	movlw	1
  5669  019E  00F4               	movwf	??___lwdiv
  5670  019F  0874               	movf	??___lwdiv,w
  5671  01A0  07F7               	addwf	___lwdiv@counter,f
  5672  01A1  2996               	goto	l1608
  5673  01A2                     l1610:	
  5674  01A2  3001               	movlw	1
  5675  01A3                     u1125:	
  5676  01A3  35F5               	lslf	___lwdiv@quotient,f
  5677  01A4  0DF6               	rlf	___lwdiv@quotient+1,f
  5678  01A5  0B89               	decfsz	9,f
  5679  01A6  29A3               	goto	u1125
  5680  01A7  0871               	movf	___lwdiv@divisor+1,w
  5681  01A8  0273               	subwf	___lwdiv@dividend+1,w
  5682  01A9  1D03               	skipz
  5683  01AA  29AD               	goto	u1135
  5684  01AB  0870               	movf	___lwdiv@divisor,w
  5685  01AC  0272               	subwf	___lwdiv@dividend,w
  5686  01AD                     u1135:	
  5687  01AD  1C03               	skipc
  5688  01AE  29B4               	goto	l1616
  5689  01AF  0870               	movf	___lwdiv@divisor,w
  5690  01B0  02F2               	subwf	___lwdiv@dividend,f
  5691  01B1  0871               	movf	___lwdiv@divisor+1,w
  5692  01B2  3BF3               	subwfb	___lwdiv@dividend+1,f
  5693  01B3  1475               	bsf	___lwdiv@quotient,0
  5694  01B4                     l1616:	
  5695  01B4  3001               	movlw	1
  5696  01B5                     u1145:	
  5697  01B5  36F1               	lsrf	___lwdiv@divisor+1,f
  5698  01B6  0CF0               	rrf	___lwdiv@divisor,f
  5699  01B7  0B89               	decfsz	9,f
  5700  01B8  29B5               	goto	u1145
  5701  01B9  3001               	movlw	1
  5702  01BA  02F7               	subwf	___lwdiv@counter,f
  5703  01BB  1D03               	btfss	3,2
  5704  01BC  29A2               	goto	l1610
  5705  01BD                     l1620:	
  5706  01BD  0876               	movf	___lwdiv@quotient+1,w
  5707  01BE  00F1               	movwf	?___lwdiv+1
  5708  01BF  0875               	movf	___lwdiv@quotient,w
  5709  01C0  00F0               	movwf	?___lwdiv
  5710  01C1  0008               	return
  5711  01C2                     __end_of___lwdiv:	
  5712                           
  5713                           	psect	text16
  5714  00FC                     __ptext16:	
  5715 ;; *************** function _determine_sword_was_swung *****************
  5716 ;; Defined at:
  5717 ;;		line 149 in file "../../source/function_stubs.c"
  5718 ;; Parameters:    Size  Location     Type
  5719 ;;		None
  5720 ;; Auto vars:     Size  Location     Type
  5721 ;;  input           1    2[COMMON] unsigned char 
  5722 ;; Return value:  Size  Location     Type
  5723 ;;                  1    wreg      unsigned char 
  5724 ;; Registers used:
  5725 ;;		wreg, status,2, status,0, pclath, cstack
  5726 ;; Tracked objects:
  5727 ;;		On entry : 0/0
  5728 ;;		On exit  : 0/0
  5729 ;;		Unchanged: 0/0
  5730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5732 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5733 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5734 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5735 ;;Total ram usage:        2 bytes
  5736 ;; Hardware stack levels used:    1
  5737 ;; Hardware stack levels required when called:    1
  5738 ;; This function calls:
  5739 ;;		_getch
  5740 ;; This function is called by:
  5741 ;;		_main
  5742 ;; This function uses a non-reentrant model
  5743 ;;
  5744                           
  5745                           
  5746                           ;psect for function _determine_sword_was_swung
  5747  00FC                     _determine_sword_was_swung:	
  5748                           
  5749                           ;function_stubs.c: 151: char input = getch();
  5750                           
  5751                           ;incstack = 0
  5752                           ; Regs used in _determine_sword_was_swung: [wreg+status,2+status,0+pclath+cstack]
  5753  00FC  3180  20CB  3180   	fcall	_getch
  5754  00FF  00F1               	movwf	??_determine_sword_was_swung
  5755  0100  0871               	movf	??_determine_sword_was_swung,w
  5756  0101  00F2               	movwf	determine_sword_was_swung@input
  5757                           
  5758                           ;function_stubs.c: 152: if( input == 's' )
  5759  0102  3073               	movlw	115
  5760  0103  0672               	xorwf	determine_sword_was_swung@input,w
  5761  0104  1D03               	btfss	3,2
  5762  0105  2908               	goto	l1844
  5763                           
  5764                           ;function_stubs.c: 153: {
  5765                           ;function_stubs.c: 154: return 1;
  5766  0106  3001               	movlw	1
  5767                           
  5768                           ;function_stubs.c: 155: }
  5769  0107  0008               	return
  5770  0108                     l1844:	
  5771                           
  5772                           ;function_stubs.c: 156: else
  5773                           ;function_stubs.c: 157: {
  5774                           ;function_stubs.c: 158: return input;
  5775  0108  0872               	movf	determine_sword_was_swung@input,w
  5776  0109  0008               	return
  5777  010A                     __end_of_determine_sword_was_swung:	
  5778                           
  5779                           	psect	text17
  5780  00CB                     __ptext17:	
  5781 ;; *************** function _getch *****************
  5782 ;; Defined at:
  5783 ;;		line 51 in file "../../source/uart.c"
  5784 ;; Parameters:    Size  Location     Type
  5785 ;;		None
  5786 ;; Auto vars:     Size  Location     Type
  5787 ;;  counter         1    0[COMMON] unsigned char 
  5788 ;; Return value:  Size  Location     Type
  5789 ;;                  1    wreg      unsigned char 
  5790 ;; Registers used:
  5791 ;;		wreg, status,2
  5792 ;; Tracked objects:
  5793 ;;		On entry : 0/0
  5794 ;;		On exit  : 0/0
  5795 ;;		Unchanged: 0/0
  5796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5798 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5800 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5801 ;;Total ram usage:        1 bytes
  5802 ;; Hardware stack levels used:    1
  5803 ;; This function calls:
  5804 ;;		Nothing
  5805 ;; This function is called by:
  5806 ;;		_determine_sword_was_swung
  5807 ;;		_getche
  5808 ;;		_uart_test
  5809 ;; This function uses a non-reentrant model
  5810 ;;
  5811                           
  5812                           
  5813                           ;psect for function _getch
  5814  00CB                     _getch:	
  5815                           
  5816                           ;uart.c: 53: unsigned char counter = 0;
  5817                           
  5818                           ;incstack = 0
  5819                           ; Regs used in _getch: [wreg+status,2]
  5820  00CB  01F0               	clrf	getch@counter
  5821  00CC                     l344:	
  5822                           ;uart.c: 56: {
  5823                           ;uart.c: 57: continue;
  5824                           
  5825                           ;uart.c: 55: while( !RCIF )
  5826                           
  5827  00CC  0020               	movlb	0	; select bank0
  5828  00CD  1E91               	btfss	17,5	;volatile
  5829  00CE  28CC               	goto	l344
  5830                           
  5831                           ;uart.c: 63: }
  5832                           ;uart.c: 64: return RCREG;
  5833  00CF  0023               	movlb	3	; select bank3
  5834  00D0  0819               	movf	25,w	;volatile
  5835  00D1  0008               	return
  5836  00D2                     __end_of_getch:	
  5837                           
  5838                           	psect	text18
  5839  014A                     __ptext18:	
  5840 ;; *************** function _determine_packets_to_send *****************
  5841 ;; Defined at:
  5842 ;;		line 167 in file "../../source/function_stubs.c"
  5843 ;; Parameters:    Size  Location     Type
  5844 ;;  packets         1    wreg     PTR unsigned char 
  5845 ;;		 -> main@pkt_arr(3), 
  5846 ;; Auto vars:     Size  Location     Type
  5847 ;;  packets         1    1[COMMON] PTR unsigned char 
  5848 ;;		 -> main@pkt_arr(3), 
  5849 ;; Return value:  Size  Location     Type
  5850 ;;		None               void
  5851 ;; Registers used:
  5852 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5853 ;; Tracked objects:
  5854 ;;		On entry : 0/0
  5855 ;;		On exit  : 0/0
  5856 ;;		Unchanged: 0/0
  5857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5859 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5860 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5861 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5862 ;;Total ram usage:        2 bytes
  5863 ;; Hardware stack levels used:    1
  5864 ;; This function calls:
  5865 ;;		Nothing
  5866 ;; This function is called by:
  5867 ;;		_main
  5868 ;; This function uses a non-reentrant model
  5869 ;;
  5870                           
  5871                           
  5872                           ;psect for function _determine_packets_to_send
  5873  014A                     _determine_packets_to_send:	
  5874                           
  5875                           ;incstack = 0
  5876                           ; Regs used in _determine_packets_to_send: [wreg+fsr1l+fsr1h+status,2+status,0]
  5877                           ;determine_packets_to_send@packets stored from wreg
  5878  014A  00F1               	movwf	determine_packets_to_send@packets
  5879                           
  5880                           ;function_stubs.c: 169: packets[0] = 5;
  5881  014B  3005               	movlw	5
  5882  014C  00F0               	movwf	??_determine_packets_to_send
  5883  014D  0871               	movf	determine_packets_to_send@packets,w
  5884  014E  0086               	movwf	6
  5885  014F  0187               	clrf	7
  5886  0150  0870               	movf	??_determine_packets_to_send,w
  5887  0151  0081               	movwf	1
  5888                           
  5889                           ;function_stubs.c: 170: packets[1] = 10;
  5890  0152  300A               	movlw	10
  5891  0153  00F0               	movwf	??_determine_packets_to_send
  5892  0154  0A71               	incf	determine_packets_to_send@packets,w
  5893  0155  0086               	movwf	6
  5894  0156  0187               	clrf	7
  5895  0157  0870               	movf	??_determine_packets_to_send,w
  5896  0158  0081               	movwf	1
  5897                           
  5898                           ;function_stubs.c: 171: packets[2] = 15;
  5899  0159  300F               	movlw	15
  5900  015A  00F0               	movwf	??_determine_packets_to_send
  5901  015B  0871               	movf	determine_packets_to_send@packets,w
  5902  015C  3E02               	addlw	2
  5903  015D  0086               	movwf	6
  5904  015E  0187               	clrf	7
  5905  015F  0870               	movf	??_determine_packets_to_send,w
  5906  0160  0081               	movwf	1
  5907  0161  0008               	return
  5908  0162                     __end_of_determine_packets_to_send:	
  5909                           
  5910                           	psect	text19
  5911  00C2                     __ptext19:	
  5912 ;; *************** function _determine_omega_mode_active *****************
  5913 ;; Defined at:
  5914 ;;		line 162 in file "../../source/function_stubs.c"
  5915 ;; Parameters:    Size  Location     Type
  5916 ;;		None
  5917 ;; Auto vars:     Size  Location     Type
  5918 ;;		None
  5919 ;; Return value:  Size  Location     Type
  5920 ;;                  1    wreg      unsigned char 
  5921 ;; Registers used:
  5922 ;;		wreg
  5923 ;; Tracked objects:
  5924 ;;		On entry : 0/0
  5925 ;;		On exit  : 0/0
  5926 ;;		Unchanged: 0/0
  5927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5932 ;;Total ram usage:        0 bytes
  5933 ;; Hardware stack levels used:    1
  5934 ;; This function calls:
  5935 ;;		Nothing
  5936 ;; This function is called by:
  5937 ;;		_main
  5938 ;; This function uses a non-reentrant model
  5939 ;;
  5940                           
  5941                           
  5942                           ;psect for function _determine_omega_mode_active
  5943  00C2                     _determine_omega_mode_active:	
  5944                           
  5945                           ;function_stubs.c: 164: return omega_mode;
  5946                           
  5947                           ;incstack = 0
  5948                           ; Regs used in _determine_omega_mode_active: [wreg]
  5949  00C2  0020               	movlb	0	; select bank0
  5950  00C3  083B               	movf	_omega_mode,w
  5951  00C4  0008               	return
  5952  00C5                     __end_of_determine_omega_mode_active:	
  5953  007E                     btemp	set	126	;btemp
  5954  007E                     wtemp	set	126
  5955  007E                     wtemp0	set	126
  5956  0080                     wtemp1	set	128
  5957  0082                     wtemp2	set	130
  5958  0084                     wtemp3	set	132
  5959  0086                     wtemp4	set	134
  5960  0088                     wtemp5	set	136
  5961  007F                     wtemp6	set	127
  5962  007E                     ttemp	set	126
  5963  007E                     ttemp0	set	126
  5964  0081                     ttemp1	set	129
  5965  0084                     ttemp2	set	132
  5966  0087                     ttemp3	set	135
  5967  007F                     ttemp4	set	127
  5968  007E                     ltemp	set	126
  5969  007E                     ltemp0	set	126
  5970  0082                     ltemp1	set	130
  5971  0086                     ltemp2	set	134
  5972  0080                     ltemp3	set	128


Data Sizes:
    Strings     978
    Constant    10
    Data        1
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     23      30
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 66
		 -> STR_49(CODE[26]), STR_48(CODE[49]), STR_47(CODE[31]), STR_46(CODE[25]), 
		 -> STR_45(CODE[3]), STR_44(CODE[23]), STR_43(CODE[22]), STR_42(CODE[30]), 
		 -> STR_41(CODE[42]), STR_40(CODE[43]), STR_39(CODE[18]), STR_38(CODE[23]), 
		 -> STR_37(CODE[22]), STR_36(CODE[30]), STR_35(CODE[42]), STR_34(CODE[43]), 
		 -> STR_33(CODE[18]), STR_32(CODE[23]), STR_31(CODE[22]), STR_30(CODE[18]), 
		 -> STR_29(CODE[23]), STR_28(CODE[22]), STR_27(CODE[30]), STR_26(CODE[42]), 
		 -> STR_25(CODE[43]), STR_24(CODE[18]), STR_23(CODE[36]), STR_22(CODE[66]), 
		 -> STR_21(CODE[53]), STR_20(CODE[28]), STR_19(CODE[4]), STR_18(CODE[4]), 
		 -> STR_17(CODE[38]), STR_16(CODE[28]), STR_15(CODE[4]), STR_14(CODE[4]), 
		 -> STR_13(CODE[4]), STR_12(CODE[4]), STR_11(CODE[37]), STR_10(CODE[65]), 
		 -> STR_9(CODE[62]), STR_8(CODE[19]), STR_7(CODE[42]), STR_6(CODE[47]), 
		 -> STR_5(CODE[20]), STR_4(CODE[29]), STR_3(CODE[34]), STR_2(CODE[33]), 
		 -> STR_1(CODE[36]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    determine_packets_to_send@packets	PTR unsigned char  size(1) Largest target is 3
		 -> main@pkt_arr(BANK0[3]), 


Critical Paths under _main in COMMON

    _printf->___lwmod
    ___lwmod->___lwdiv
    _determine_sword_was_swung->_getch

Critical Paths under _main in BANK0

    _main->_display_blade_lights
    _main->_init_ir
    _main->_play_sound
    _play_sound->_printf
    _init_leds->_printf
    _init_isr->_printf
    _init_ir->_printf
    _init_accel->_printf
    _display_blade_lights->_printf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0   26757
                                             15 BANK0      8     8      0
        _determine_omega_mode_active
          _determine_packets_to_send
          _determine_sword_was_swung
               _display_blade_lights
                     _display_health
                         _init_accel
                            _init_ir
                           _init_isr
                          _init_leds
                           _init_pic
                          _init_uart
                          _output_ir
                         _play_sound
                             _printf
                             _waitch
 ---------------------------------------------------------------------------------
 (1) _waitch                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _play_sound                                           1     1      0    3582
                                             14 BANK0      1     1      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _output_ir                                           10     9      1     394
                                              0 COMMON    10     9      1
 ---------------------------------------------------------------------------------
 (1) _init_uart                                            1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_pic                                             1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_leds                                            0     0      0    3538
                             _printf
 ---------------------------------------------------------------------------------
 (1) _init_isr                                             0     0      0    3538
                             _printf
 ---------------------------------------------------------------------------------
 (1) _init_ir                                              1     1      0    3538
                                             14 BANK0      1     1      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _init_accel                                           0     0      0    3538
                             _printf
 ---------------------------------------------------------------------------------
 (1) _display_health                                       1     1      0       0
 ---------------------------------------------------------------------------------
 (1) _display_blade_lights                                 1     1      0    3582
                                             14 BANK0      1     1      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              22    18      4    3538
                                              0 BANK0     14    10      4
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     265
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     268
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _determine_sword_was_swung                            2     2      0      46
                                              1 COMMON     2     2      0
                              _getch
 ---------------------------------------------------------------------------------
 (2) _getch                                                1     1      0       1
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _determine_packets_to_send                            2     2      0     174
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _determine_omega_mode_active                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _determine_omega_mode_active
   _determine_packets_to_send
   _determine_sword_was_swung
     _getch
   _display_blade_lights
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _putch
   _display_health
   _init_accel
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _putch
   _init_ir
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _putch
   _init_isr
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _putch
   _init_leds
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _putch
   _init_pic
   _init_uart
   _output_ir
   _play_sound
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _putch
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch
   _waitch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     17      1E       5       37.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0      2C      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0      2C      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              50      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24              50      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25              20      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Wed Oct 21 01:17:38 2015

                         __CFG_CP$OFF 0000                                    l82 031D  
                                  l77 02BB                                    l86 037C  
              __end_of_display_health 00C1                                   l205 0577  
                                 l222 0595                                   l219 0579  
                                 l245 06E2                                   l262 0700  
                                 l271 07D0                                   l344 00CC  
                                 l353 00C5                                   l338 00D3  
                                 l259 06E4                                   l285 07D2  
                                 l288 07EE                                   l394 02B4  
                                 _GIE 005F                                   _RB3 006B  
                        __CFG_CPD$OFF 0000                          __CFG_BORV$LO 0000  
                                 wreg 0009                          __CFG_IESO$ON 0000  
                        __CFG_LVP$OFF 0000             play_sound@sound_selection 002E  
                                l2010 0573                                  l2002 0557  
                                l2100 060B                                  l2012 04AD  
                                l2102 059C                                  l2022 04C0  
                                l2006 056A                                  l2014 04AF  
                                l2120 0613                                  l2210 0701  
                                l2114 05B8                                  l2106 05A2  
                                l2034 04E3                                  l2026 04CF  
                                l2300 07EF                                  l2124 069D  
                                l2060 052A                                  l2230 07B0  
                                l2214 078B                                  l2206 06F6  
                                l2150 061B                                  l2142 06CF  
                                l2118 05C2                                  l2038 04F2  
                                l2240 0709                                  l2160 062E  
                                l2152 061D                                  l2056 0520  
                                l2048 050A                                  l2072 0596  
                                l1610 01A2                                  l2250 071C  
                                l2234 07C3                                  l2242 070B  
                                l2146 06D8                                  l2138 06BC  
                                l2074 05C7                                  l1620 01BD  
                                l2172 0651                                  l2164 063D  
                                l2092 05EF                                  l2068 058B  
                                l2262 073F                                  l2254 072B  
                                l2238 07CC                                  l1616 01B4  
                                l1608 0196                                  l1632 0168  
                                l2176 0660                                  l2096 0602  
                                l1634 0174                                  l1642 0189  
                                l2266 074E                                  l2194 068E  
                                l2186 0678                                  l1652 021F  
                                l2284 077C                                  l2276 0766  
                                l1638 0180                                  l1806 037A  
                                l2198 0698                                  l1680 0273  
                                l2296 07E4                                  l2288 0786  
                                l1690 0280                                  l1674 0254  
                                l1658 0238                                  l1844 0108  
                                l1684 027B                                  l1668 024E  
                                l1692 0203                                  l1828 013F  
                                l1864 0128                                  l1952 0434  
                                l1944 0427                                  l1960 0461  
                                l1936 041A                                  l1786 0318  
                                l1980 0490                                  l1972 0466  
                                l1958 0445                                  l1984 052F  
                                l1978 0474                                  STR_1 0A4E  
                                STR_2 0A94                                  STR_3 0A72  
                                STR_4 0AF2                                  STR_5 0B8B  
                                STR_6 0931                                  STR_7 09B5  
                                STR_8 0B9F                                  STR_9 088D  
                                _BRGH 0CF2                                  _CREN 0CEC  
                                u1105 0199                                  u1125 01A3  
                                u1205 0181                                  u1135 01AD  
                                u1145 01B5                                  u1325 02C4  
                                u1175 016B                                  u1255 0269  
                                u2207 02D5                                  u1345 0326  
                                u2217 02E0                                  u1195 017A  
                                u1355 0385                                  u2307 0358  
                                u2227 02EB                                  u2317 0363  
                                u2237 02F6                                  u2157 03F2  
                                u2327 036E                                  u2247 0301  
                                u2167 0581                                  u2337 038B  
                                u2257 030C                                  u2177 06EC  
                                u2347 0396                                  u2267 032C  
                                u2187 07DA                                  u2357 03A1  
                                u2277 0337                                  u2197 02CA  
                                u2367 03AC                                  u2287 0342  
                                u2377 03B7                                  u2297 034D  
                                _PIE4 0094                                  u2387 03C2  
                                u2397 03CD                                  _RCIE 048D  
                                _RCIF 008D     __end_of_determine_sword_was_swung 010A  
                                _SPEN 0CEF                                  _TRMT 0CF1  
                                _TXEN 0CF5                                  _SYNC 0CF4  
                        __CFG_WRT$OFF 0000                         __CFG_FCMEN$ON 0000  
                                _main 03D9                           main@pkt_arr 0032  
                                fsr0h 0005                                  fsr1h 0007  
                                fsr0l 0004                                  indf0 0000  
                                indf1 0001                                  fsr1l 0006  
                                btemp 007E                                  ltemp 007E  
                                start 0002                                  ttemp 007E  
                                wtemp 007E                         __CFG_MCLRE$ON 0000  
           _determine_packets_to_send 014A                                 ?_main 0070  
                     ?_display_health 0070                                 STR_10 084C  
                               STR_11 0A05                                 STR_20 0B0F  
                               STR_12 0BC4                                 STR_13 0BC8  
                               STR_21 08CB                                 STR_30 0BB2  
                               STR_14 0BCC                                 STR_22 080A  
                               STR_31 0B75                                 STR_15 0BD0  
                               STR_23 0A2A                                 STR_40 0960  
                               STR_32 0B5E                                 STR_24 0BB2  
                               STR_16 0B0F                                 _BRG16 0CFB  
                               STR_41 098B                                 STR_33 0BB2  
                               STR_17 09DF                                 STR_25 0960  
                       __CFG_WDTE$OFF 0000                                 STR_34 0960  
                               STR_42 0AD4                                 STR_18 0BD8  
                               STR_26 098B                                 STR_35 098B  
                               STR_43 0B75                                 STR_19 0BD4  
                               STR_27 0AD4                                 STR_44 0B5E  
                               STR_36 0AD4                                 STR_28 0B75  
                               STR_45 0A4B                                 STR_37 0B75  
                               STR_29 0B5E                                 STR_38 0B5E  
                               STR_46 0B45                                 STR_39 0BB2  
                               STR_47 0AB5                                 STR_48 0900  
                               STR_49 0B2B                       __end_of___lwdiv 01C2  
                     __end_of___lwmod 018E                                 _RCREG 0199  
                               _SPBRG 019B                                 _TRISB 008D  
                               _TRISC 008E                                 _TXREG 019A  
                               _blade 003A                                 _getch 00CB  
                     __end_of_dpowers 080A                       __end_of_init_ir 01FE  
                               _putch 00D2                                 main@i 0035  
                      __CFG_BOREN$OFF 0000                                 ltemp0 007E  
                               ltemp1 0082                                 ltemp2 0086  
                               ltemp3 0080                                 ttemp0 007E  
                               ttemp1 0081                                 ttemp2 0084  
                               ttemp3 0087                                 ttemp4 007F  
                               status 0003                                 wtemp0 007E  
                               wtemp1 0080                                 wtemp2 0082  
                               wtemp3 0084                                 wtemp4 0086  
                               wtemp5 0088                                 wtemp6 007F  
                     __initialization 07F4                          __end_of_main 07F4  
                      __CFG_LPBOR$OFF 0000                                ??_main 002F  
                      __CFG_PLLEN$OFF 0000          __end_of_display_blade_lights 0133  
                        _stun_counter 003C                                ?_getch 0070  
                              ?_putch 0070                                _OSCCON 0099  
                      __CFG_PWRTE$OFF 0000                        __CFG_STVREN$ON 0000  
                              _health 003D                             ??___lwdiv 0074  
                           ??___lwmod 007C                      __end_of_init_pic 00FC  
                    __end_of_init_isr 00E9                                _waitch 00C5  
                              _printf 01FE                             ??_init_ir 002E  
                       main@userInput 0036               __end_of__initialization 07FD  
                      __pcstackCOMMON 0070                          __pidataBANK0 00C1  
                       __end_of_getch 00D2                         __end_of_putch 00D9  
                             ??_getch 0070    __size_of_determine_packets_to_send 0018  
                             ??_putch 0070                            __pbssBANK0 0037  
                     __CFG_VCAPEN$OFF 0000                    __size_of_init_leds 0008  
                  __size_of_init_uart 0012                            __pmaintext 03D9  
                    ??_display_health 0070                  _display_blade_lights 011C  
                             ?_waitch 0070                               ?_printf 0020  
   __end_of_determine_packets_to_send 0162                    __size_of_output_ir 0124  
          ?_determine_sword_was_swung 0070                             ?_init_pic 0070  
                           ?_init_isr 0070        determine_sword_was_swung@input 0072  
               ?_display_blade_lights 0070                            _init_accel 00D9  
                             ___lwdiv 018E                               ___lwmod 0162  
                             __ptext1 00C5                               __ptext2 0133  
                             __ptext3 02B5                               __ptext4 010A  
                             __ptext5 00F1                               __ptext6 00E9  
                             __ptext7 00E1                               __ptext8 01C2  
                             __ptext9 00D9                       __size_of_waitch 0006  
                     __size_of_printf 00B7                               _dpowers 0800  
                             _init_ir 01C2                     __end_of_init_leds 00F1  
                   __end_of_init_uart 011C          ?_determine_omega_mode_active 0070  
                          _omega_mode 003B                  end_of_initialization 07FD  
                          ??_init_pic 0070                            ??_init_isr 007E  
                          _play_sound 0133                             _PSMC1FEBS 0E99  
                           _PSMC1BLKF 0EAC                             _PSMC1ASDC 0E9D  
                           _PSMC1BLNK 0E97                             _PSMC1BLKR 0EAB  
                           _PSMC1ASDL 0E9E                             _PSMC1ASDS 0E9F  
                           _PSMC1REBS 0E98                               printf@c 002D  
                             printf@f 0020                             _PSMC1STR0 0EAE  
                           _PSMC1STR1 0EAF                             _PSMC1SYNC 0E93  
                        __pstringtext 0800                     __end_of_output_ir 03D9  
                    __CFG_FOSC$INTOSC 0000                  display_health@health 0070  
              ??_display_blade_lights 007E                           ?_init_accel 0070  
                      __end_of_waitch 00CB                        __end_of_printf 02B5  
                 start_initialization 07F4                           ?_play_sound 0070  
__size_of_determine_omega_mode_active 0003                           __pdataBANK0 003D  
                            ??_waitch 0070                              ??_printf 0024  
                           ___latbits 0003                         __pcstackBANK0 0020  
                 __size_of_init_accel 0008           ??_determine_sword_was_swung 0071  
                   __size_of_init_pic 000B                     __size_of_init_isr 0008  
                    ___lwdiv@dividend 0072                         output_ir@i_72 0075  
                       output_ir@i_73 0077                              ?___lwdiv 0070  
                            ?___lwmod 0078                              ?_init_ir 0070  
                 __size_of_play_sound 0017                       output_ir@amount 0070  
                            _P1MDLBIT 7495                      ___lwdiv@quotient 0075  
                      __size_of_getch 0007                             _init_leds 00E9  
                           _init_uart 010A                        __size_of_putch 0007  
          ?_determine_packets_to_send 0070                              _PSMC1DBF 0EAA  
                            _PSMC1DCH 0EA4                              _PSMC1DCL 0EA3  
                            _PSMC1FFA 0EAD                              _PSMC1DBR 0EA9  
                            _PSMC1DCS 0E9B                              _PSMC1CLK 0E94  
                            _PSMC1CON 0E91                              _PSMC1MDL 0E92  
                            _PSMC1OEN 0E95                              _PSMC1INT 0EA0  
                            _PSMC1PHH 0EA2                              _PSMC1PHL 0EA1  
                            _PSMC1PHS 0E9A                              _PSMC1POL 0E96  
                            _PSMC1PRH 0EA6                              _PSMC1PRL 0EA5  
                            _PSMC1PRS 0E9C                             main@F7230 0037  
           _determine_sword_was_swung 00FC                            printf@flag 0029  
                          printf@prec 002A                             _output_ir 02B5  
             __size_of_display_health 0001                            ?_init_leds 0070  
                          ?_init_uart 0070                            putch@input 0070  
                        ??_init_accel 007E                      __size_of___lwdiv 0034  
                    __size_of___lwmod 002C                     output_ir@pkt_type 0079  
                          ?_output_ir 0070                      __size_of_init_ir 003C  
                     ___lwdiv@divisor 0070                            output_ir@i 0073  
                     ___lwdiv@counter 0077                              __ptext10 00C0  
                            __ptext11 011C                              __ptext12 01FE  
                            __ptext13 00D2                              __ptext14 0162  
                            __ptext15 018E                              __ptext16 00FC  
                            __ptext17 00CB                              __ptext18 014A  
                            __ptext19 00C2                    __end_of_init_accel 00E1  
                       __size_of_main 041B                              _init_pic 00F1  
                            _init_isr 00E1                          ??_play_sound 007E  
    determine_packets_to_send@packets 0071         __size_of_display_blade_lights 0017  
                           printf@val 002B   __end_of_determine_omega_mode_active 00C5  
         _determine_omega_mode_active 00C2                    __end_of_play_sound 014A  
                         ??_init_leds 007E                           ??_init_uart 0070  
       ??_determine_omega_mode_active 0070                      ___lwmod@dividend 007A  
                   __CFG_CLKOUTEN$OFF 0000                              printf@ap 0028  
                     ___lwmod@divisor 0078                        _display_health 00C0  
                         ??_output_ir 0071                       ___lwmod@counter 007D  
  __size_of_determine_sword_was_swung 000E           ??_determine_packets_to_send 0070  
            display_blade_lights@mode 002E                          getch@counter 0070  
